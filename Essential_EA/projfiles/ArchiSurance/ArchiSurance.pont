; Wed Apr 24 22:50:28 EDT 2024
; 
;+ (version "3.5")
;+ (build "Build 663")


(defclass %3ACLIPS_TOP_LEVEL_SLOT_CLASS "Fake class to save top-level slot information"
	(is-a USER)
	(role abstract)
	(multislot rto_for_business_criticalities
;+		(comment "The relative Business Criticalities of the EA elements to which this Response Time Objective should be applied")
		(type INSTANCE)
;+		(allowed-classes Business_Criticality)
		(create-accessor read-write))
	(single-slot sq_index
;+		(comment "An index value for a service quality, allowing them to be sequenced")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot rc_revenue_currency
;+		(comment "The currency in which the revenue is generated")
		(type INSTANCE)
;+		(allowed-classes Currency)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot provides_application_services
;+		(comment "Specifies the Application Services that are provided by an Application Provider")
		(type INSTANCE)
;+		(allowed-classes Application_Provider_Role)
;+		(inverse-slot role_for_application_provider)
		(create-accessor read-write))
	(multislot technology_node_platform_stack
;+		(comment "Defines the list of Technology Provider Roles that have been used to implement the Technology Node as a platform, e.g. Hardware, Operating System, built-in runtime software")
		(type INSTANCE)
;+		(allowed-classes Technology_Provider_Role)
		(create-accessor read-write))
	(single-slot contract_customer
;+		(comment "The customer of the products and / or services of the contract")
		(type INSTANCE)
;+		(allowed-classes Actor)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ap_business_criticality
;+		(comment "The relative business criticality of the Application Provider or Function")
		(type INSTANCE)
;+		(allowed-classes Business_Criticality)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot cust_journey_phase_to_channel_to_channel
;+		(comment "The Channel that is related to the Customer Journey Phase")
		(type INSTANCE)
;+		(allowed-classes Channel)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot decision_type
;+		(comment "Defines the nature of the Decision that was made, e.g. e.g. Data Standards Review, Project Prioritisation")
		(type INSTANCE)
;+		(allowed-classes Decision_Type)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot license_compliance_obligations
;+		(comment "The compliance obligations that are defined for this license")
		(type INSTANCE)
;+		(allowed-classes Compliance_Obligation)
;+		(inverse-slot compliance_obligation_licenses)
		(create-accessor read-write))
	(multislot principle_relevant_to_information_concepts
;+		(comment "")
		(type INSTANCE)
;+		(allowed-classes Information_Concept)
;+		(inverse-slot information_principles_relevant_to_concept)
		(create-accessor read-write))
	(multislot system_content_quality_review_escalations
;+		(comment "The escalations for the Content Quality Review")
		(type INSTANCE)
;+		(allowed-classes SYS_CONTENT_QUALITY_ESCALATION_TO_ACTOR_RELATION)
;+		(inverse-slot system_content_quality_escalation_to_actor_from_review)
		(create-accessor read-write))
	(multislot contained_application_services
;+		(comment "The sub components of an Application Function Architecture.")
		(type INSTANCE)
;+		(allowed-classes)
		(create-accessor read-write))
	(single-slot information_store_deployment_role
;+		(comment "The deployment role of the information store")
		(type INSTANCE)
;+		(allowed-classes Deployment_Role)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot arimt_used_in_application_reference_implementation
;+		(comment "The Application Reference Implementation Model in which this element is used")
		(type INSTANCE)
;+		(allowed-classes Application_Reference_Implementation)
;+		(cardinality 1 1)
;+		(inverse-slot application_reference_implementation_elements)
		(create-accessor read-write))
	(single-slot technology_architecture_display_label
;+		(comment "A text label that is displayed for usages of technology components in Technology Architectures.")
		(type STRING)
		(default "<component_used>")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot technology_assumptions
;+		(comment "The technology elements that are relevant to the assumption")
		(type INSTANCE)
;+		(allowed-classes Technology_Layer)
		(create-accessor read-write))
	(multislot bus_relations_contained_in_arch_states
;+		(comment "The architecture states that contain this business relationship")
		(type INSTANCE)
;+		(allowed-classes Architecture_State)
;+		(inverse-slot arch_state_business_relations)
		(create-accessor read-write))
	(single-slot ca_reasons_for_finding
;+		(comment "A summary of the reasons for the assessment findings")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot time_point_iso_8601
;+		(comment "The date  in ISO 8601 format (yyyy-mm-dd) represented by this timeline point")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot scl_cleared_roles_and_actors
;+		(comment "The Business Roles and Actors that have been granted the clearance level")
		(type INSTANCE)
;+		(allowed-classes Business_Role Actor)
		(create-accessor read-write))
	(single-slot app_pro_reads_data_rep
;+		(comment "Determines whether the Application Provider reads instances of the Data Representation")
		(type SYMBOL)
		(allowed-values Yes No Unknown)
		(default Unknown)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot enumeration_value
;+		(comment "The value for this enumeration")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot act_to_obj_for_element
;+		(comment "The element against which the objective has been defined for the Actor")
		(type INSTANCE)
;+		(allowed-classes EA_Class EA_Relation %3AEA_Graph_Relation)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot to_data_standard_relation
;+		(comment "The Data Standard that is the target (to end) of the relationship")
		(type INSTANCE)
;+		(allowed-classes Info_Data_Standard)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot cc_cost_end_date
;+		(comment "The end date for the cost component")
		(type INSTANCE)
;+		(allowed-classes Time)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot actor_to_job_to_job
;+		(comment "The Job Position taken on by the Individual Actor")
		(type INSTANCE)
;+		(allowed-classes Job_Position)
;+		(cardinality 1 1)
;+		(inverse-slot job_given_to_actors)
		(create-accessor read-write))
	(single-slot arat_used_in_application_reference_architecture
;+		(comment "The Application Reference Architecture in which this element is used")
		(type INSTANCE)
;+		(allowed-classes Application_Reference_Architecture)
;+		(cardinality 1 1)
;+		(inverse-slot application_reference_architecture_elements)
		(create-accessor read-write))
	(single-slot geocode_longitude
;+		(comment "Captures the geographic coordinate that specifies the east-west position of the geocode")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot afi_data_map_target
;+		(comment "Defines the target object(s) or attribute(s) in the mapping")
		(type INSTANCE)
;+		(allowed-classes Data_Representation_Type Information_Representation_Type)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(single-slot be_weighted_dep_from_element
;+		(comment "The element that has the dependency on the business environment factor")
		(type INSTANCE)
;+		(allowed-classes EA_Relation EA_Class)
;+		(cardinality 1 1)
;+		(inverse-slot bus_env_factor_weighted_dependencies)
		(create-accessor read-write))
	(multislot sl_security_classifications
;+		(comment "The security classifications assigned to this management/supporting element in the context of the enterprise")
		(type INSTANCE)
;+		(allowed-classes Security_Classification)
;+		(inverse-slot sc_classified_support_resources)
		(create-accessor read-write))
	(single-slot software_runtime_technology
;+		(comment "The technology product providing the application runtime services for this software component")
		(type INSTANCE)
;+		(allowed-classes Technology_Product_Role)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot project_lifecycle_status
;+		(comment "Represents the lifecycle status or phase of a change project")
		(type INSTANCE)
;+		(allowed-classes Project_Lifecycle_Status)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot app_func_impl_logic
;+		(comment "A set of statements describing the logic that is implemented by the function implementation")
		(type STRING)
		(create-accessor read-write))
	(single-slot ra_assessment_date_ISO8601
;+		(comment "The date at which the assessment of the Risk took place")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot viewer_icon_colour
;+		(comment "The colour for the icons in Viewer")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot decision_type_possible_results
;+		(comment "The list of Decision Results that are possible for the Decision Type")
		(type INSTANCE)
;+		(allowed-classes Decision_Result)
		(create-accessor read-write))
	(single-slot ea_reference
;+		(comment "A human readable, unique and universal reference for the element")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot control_to_element_control
		(type INSTANCE)
;+		(allowed-classes Control)
;+		(cardinality 0 1)
;+		(inverse-slot controlled_elements)
		(create-accessor read-write))
	(multislot contained_technology_instance_dependencies
;+		(comment "Set of Technology Instances (hardware and software) that a Technology Instance is dependent on.")
		(type INSTANCE)
;+		(allowed-classes Technology_Instance)
		(create-accessor read-write))
	(single-slot infrep_att_is_nullable
;+		(comment "Defines whether null is an allowed value for the Information Representation Attribute")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot technology_type
;+		(comment "Specification of the type of technology that this is an instance of. Select from the allowed values. Infrastructure is all software that isn't an instance of an application.")
		(type SYMBOL)
		(allowed-values Hardware Infrastructure_Software Application_Software)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot enumeration_value_for_classes
;+		(comment "The types of elements for which the enumeration  applies")
		(type INSTANCE)
;+		(allowed-classes %3AESSENTIAL-CLASS)
		(create-accessor read-write))
	(multislot contained_lifecycle_model_elements
;+		(comment "The set of elements that are used to define a Lifecycle Model.")
		(type INSTANCE)
;+		(allowed-classes Lifecycle_Model_Types)
;+		(inverse-slot used_in_lifecycle_model)
		(create-accessor read-write))
	(single-slot technology_principle_rationale
;+		(comment "Describes the rationale for a Technology Architecture Principle")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot cost_components
;+		(comment "The cost components that make up the overall cost")
		(type INSTANCE)
;+		(allowed-classes Cost_Component)
		(cardinality 1 ?VARIABLE)
;+		(inverse-slot cc_cost_component_of_cost)
		(create-accessor read-write))
	(single-slot report_classification_colour
;+		(comment "The code for the colour associated with this report classification")
		(type STRING)
		(default "#000000")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot sm_standard_strength
;+		(comment "Slot to capture the strength of the standard in terms of values such as Mandatory, Recommended, Permitted.")
		(type INSTANCE)
;+		(allowed-classes Standard_Strength)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot correlation_to_percent
;+		(comment "The percentage value for the quantitative correlation between EA elements")
		(type FLOAT)
		(range 0.0 1.0)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot bmiu_used_information
;+		(comment "The Information Concept/View that is being used in a Business Model Architecture")
		(type INSTANCE)
;+		(allowed-classes Information_View Information_Concept)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot sme_expertise_in_element
;+		(comment "The EA element in which the Actors have expertise")
		(type INSTANCE)
;+		(allowed-classes EA_Class)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot rc_revenue_component_amount
;+		(comment "The amount of money being earned")
		(type FLOAT)
		(default 0.0)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot implements_technology_components
;+		(comment "The list of Technology Components that this Technology Product can realise")
		(type INSTANCE)
;+		(allowed-classes Technology_Provider_Role)
;+		(inverse-slot role_for_technology_provider)
		(create-accessor read-write))
	(single-slot decision_date_iso_8601
;+		(comment "The date capturing when the decision was made in ISO 8601 format (yyyy-mm-dd)")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot My+ID
;+		(comment "")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot control_to_element_assessments
		(type INSTANCE)
;+		(allowed-classes Control_Assessment)
;+		(inverse-slot control_assessed_element)
		(create-accessor read-write))
	(single-slot report_pdf_margin_left
;+		(comment "The size of the margin in pixels on the left of the generated report pdf")
		(type INTEGER)
		(range 0 %3FVARIABLE)
		(default 0)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot performs_physical_processes
;+		(comment "The physical business processes that this actor peforms in the given role")
		(type INSTANCE)
;+		(allowed-classes Physical_Process)
;+		(inverse-slot process_performed_by_actor_role)
		(create-accessor read-write))
	(multislot ca_milestones
;+		(comment "Defines the milestones associated with this change activity")
		(type INSTANCE)
;+		(allowed-classes Change_Milestone)
;+		(inverse-slot cm_change_activity)
		(create-accessor read-write))
	(multislot app_pro_to_inforep_exchanges
;+		(comment "The information exchanges that involve this information provided by the application")
		(type INSTANCE)
;+		(allowed-classes APP_PRO_TO_INFOREP_EXCHANGE_RELATION)
;+		(inverse-slot atire_app_pro_to_inforep)
		(create-accessor read-write))
	(single-slot is_business_role_type
;+		(comment "Slot from a Business Role to the Business Role Type, that the Role is an instance/type of.")
		(type INSTANCE)
;+		(allowed-classes Business_Role_Type)
;+		(cardinality 0 1)
;+		(inverse-slot is_realised_by_roles)
		(create-accessor read-write))
	(multislot app_physical_contained_in_arch_states
;+		(comment "The architecture states that contain this physical application element")
		(type INSTANCE)
;+		(allowed-classes Architecture_State)
;+		(inverse-slot arch_state_application_physical)
		(create-accessor read-write))
	(single-slot information_view_id
;+		(comment "A unique reference for the Information View/Attribute")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ca_forecast_end_date
;+		(comment "The date by when the change activity is forecast to end")
		(type INSTANCE)
;+		(allowed-classes Time)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot system_cq_review_policy_instance_table_header_template_path
;+		(comment "The path to the content template that should be used to generate the header and footer of the reviewer dashboard instance table")
		(type STRING)
		(default "editors/enterprise/content-governance-dashboard/default-content-reviewer-instance-table-header-template.html")
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot sti_geo_scope
;+		(comment "Defines the geographies that are in scope for the impacts of the trend implication")
		(type INSTANCE)
;+		(allowed-classes Geographic_Region)
		(create-accessor read-write))
	(multislot contained_roadmap_relations
;+		(comment "The set of roadmap milestone transitions that are defined in a particular roadmap model.")
		(type INSTANCE)
;+		(allowed-classes %3ARoadmap-Model-Relation)
;+		(inverse-slot %3Acontained_in_roadmap)
		(create-accessor read-write))
	(single-slot decision_from_meeting
;+		(comment "Defines the Governance Meeting in which the decision was made")
		(type INSTANCE)
;+		(allowed-classes Governance_Meeting)
;+		(cardinality 0 1)
;+		(inverse-slot gm_decisions)
		(create-accessor read-write))
	(single-slot ca_remediation_completion_date_ISO8601
;+		(comment "The target in which the assessment finding was remediated")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot contract_component_to_element
;+		(comment "Slot to manage the element that is being provided by the contract")
		(type INSTANCE)
;+		(allowed-classes EA_Class)
		(create-accessor read-write))
	(multislot control_implemented_by_solutions
;+		(comment "The business, information and/or IT solutions that are in place to implement this control")
		(type INSTANCE)
;+		(allowed-classes Control_Solution)
;+		(inverse-slot control_solution_for_controls)
		(create-accessor read-write))
	(multislot obligation_to_contracts
;+		(comment "The contracts for which this contractual obligation applies")
		(type INSTANCE)
;+		(allowed-classes Contract)
		(cardinality 1 ?VARIABLE)
;+		(inverse-slot contract_for_obligations)
		(create-accessor read-write))
	(single-slot budget_year
;+		(comment "The year for which a budgetary element is defined")
		(type INSTANCE)
;+		(allowed-classes Year)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot system_last_modified_author_id
;+		(comment "The id of the user that most recently modified the instance")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot actor_plays_role
;+		(comment "Specifies the list of roles that this actor plays in processes using link class/relation")
		(type INSTANCE)
;+		(allowed-classes ACTOR_TO_ROLE_RELATION)
;+		(inverse-slot act_to_role_from_actor)
		(create-accessor read-write))
	(multislot bus_principle_inf_implications
;+		(comment "Commentary describing the information implications of the business principle")
		(type STRING)
		(create-accessor read-write))
	(single-slot app_pro_persists_info_rep
;+		(comment "Defines whether the Application Provider persists data in the form of the Information Representation")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default FALSE)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot product_concept_information_held
;+		(comment "The Information Concepts that are held about a Product Concept")
		(type INSTANCE)
;+		(allowed-classes Information_Concept)
		(create-accessor read-write))
	(single-slot report_menu_item_is_enabled
;+		(comment "")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default TRUE)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot editor_supporting_config
;+		(comment "Used to hold configuration that is specific to this Editor instance (typically in JSON format)")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot software_architecture_layer
;+		(comment "The architecture layer of the element contained within the Software Architecture of an Application Provider")
		(type INSTANCE)
;+		(allowed-classes Software_Architecture_Layer)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot roadmap_model_group_subjects
;+		(comment "The subject(s) elements that are the focus for the Roadmaps contained in this group")
		(type INSTANCE)
;+		(allowed-classes EA_Relation EA_Class)
		(create-accessor read-write))
	(single-slot data_object_standard_definition
;+		(comment "This is the semantic definition that this standard uses for the associated logical Data Object")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot from_role_skill_relation
;+		(comment "Slot holding the reference to the instance of a Business Role that requires a Skill")
		(type INSTANCE)
;+		(allowed-classes Individual_Business_Role_At_Level)
;+		(cardinality 1 1)
;+		(inverse-slot ibral_required_skill_at_levels)
		(create-accessor read-write))
	(single-slot ms_criticality
;+		(comment "Defines the relative criticality of the Managed Service")
		(type INSTANCE)
;+		(allowed-classes Managed_Service_Criticality)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot arch_state_information_logical
;+		(comment "Slot to group the set of architectures from the Information Logical layer in an Architecture State")
		(type INSTANCE)
;+		(allowed-classes Information_Logical)
;+		(inverse-slot info_logical_contained_in_arch_states)
		(create-accessor read-write))
	(multislot provided_by_application_provider_roles
;+		(comment "The set of Application Provider Roles that provide the Application Service")
		(type INSTANCE)
;+		(allowed-classes Application_Provider_Role)
;+		(inverse-slot implementing_application_service)
		(create-accessor read-write))
	(single-slot appfun_to_bus_to_busproc
;+		(comment "The Business Process that is supported by an Application Function")
		(type INSTANCE)
;+		(allowed-classes Business_Process_Type)
;+		(cardinality 1 1)
;+		(inverse-slot bp_supported_by_app_fun)
		(create-accessor read-write))
	(single-slot ap_delivery_model
;+		(comment "Describes the manner in which the funcationality of the Application Provider is delivered (e.g. On-Site, Hosted, SaaS)")
		(type INSTANCE)
;+		(allowed-classes Application_Delivery_Model)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot cost_code
;+		(comment "An optional, unique code for the cost")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot indvact_reportsto_indvact_to_actor
;+		(comment "The Individual Actor who is being reported to")
		(type INSTANCE)
;+		(allowed-classes Individual_Actor)
;+		(cardinality 1 1)
;+		(inverse-slot indvactor_managed_individuals)
		(create-accessor read-write))
	(multislot al_managed_by_services
;+		(comment "The managed services that are related to this Application element")
		(type INSTANCE)
;+		(allowed-classes Managed_Service)
;+		(inverse-slot ms_managed_app_elements)
		(create-accessor read-write))
	(multislot composed_of_application_services
;+		(comment "The set of Application Services that make up a Composite Application Service")
		(type INSTANCE)
;+		(allowed-classes Application_Service)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(single-slot pw_widget_template
;+		(comment "The template used to render the widget")
		(type INSTANCE)
;+		(allowed-classes Widget_Template)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot strategic_plan_for_elements
;+		(comment "The relationships to architectural element(s) to which this plan applies")
		(type INSTANCE)
;+		(allowed-classes PLAN_TO_ELEMENT_RELATION)
;+		(inverse-slot plan_to_element_plan)
		(create-accessor read-write))
	(multislot technology_product_functions_offered
		(type INSTANCE)
;+		(allowed-classes Technology_Function)
		(create-accessor read-write))
	(single-slot weighted_dependency_weighting
;+		(comment "The relatative weighting for this dependency")
		(type FLOAT)
		(range 0.0 1.0)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot system_essential_class_slot_priorities
;+		(comment "The list of Slots that should be populated in instances of the Class and their relative priority")
		(type INSTANCE)
;+		(allowed-classes SYS_CLASS_SLOT_PRIORITY)
;+		(inverse-slot system_essential_slot_priority_for_class)
		(create-accessor read-write))
	(single-slot contained_in_process_flow
;+		(comment "The process flow in which this relation occurs")
		(type INSTANCE)
;+		(allowed-classes Business_Process_Flow)
;+		(cardinality 0 1)
;+		(inverse-slot contained_process_relations)
		(create-accessor read-write))
	(single-slot ms_start_date_ISO8601
;+		(comment "Defines the date from when the managed service will become available")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot lifecycle_model_type_label
;+		(comment "A label for a Lifecycle Model Type element that is used on the Lifecycle Model diagram.")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot vsg_display_label
;+		(comment "The short label for the Value Stage")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot policy_implications
;+		(comment "Describes the implications of applying the policy for the enterprise")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot sr_goal_statements
;+		(comment "A summary of the goals that the personas are looking to achieve if the requirement is met")
		(type INSTANCE)
;+		(allowed-classes Commentary)
		(create-accessor read-write))
	(single-slot strategic_trend_from_year_iso8601
;+		(comment "The year from when the strategic trend is expected to start taking effect")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot license_start_date
;+		(comment "DEPRECATED: The equivalent of this property has been moved to the CONTRACT_COMPONENT_RELATION class")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot app_pro_role_supports_phys_proc
;+		(comment "Specifies the Physical Business processes supported by an Application Provider Role")
		(type INSTANCE)
;+		(allowed-classes APP_PRO_TO_PHYS_BUS_RELATION)
;+		(inverse-slot apppro_to_physbus_from_appprorole)
		(create-accessor read-write))
	(single-slot contract_number_of_units
;+		(comment "DEPRECATED: The equivalent of this property has been moved to the CONTRACT_COMPONENT_RELATION class")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot sqvms_map_score
;+		(comment "The score given to the intersection between the Service Quality Values on the X, Y and Z axes")
		(type FLOAT)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot tao_measures
;+		(comment "Captures the Technology Service Qualities Values that will measure success in meeting the Technology Objective")
		(type INSTANCE)
;+		(allowed-classes Technology_Service_Quality_Value)
		(create-accessor read-write))
	(multislot type_of_application
;+		(comment "A provider can be considered a type of this Application")
		(type INSTANCE)
;+		(allowed-classes Application_Family)
;+		(inverse-slot groups_applications)
		(create-accessor read-write))
	(multislot arch_state_technology_conceptual
;+		(comment "Slot to group the set of architectures from the Technology Conceptual layer in an Architecture State")
		(type INSTANCE)
;+		(allowed-classes Technology_Conceptual)
;+		(inverse-slot tech_conceptual_contained_in_arch_states)
		(create-accessor read-write))
	(multislot arch_state_business_logical
;+		(comment "Slot to group the set of architectures from the Business Logical Layer in an Architecture State")
		(type INSTANCE)
;+		(allowed-classes Business_Logical Business_Service_Quality_Value Business_Service_Quality APP_FUN_TO_BUS_RELATION APP_FUNIMPL_TO_BUS_RELATION APP_APP_TO_BUS_RELATION APP_SVC_TO_BUS_RELATION BUSPROCTYPE_TO_INFOVIEW_RELATION ACTOR_TO_ROLE_RELATION)
;+		(inverse-slot bus_logical_contained_in_arch_states)
		(create-accessor read-write))
	(multislot sw_arch_relations
;+		(comment "The relationships contained within this logical software architecture")
		(type INSTANCE)
;+		(allowed-classes SCA-RELATION)
;+		(inverse-slot contained_in_logical_sw_arch)
		(create-accessor read-write))
	(multislot contract_attributes
;+		(comment "Slot to manage the set of attribute values that apply to an instance of a Contract.")
		(type INSTANCE)
;+		(allowed-classes Contract_Attribute_Value)
		(create-accessor read-write))
	(single-slot infrep_att_index
;+		(comment "Defines the sequencing position of the Information Representation Attribute within its parent Information Representation")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot ba_sub_business_tasks
;+		(comment "Captures business tasks that are performed as part of the business activity. Note: this is an alternative to defining a Business Activity Flow")
		(type INSTANCE)
;+		(allowed-classes Business_Task)
		(create-accessor read-write))
	(single-slot programme_target_end_date
;+		(comment "DEPRECATED. the target end date for the programme")
		(type INSTANCE)
;+		(allowed-classes Time)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot vs_trigger_business_roles
;+		(comment "Defines the business roles or business role types that can trigger the Value Stream")
		(type INSTANCE)
;+		(allowed-classes Business_Role_Type Business_Role)
		(create-accessor read-write))
	(single-slot portal_panel_section_sequence
;+		(comment "The sequence in which the panel sections should appear")
		(type INTEGER)
		(default 0)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot ccr_license
;+		(comment "The License describing the terms by which the EA element can be used under the Contract")
		(type INSTANCE)
;+		(allowed-classes License)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot contained_in_application_capability
;+		(comment "The Application Capabilities that contain an Application Capability. The contained capability is used as part of the decomposition of the containING capability")
		(type INSTANCE)
;+		(allowed-classes Application_Capability)
;+		(inverse-slot contained_app_capabilities)
		(create-accessor read-write))
	(single-slot risk_mitigation_comment
;+		(comment "A summary of the recommended Controls that should be established to mitigate the risk")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot risk_assessments
;+		(comment "One or more assessments of the impact and probablity of the Risk")
		(type INSTANCE)
;+		(allowed-classes Risk_Assessment)
		(create-accessor read-write))
	(multislot activity_implemented_by_physical
;+		(comment "Slot to define the set of Physical Activities that implement a Business Activity")
		(type INSTANCE)
;+		(allowed-classes Physical_Activity)
;+		(inverse-slot instance_of_business_activity)
		(create-accessor read-write))
	(single-slot containing_technology_deployment_architecture
;+		(comment "The Technology Depoyment Architecture in which this instance is contained")
		(type INSTANCE)
;+		(allowed-classes Technology_Deployment_Architecture)
;+		(cardinality 1 1)
;+		(inverse-slot technology_deployment_relations)
		(create-accessor read-write))
	(multislot %3ATECHNOLOGY-PROTOCOL
		(type INSTANCE)
;+		(allowed-classes Technology_Protocol_Usage)
		(create-accessor read-write))
	(single-slot pws_theme
;+		(comment "The theme to which the style belongs")
		(type INSTANCE)
;+		(allowed-classes Widget_Theme)
;+		(cardinality 1 1)
;+		(inverse-slot pwt_styles)
		(create-accessor read-write))
	(multislot contained_physical_sub_processes
;+		(comment "The set of physical processes that make up this Physical Process aggregation.")
		(type INSTANCE)
;+		(allowed-classes Physical_Process_Type)
;+		(inverse-slot parent_physical_processes)
		(create-accessor read-write))
	(multislot related_application_elements
;+		(comment "DEPRECATED: Application EA elements that are related to this issue\\n\\nREPLACED BY: sr_requirement_for_elements")
		(type INSTANCE)
;+		(allowed-classes Application_Service Application_Provider Application_Capability Application_Deployment)
;+		(inverse-slot known_app_issue)
		(create-accessor read-write))
	(multislot sr_for_strat_trend_implications
;+		(comment "Represents the Strategic Trend Implications that could be partially, or fully addressed if the requirement is met")
		(type INSTANCE)
;+		(allowed-classes Strategic_Trend_Implication)
		(create-accessor read-write))
	(multislot tmp_assigned_technology_elements
;+		(comment "The technology elements to which this policy applies")
		(type INSTANCE)
;+		(allowed-classes Technology_Node Technology_Deployment_Group Technology_Instance Technology_Domain Technology_Protocol Technology_Function Technology_Product_Family Technology_Provider Technology_Capability Technology_Provider_Role)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(single-slot diagram_label
;+		(comment "")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot ms_managed_bus_elements
;+		(comment "Defines the business elements that contribute to the service")
		(type INSTANCE)
;+		(allowed-classes Business_Relationship Business_Layer)
;+		(inverse-slot bl_managed_by_services)
		(create-accessor read-write))
	(single-slot report_pdf_margin_bottom
;+		(comment "The size of the margin in pixels at the bottom of the generated report pdf")
		(type INTEGER)
		(range 0 %3FVARIABLE)
		(default 0)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot relevant_application_principles
		(type INSTANCE)
;+		(allowed-classes Application_Architecture_Principle)
;+		(inverse-slot application_principle_relevant_to_application_capabilities)
		(create-accessor read-write))
	(multislot application_provider_purpose
;+		(comment "Slot to capture the purpose of an application provider, in terms of the type of solution it provides, e.g. Business Application, Integration, Service and so on. A vocabulary of these purpose types is defined by the instances of the Application_Purpose enumeration class.")
		(type INSTANCE)
;+		(allowed-classes Application_Purpose)
		(create-accessor read-write))
	(multislot risk_related_information
;+		(comment "The set of information elements that are related to the risk")
		(type INSTANCE)
;+		(allowed-classes Information_Layer)
		(create-accessor read-write))
	(single-slot pu_used_in_static_product_architecture
;+		(comment "The static product architecture that contains this element")
		(type INSTANCE)
;+		(allowed-classes Static_Product_Architecture)
;+		(cardinality 1 1)
;+		(inverse-slot static_product_architecture_elements)
		(create-accessor read-write))
	(single-slot report_pdf_margin_top
;+		(comment "The size of the margin in pixels at the top of the generated report pdf")
		(type INTEGER)
		(range 0 %3FVARIABLE)
		(default 0)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot report_constant_value
;+		(comment "The value of the Report Constant")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot implemented_by_data_reps
;+		(comment "The set of data representations that implement the data object")
		(type INSTANCE)
;+		(allowed-classes Data_Representation)
;+		(inverse-slot implemented_data_object)
		(create-accessor read-write))
	(single-slot service_quality_priority
;+		(comment "The priority of of a particular Service Quality.")
		(type SYMBOL)
		(allowed-values High Medium Low)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot editor_component_configurator
;+		(comment "The configurator for this Editor Component")
		(type INSTANCE)
;+		(allowed-classes Editor_Component_Configurator)
;+		(cardinality 0 1)
;+		(inverse-slot editor_component_config_for_component)
		(create-accessor read-write))
	(multislot rmg_roadmap_models
;+		(comment "The roadmap models contained within this roadmap model group")
		(type INSTANCE)
;+		(allowed-classes Roadmap_Model Roadmap)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(multislot cost_for_elements
;+		(comment "The EA elements to which this Cost is associated.")
		(type INSTANCE)
;+		(allowed-classes EA_Class EA_Relation %3AEA_Graph_Relation)
		(cardinality 1 ?VARIABLE)
;+		(inverse-slot costs_for_element)
		(create-accessor read-write))
	(single-slot relation_contained_in_tech_product_architecture
;+		(comment "The Technology Product Architecture that this relation belongs to")
		(type INSTANCE)
;+		(allowed-classes Technology_Product_Architecture)
;+		(cardinality 0 1)
;+		(inverse-slot contained_relations_in_tech_product_architecture)
		(create-accessor read-write))
	(single-slot static_app_provider_arch_label
;+		(comment "the display label for an element contained within an static application provider architecture")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot bmd_directive_statements
;+		(comment "The statements describing the directives for the adoption of the operating model category with the element type")
		(type INSTANCE)
;+		(allowed-classes Commentary)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(single-slot defining_business_capability_chain
;+		(comment "The flow of Business Capabilities (Business Capability Chain) that defines this Business Capability")
		(type INSTANCE)
;+		(allowed-classes Business_Capability_Chain)
;+		(cardinality 0 1)
;+		(inverse-slot defines_business_capability)
		(create-accessor read-write))
	(multislot required_technology_service_quality
;+		(comment "The required Technology Service Qualities for the required Technology Capability")
		(type INSTANCE)
;+		(allowed-classes Technology_Service_Quality_Value)
		(create-accessor read-write))
	(single-slot budget_start_date
;+		(comment "The start date from which a budgetary element is defined")
		(type INSTANCE)
;+		(allowed-classes Gregorian)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot located_at_site
;+		(comment "The site at which a HARDWARE Technology Instance is deployed at.\nThis slot should not be used by SOFTWARE Technology Instances.")
		(type INSTANCE)
;+		(allowed-classes Site)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot actor_has_skills
;+		(comment "Defines the set of skills that a particular Actor can provide, using a relationship class to define qualities of the Actor's skills")
		(type INSTANCE)
;+		(allowed-classes ACTOR_TO_SKILL_RELATION)
;+		(inverse-slot from_actor_skill_relation)
		(create-accessor read-write))
	(single-slot cust_journey_phase_to_emotion_to_emotion
;+		(comment "The Emotion that is related to the Customer Journey Phase")
		(type INSTANCE)
;+		(allowed-classes Customer_Emotion)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot ra_end_date
;+		(comment "The date up to which point the resource allocation ends")
		(type INSTANCE)
;+		(allowed-classes Time)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot sti_priority_score
;+		(comment "The relative priority score for the Trend Implication")
		(type INTEGER)
		(default 5)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot group_lead_individual_actor
;+		(comment "The individual actors (or Job Positions) that are defined as leading/managing the Group Actor")
		(type INSTANCE)
;+		(allowed-classes Individual_Actor)
		(create-accessor read-write))
	(single-slot plan_to_element_change_action
;+		(comment "The action that the plan is performing on the EA element")
		(type INSTANCE)
;+		(allowed-classes Planning_Action)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot representation_technology
;+		(comment "Technology Product  that is used to represent the Information in the View. This captures the Technology Product that is providing the Technology Function, i.e. the role the Technology Product is playing in this usage by the representation")
		(type INSTANCE)
;+		(allowed-classes Technology_Product_Role)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot technology_capability_architecture_using_capability
;+		(comment "The Technology Capability Architecture that a Technology Capability Usage appears in.")
		(type INSTANCE)
;+		(allowed-classes Technology_Capability_Architecture)
;+		(cardinality 1 1)
;+		(inverse-slot contained_technology_capability_usages)
		(create-accessor read-write))
	(single-slot editor_component_type
;+		(comment "Defines the nature of the Editor Component from a UI perspective, e.g. Tab, Panel or Widget")
		(type INSTANCE)
;+		(allowed-classes Editor_Component_Type)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot ivs_standard_info_rep
;+		(comment "The information representation that is a standard for the information view")
		(type INSTANCE)
;+		(allowed-classes Information_Representation)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot io_target_date
;+		(comment "The target date for achieving the objective.")
		(type INSTANCE)
;+		(allowed-classes Time)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot inverse_of_technology_instance_attributes
;+		(comment "The inverse relation from an Attribute Value back to the meta class instance that has this Attribute Value.")
		(type INSTANCE)
;+		(allowed-classes Technology_Instance)
;+		(inverse-slot technology_instance_attributes)
		(create-accessor read-write))
	(single-slot tao_target_date
;+		(comment "The target date for achieving the objective")
		(type INSTANCE)
;+		(allowed-classes Time)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot technology_deployment_relations
;+		(comment "The TNU-TO-TNU relations in the architecture. These model the Technology Node dependencies.")
		(type INSTANCE)
;+		(allowed-classes %3ATNU-TO-TNU-RELATION)
;+		(inverse-slot containing_technology_deployment_architecture)
		(create-accessor read-write))
	(multislot constraint_related_support
;+		(comment "The set of EA Support elements that are related to the constraint.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
		(create-accessor read-write))
	(multislot software_physical_deployments
;+		(comment "The physical deployments that exist for this software component")
		(type INSTANCE)
;+		(allowed-classes Application_Deployment)
;+		(inverse-slot deployment_of_software_components)
		(create-accessor read-write))
	(single-slot ao_target_date
;+		(comment "The target date for achieving the objective")
		(type INSTANCE)
;+		(allowed-classes Time)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot delivers_app_func_impl
;+		(comment "Specifies the set of Application Function Implementations that this software component delivers")
		(type INSTANCE)
;+		(allowed-classes Application_Function_Implementation)
;+		(inverse-slot inverse_of_delivers_app_func_impl)
		(create-accessor read-write))
	(multislot arch_state_business_physical
;+		(comment "Slot to group the set of architectures from the Business Physical layer in an Architecture State")
		(type INSTANCE)
;+		(allowed-classes Business_Physical APP_PRO_TO_PHYS_BUS_RELATION PHYSBUSPROC_TO_APPINFOREP_RELATION)
;+		(inverse-slot bus_physical_contained_in_arch_states)
		(create-accessor read-write))
	(multislot product_feature_implementations
;+		(comment "The implementations of the product features provided by this product")
		(type INSTANCE)
;+		(allowed-classes Product_Feature_Implementation)
;+		(inverse-slot pfi_feature_implementation_for_product)
		(create-accessor read-write))
	(single-slot dmp_reponsibility_aspect
;+		(comment "Defines the aspect of data governance for which the policy is being defined")
		(type INSTANCE)
;+		(allowed-classes InfoData_Responsibilty_Aspect)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot bmc_architecture
;+		(comment "The architecure describing the dependencies between reference elements that comprise the Business Model Configuration")
		(type INSTANCE)
;+		(allowed-classes Business_Model_Configuration_Architecture)
;+		(cardinality 0 1)
;+		(inverse-slot architecture_of_business_model_configuration)
		(create-accessor read-write))
	(single-slot number_of_deployed_instances_application
;+		(comment "The number of instances of an Application Deployment in this group")
		(type INTEGER)
		(default 1)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot bef_correlation_from_element
;+		(comment "The element that has the correlation with the business environment factor")
		(type INSTANCE)
;+		(allowed-classes EA_Relation EA_Class)
;+		(cardinality 1 1)
;+		(inverse-slot bus_env_factor_correlations)
		(create-accessor read-write))
	(multislot requires_skill_types
;+		(comment "Slot to capture the set of Skill Types that have been identified as required if this capability is to be realised.")
		(type INSTANCE)
;+		(allowed-classes Skill_Type)
;+		(inverse-slot skill_type_required_by_capability)
		(create-accessor read-write))
	(multislot app_logical_contained_in_arch_states
;+		(comment "The architecture states that contain this logical application element")
		(type INSTANCE)
;+		(allowed-classes Architecture_State)
;+		(inverse-slot arch_state_application_logical)
		(create-accessor read-write))
	(single-slot ccr_start_date_ISO8601
;+		(comment "Defines the date from which the use of the EA element is permitted")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot objective_supports_goals
;+		(comment "The strategic goals that are supported by this objective")
		(type INSTANCE)
;+		(allowed-classes Business_Goal Application_Architecture_Goal Information_Architecture_Goal Technology_Architecture_Goal)
;+		(inverse-slot goal_supported_by_objectives)
		(create-accessor read-write))
	(single-slot apppro_to_inforep_to_datarep_from_appro_to_inforep
;+		(comment "Describes the context in which the Data Representation is used (i.e the Application Provider and containing Information Representation)")
		(type INSTANCE)
;+		(allowed-classes APP_PRO_TO_INFOREP_RELATION)
;+		(cardinality 1 1)
;+		(inverse-slot operated_data_reps)
		(create-accessor read-write))
	(multislot business_model_configurations
;+		(comment "Defines the configurations of enterprise elements that are required to deliver the business model in specific contexts")
		(type INSTANCE)
;+		(allowed-classes Business_Model_Configuration)
;+		(inverse-slot bmc_for_business_model)
		(create-accessor read-write))
	(single-slot app_fun_impl_to_tech_TO_techcap
;+		(comment "The Technology Capability that the Application Function Implementation requires, in a APP_FUNCIMP_TO_TECH_CAP_RELATION")
		(type INSTANCE)
;+		(allowed-classes Technology_Capability)
;+		(cardinality 1 1)
;+		(inverse-slot tech_cap_supports_appfunimpl)
		(create-accessor read-write))
	(single-slot system_content_quality_last_reviewer_id
;+		(comment "The id of the person that most recently reviewed the content quality of this element")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot realises_business_capability
;+		(comment "The business capability that this process realises.")
		(type INSTANCE)
;+		(allowed-classes Business_Capability)
;+		(inverse-slot realised_by_business_processes)
		(create-accessor read-write))
	(multislot viewer_code_libraries
;+		(comment "Defines the 3rd party libraries that supports the execution of this Editor Component")
		(type INSTANCE)
;+		(allowed-classes Viewer_Code_Library)
		(create-accessor read-write))
	(single-slot data_object_individual_owner
;+		(comment "DEPRECATED - Slot to capture the owner (individual) of a Data Object in terms of an Individual Actor in the business layer")
		(type INSTANCE)
;+		(allowed-classes Individual_Actor)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot software_architecture_of_app_provider
;+		(comment "The Application Provider which this software architecture is describing")
		(type INSTANCE)
;+		(allowed-classes Application_Provider)
;+		(cardinality 0 1)
;+		(inverse-slot has_software_architecture)
		(create-accessor read-write))
	(single-slot control_assessor
;+		(comment "The Actor performing or has performed the assessment")
		(type INSTANCE)
;+		(allowed-classes Actor)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot channel_type_channels
;+		(comment "The specific channels of this type")
		(type INSTANCE)
;+		(allowed-classes Channel)
;+		(inverse-slot channel_type)
		(create-accessor read-write))
	(multislot report_parameters
;+		(comment "The list of pre-defined parameters for this report")
		(type INSTANCE)
;+		(allowed-classes Report_Parameter)
;+		(inverse-slot report_parameter_for_report)
		(create-accessor read-write))
	(multislot vs_product_types
;+		(comment "Defines the types of Product to which the Value Stream is applied")
		(type INSTANCE)
;+		(allowed-classes Product_Type)
		(create-accessor read-write))
	(single-slot pt_static_architecture
;+		(comment "A static architecture for the product type, describing its dependencies on other product types")
		(type INSTANCE)
;+		(allowed-classes Static_Product_Type_Architecture)
;+		(cardinality 0 1)
;+		(inverse-slot static_architecture_of_product_type)
		(create-accessor read-write))
	(single-slot skill_level
;+		(comment "Skill level quality on a skills relationship the defines the level of skill that is available or is required.")
		(type INSTANCE)
;+		(allowed-classes Skill_Level)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot compliance_obligation_licenses
;+		(comment "The licenses for which this compliance obligation applies")
		(type INSTANCE)
;+		(allowed-classes License)
;+		(inverse-slot license_compliance_obligations)
		(create-accessor read-write))
	(multislot inf_principle_tech_implications
;+		(comment "Commentary describing the technology implications of the information principle")
		(type STRING)
		(create-accessor read-write))
	(multislot mf_managed_application_elements
;+		(comment "Defines the scope of application elements that are managed by this framework")
		(type INSTANCE)
;+		(allowed-classes Application_Relationship Application_Layer)
		(create-accessor read-write))
	(single-slot busprocttype_to_busprocfam_busproctype
;+		(comment "The Business Process Type that is part of the Business Process Fanily")
		(type INSTANCE)
;+		(allowed-classes Business_Process_Type)
;+		(cardinality 1 1)
;+		(inverse-slot busproctype_in_busprocfamily)
		(create-accessor read-write))
	(multislot product_type_instances
;+		(comment "The Products that are instances of a Product Type.")
		(type INSTANCE)
;+		(allowed-classes Product)
;+		(inverse-slot instance_of_product_type)
		(create-accessor read-write))
	(single-slot app_pro_to_dataobj_req_to_dataobj
;+		(comment "The Data Object that is required by the Application")
		(type INSTANCE)
;+		(allowed-classes Data_Object)
;+		(cardinality 1 1)
;+		(inverse-slot data_obj_required_by_apps)
		(create-accessor read-write))
	(multislot provided_function_relations
;+		(comment "The TFU-PROVIDED_BY-TCU relations modelling the Functions that are provided by Technology Components.")
		(type INSTANCE)
;+		(allowed-classes TFU-PROVIDED_BY-TCU-RELATION)
		(create-accessor read-write))
	(single-slot appfunimpl_to_physbus_to_busproc
;+		(comment "The Business Process that is supported by an Application Function Implementation")
		(type INSTANCE)
;+		(allowed-classes Physical_Process_Type)
;+		(cardinality 1 1)
;+		(inverse-slot phys_bp_supported_by_app_funimpl)
		(create-accessor read-write))
	(multislot infrep_att_derived_from_datarep_atts
;+		(comment "Lists the data representation attributes from which the information view attribute is derived")
		(type INSTANCE)
;+		(allowed-classes Data_Representation_Attribute Information_Representation_Attribute)
		(create-accessor read-write))
	(single-slot revenue_code
;+		(comment "An optional, unique code for the revenue")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot activity_peformed_at_site
;+		(comment "The Site at which this Physical Activity is performed.")
		(type INSTANCE)
;+		(allowed-classes Site)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot report_menu_class
;+		(comment "Defines the meta-class that this menu is defined for")
		(type INSTANCE)
;+		(allowed-classes %3ASTANDARD-CLASS)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(multislot info_relations_contained_in_arch_states
;+		(comment "The architecture states that contain this information relationship")
		(type INSTANCE)
;+		(allowed-classes Architecture_State)
;+		(inverse-slot arch_state_information_relations)
		(create-accessor read-write))
	(single-slot product_type_internal_facing
;+		(comment "Defines whether the Product Type is internal facing.")
		(type SYMBOL)
		(allowed-values Yes No Unknown)
		(default Unknown)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ca_actual_start_date
;+		(comment "The date from when a change activity actually started")
		(type INSTANCE)
;+		(allowed-classes Time)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot cust_journey_phase_to_experience_to_experience
;+		(comment "The Customer Experience that is related to the Customer Journey Phase")
		(type INSTANCE)
;+		(allowed-classes Customer_Experience_Rating)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot short_name
;+		(comment "An abbreviatted short name for the EA element")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot contained_in_information_store
;+		(comment "The information store within which this Physical Data Object is stored")
		(type INSTANCE)
;+		(allowed-classes Information_Store)
;+		(cardinality 1 1)
;+		(inverse-slot contained_physical_data_entities)
		(create-accessor read-write))
	(multislot cost_types_for_element
;+		(comment "Defines the specific types of cost associated with this element")
		(type INSTANCE)
;+		(allowed-classes Cost_Component_Type)
		(create-accessor read-write))
	(single-slot ms_lifecycle_status
;+		(comment "Defines the lifecycle status of the Managed Service")
		(type INSTANCE)
;+		(allowed-classes Managed_Service_Lifecycle_Status)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot product_type_sourced_externally
;+		(comment "Determines if this Product Type is sourced from an external enterprise")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default FALSE)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot contained_application_function_components
;+		(comment "The Application Function Usages and Application Service Usages that make up the architecture")
		(type INSTANCE)
;+		(allowed-classes Application_Service_Architecture_Type)
;+		(inverse-slot used_in_dynamic_application_service_architecture)
		(create-accessor read-write))
	(single-slot report_pdf_paper_width
;+		(comment "The width in inches of the generated report pdf. The default value of 15 provides the best results for A4")
		(type INTEGER)
		(default 15)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot report_parameter1
;+		(comment "An optional parameter that can be passed to the report - DEPRECATED")
		(type INSTANCE)
;+		(allowed-classes EA_Class)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot used_in_business_activity_flow
;+		(comment "The business activity flow in which this task is used")
		(type INSTANCE)
;+		(allowed-classes Business_Activity_Flow)
;+		(cardinality 0 1)
;+		(inverse-slot business_tasks_used)
		(create-accessor read-write))
	(multislot principle_tech_implications_synonyms
;+		(comment "Captures synonyms for the technology implications of the principle")
		(type INSTANCE)
;+		(allowed-classes Synonym)
		(create-accessor read-write))
	(single-slot belongs_to_technology_domain
;+		(comment "The Technology Domain that is used to categorise this Technology Capability")
		(type INSTANCE)
;+		(allowed-classes Technology_Domain)
;+		(cardinality 0 1)
;+		(inverse-slot contains_technology_capabilities)
		(create-accessor read-write))
	(multislot rp_report_constants
;+		(comment "Defines the report constants that are used by this report")
		(type INSTANCE)
;+		(allowed-classes Report_Constant)
		(create-accessor read-write))
	(multislot il_managed_by_services
;+		(comment "The managed services that are related to this Information/Data element")
		(type INSTANCE)
;+		(allowed-classes Managed_Service)
;+		(inverse-slot ms_managed_info_elements)
		(create-accessor read-write))
	(single-slot system_is_published
;+		(comment "Slot to control whether an instance is ready to be published in Essential Viewer, or not. Defaults to true.")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default TRUE)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ccr_total_annual_cost
;+		(comment "The total annual cost for the contracted quantity of the EA element")
		(type FLOAT)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot busproctype_to_infoview_to_dataobj_from_busproc2infoview
;+		(comment "A business process type interacting with an information view")
		(type INSTANCE)
;+		(allowed-classes BUSPROCTYPE_TO_INFOVIEW_RELATION)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot cs_belongs_to_security_classification_framework
;+		(comment "The security classification framework within which this scheme is defined")
		(type INSTANCE)
;+		(allowed-classes Security_Classification_Framework)
;+		(cardinality 0 1)
;+		(inverse-slot scf_security_classification_schemes)
		(create-accessor read-write))
	(single-slot ce_configuration_id
;+		(comment "A unique identifier to the JSON document that defines the structure and detailed configuration of the Editor")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot ad_motivated_objectives
;+		(comment "The set of objectives that are motivated by the driver")
		(type INSTANCE)
;+		(allowed-classes Application_Architecture_Objective)
;+		(inverse-slot ao_motivated_by_driver)
		(create-accessor read-write))
	(multislot contained_provider_architecture_relations
;+		(comment "The relationships between Technology Product constructs in this architecture")
		(type INSTANCE)
;+		(allowed-classes %3ATPA-RELATION)
;+		(inverse-slot relation_contained_in_tech_provider_architecture)
		(create-accessor read-write))
	(single-slot report_pdf_scale
;+		(comment "The scaling factor for the generated pdf")
		(type FLOAT)
		(range 0.25 1.0)
		(default 1.0)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot control_related_information
;+		(comment "DEPRECATED: The set of information/data elements that are related to the control\\n\\nSUPERCEDED BY: controlled_elements")
		(type INSTANCE)
;+		(allowed-classes Information_Layer)
		(create-accessor read-write))
	(multislot pt_delivers_revenue_types
;+		(comment "The types of revenue streams delivered by this Product Type")
		(type INSTANCE)
;+		(allowed-classes Revenue_Component_Type)
		(create-accessor read-write))
	(single-slot app_pro_updates_info_rep
;+		(comment "Determines whether the Application Provider updates the Information Representation")
		(type SYMBOL)
		(allowed-values Yes No Unknown)
		(default Unknown)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot sqvm_map_scores
;+		(comment "The list of scores given to the intersections between Service Quality Values within the mapping")
		(type INSTANCE)
;+		(allowed-classes Service_Quality_Value_Map_Score)
		(cardinality 1 ?VARIABLE)
;+		(inverse-slot sqvms_parent_map)
		(create-accessor read-write))
	(multislot principle_app_implications_synonyms
;+		(comment "Captures synonyms for the application implications of the principle")
		(type INSTANCE)
;+		(allowed-classes Synonym)
		(create-accessor read-write))
	(single-slot information_concept_id
;+		(comment "A unique reference for the Information Concept")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot editor_section_is_default
;+		(comment "Defines whether this section is the default section to access when opening the parent Editor")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default TRUE)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot %3Arelation_description
;+		(comment "A description of the relationship")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot usage_of_application_deployment_group
;+		(comment "The Application Deployment Group that is being used.")
		(type INSTANCE)
;+		(allowed-classes Application_Deployment_Group)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot contained_in_logical_software_arch
;+		(comment "The logical software architecture in which this element is contained")
		(type INSTANCE)
;+		(allowed-classes Logical_Software_Architecture)
;+		(cardinality 0 1)
;+		(inverse-slot logical_software_arch_elements)
		(create-accessor read-write))
	(multislot regulated_component_service_quals
		(type INSTANCE)
;+		(allowed-classes Service_Quality_Value)
		(create-accessor read-write))
	(single-slot constraint_target
;+		(comment "The element in the model to which a constraint applies to or is caused by.")
		(type INSTANCE)
;+		(allowed-classes EA_Class)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot software_usage_of_info_rep
;+		(comment "The Information Representation that is being used in an architecture")
		(type INSTANCE)
;+		(allowed-classes Information_Representation)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot arch_state_business_conceptual
;+		(comment "Slot to group the set of architectures from the Business Conceptual Layer in an Architecture State")
		(type INSTANCE)
;+		(allowed-classes Business_Conceptual)
;+		(inverse-slot bus_conceptual_contained_in_arch_states)
		(create-accessor read-write))
	(single-slot job_to_role_at_level_from_job
;+		(comment "The job that is expected to perform the role at a specific level")
		(type INSTANCE)
;+		(allowed-classes Job_Position)
;+		(cardinality 1 1)
;+		(inverse-slot job_performed_roles_at_levels)
		(create-accessor read-write))
	(single-slot ariu_usage_of_app_reference_implementation
;+		(comment "The Application Reference Implementation that is being used as part of another Application Reference Implementation")
		(type INSTANCE)
;+		(allowed-classes Application_Reference_Implementation)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot report_menu_short_name
;+		(comment "The short name for the report manu")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot ea_last_slot_id
;+		(comment "The last ID that was used to identify a Slot in the repository")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot busproctype_to_infoview_to_dataobj_to_dataobj
;+		(comment "The data object that a business process type is interacting with in the context of an information view")
		(type INSTANCE)
;+		(allowed-classes Data_Object_Type)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot erl_source_url
;+		(comment "The url of the organisation or individual that is the source of the externally referenced content")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot need_source
;+		(comment "The actor who has identified the need.")
		(type INSTANCE)
;+		(allowed-classes Actor)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot pwt_is_default
;+		(comment "Determines whether the Theme should be used as the default for styling Presentation Widgets")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default FALSE)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot io_target_date_iso_8601
;+		(comment "The target date for achieving the objective in ISO 8601 format (yyyy-mm-dd)")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot describes_technology_composite
		(type INSTANCE)
;+		(allowed-classes Technology_Composite)
;+		(cardinality 0 1)
;+		(inverse-slot technology_component_architecture)
		(create-accessor read-write))
	(single-slot %3Arelation_name
;+		(comment "The unique name for the instance of the relationship")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot sti_lifecycle_status
;+		(comment "The current status of the Trend Implication")
		(type INSTANCE)
;+		(allowed-classes Strategic_Trend_Implication_Lifecycle_Status)
		(default [essential_baseline_6.5.4_Class81])
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot rcs_threshold_value
;+		(comment "A numerical threshold to be given a score")
		(type FLOAT)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot contract_deal_cost
;+		(comment "Slot to capture the deal cost of a contract, e.g. the overall cost - but does not have to be the unit cost multiplied by the number of units, e.g. for an enterprise-wide deal.")
		(type FLOAT)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot sqvms_parent_map
;+		(comment "The service quality value map that contains this score")
		(type INSTANCE)
;+		(allowed-classes Service_Quality_Value_Map)
;+		(cardinality 1 1)
;+		(inverse-slot sqvm_map_scores)
		(create-accessor read-write))
	(single-slot currency_symbol
;+		(comment "The symbol typically used to represent the currency (e.g. £, $, ¨)")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot relevant_information_objectives
;+		(comment "")
		(type INSTANCE)
;+		(allowed-classes Information_Architecture_Objective)
;+		(inverse-slot relevant_to_information_concepts)
		(create-accessor read-write))
	(single-slot programme_start_date
;+		(comment "DEPRECATED. the start date for the programme")
		(type INSTANCE)
;+		(allowed-classes Time)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot regulated_component_regulation
;+		(comment "The regualtion that is being applied to the EA component")
		(type INSTANCE)
;+		(allowed-classes Regulation)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot atire_acquisition_method
;+		(comment "The method used to exchange the information")
		(type INSTANCE)
;+		(allowed-classes Data_Acquisition_Method)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot arch_state_application_relations
;+		(comment "Slot to capture the Application Relationship instances (e.g. Application to Process relationships) that are in an Architecture State")
		(type INSTANCE)
;+		(allowed-classes Application_Relationship %3AApplication_Relationship)
		(create-accessor read-write))
	(single-slot apu_to_apu_relation_inforep_acquisition_method
;+		(comment "The acquisition method used to pass the Information Representations")
		(type INSTANCE)
;+		(allowed-classes Data_Acquisition_Method)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot contract_cost
;+		(comment "The cost for the contract. Defined using a relationship class to allow the cost relationship to be qualified")
		(type INSTANCE)
;+		(allowed-classes CONTRACT_TO_COST_RELATION)
;+		(cardinality 0 1)
;+		(inverse-slot ctcr_contract)
		(create-accessor read-write))
	(single-slot skill_label
;+		(comment "A label to be used when presenting the Skill")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot report_pdf_wait_delay
;+		(comment "The maximum length of time in seconds required to generate the report pdf")
		(type INTEGER)
		(range 1 %3FVARIABLE)
		(default 10)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ms_deployment_role
;+		(comment "Defines the deployment role of the Managed Service")
		(type INSTANCE)
;+		(allowed-classes Managed_Service_Deployment_Role)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot control_supported_by_application
;+		(comment "DEPRECATED: The application elements that support the implementation of this control\\n\\nSUPERCEDED BY: control_implemented_by_solutions")
		(type INSTANCE)
;+		(allowed-classes Application_Layer)
		(create-accessor read-write))
	(multislot control_solution_information_elements
;+		(comment "The information elements that form part of this control solution")
		(type INSTANCE)
;+		(allowed-classes Information_Logical Information_Physical)
		(create-accessor read-write))
	(multislot strategic_plan_for_element
;+		(comment "DEPRECATED - USE \\\"strategic_plan_for_elements\\\" slot: The individual architectural element(s) to which this plan applies")
		(type INSTANCE)
;+		(allowed-classes EA_Class EA_Relation %3AEA_Graph_Relation)
		(create-accessor read-write))
	(single-slot defining_activity_diagram
;+		(comment "The set of Business Tasks (and flow relations) that make up this Business Activity.")
		(type INSTANCE)
;+		(allowed-classes Business_Activity_Flow)
;+		(cardinality 0 1)
;+		(inverse-slot defines_business_activity)
		(create-accessor read-write))
	(multislot related_from_information_concepts
;+		(comment "The Information Concepts that have a relationship to this Information Concept")
		(type INSTANCE)
;+		(allowed-classes Information_Concept)
;+		(inverse-slot related_information_concepts)
		(create-accessor read-write))
	(multislot ap_data_object_requirements
;+		(comment "The logical Data Objects that this Application Provider requires to deliver its functionality")
		(type INSTANCE)
;+		(allowed-classes APP_PRO_TO_DATAOBJ_REQ_RELATION)
;+		(inverse-slot app_pro_to_dataobj_req_from_app)
		(create-accessor read-write))
	(multislot principle_supports_information_objectives
;+		(comment "")
		(type INSTANCE)
;+		(allowed-classes Information_Architecture_Objective)
;+		(inverse-slot supported_by_information_principles)
		(create-accessor read-write))
	(single-slot app_svc_updates_info_view
;+		(comment "Defines whether the Application Service updates the Information View")
		(type SYMBOL)
		(allowed-values Yes No Unknown)
		(default Unknown)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot bp_sub_business_processes
;+		(comment "Captures business processes/activities that are performed as part of the business process. Note: this is an alternative to defining a Business Process Flow")
		(type INSTANCE)
;+		(allowed-classes Business_Activity Business_Process)
		(create-accessor read-write))
	(single-slot gl_identifier
;+		(comment "A unique identifier for the Geographic Location")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot dmp_org_scope
;+		(comment "Defines the organisatonal scope for which the policy os relevant")
		(type INSTANCE)
;+		(allowed-classes Group_Actor)
		(create-accessor read-write))
	(multislot bmp_assigned_business_elements
;+		(comment "Describes the Business element to which this policy applies")
		(type INSTANCE)
;+		(allowed-classes Business_Role Product_Type Business_Process_Type Business_Role_Type Physical_Process_Type Channel Product Product_Concept Business_Capability Site_Category Brand Product_Feature Business_Domain Site Actor)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(single-slot info_store_it_contact
;+		(comment "The IT contact for an Information Store")
		(type INSTANCE)
;+		(allowed-classes Actor)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot business_differentiation_level
;+		(comment "Defines the relative degree to which this element provides differentiation for the enterprise against its competitors")
		(type INSTANCE)
;+		(allowed-classes Business_Differentiation_Level)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot report_cache_configuration
;+		(comment "The configuration for automatic pre-caching of the Report")
		(type INSTANCE)
;+		(allowed-classes Report_Cache_Configuration)
;+		(cardinality 0 1)
;+		(inverse-slot cache_report)
		(create-accessor read-write))
	(multislot portal_panel_section_reports
;+		(comment "The reports that can appear within a panel section")
		(type INSTANCE)
;+		(allowed-classes Report)
		(create-accessor read-write))
	(single-slot viewer_text_secondary_colour
;+		(comment "The secondary text colour in Viewer. Typically used for hightlights and accents")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot roadmap_model_subject
;+		(comment "The subject(s) elements of the architecture that are the focus of the Roadmap.")
		(type INSTANCE)
;+		(allowed-classes EA_Class EA_Relation)
		(create-accessor read-write))
	(multislot need_related_information
;+		(comment "DEPRECATED: The set of information elements that are related to the need.\\n\\nREPLACED BY: sr_requirement_for_elements")
		(type INSTANCE)
;+		(allowed-classes Information_Layer)
		(create-accessor read-write))
	(single-slot pm_category
;+		(comment "The category to which the performance measure belongs")
		(type INSTANCE)
;+		(allowed-classes Performance_Measure_Category)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot busproctype_in_busprocfamily
;+		(comment "DEPRECATED: REPLACED BY DIRECT RELATIONSHIP\\nThe Business Process Family to which the Business Process Type belongs")
		(type INSTANCE)
;+		(allowed-classes Business_Process_Family)
;+		(cardinality 0 1)
;+		(inverse-slot busprocttype_to_busprocfam_busproctype)
		(create-accessor read-write))
	(single-slot editor_component_display_label
;+		(comment "A user friendly label for the Editor Component")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot contained_in_operating_model_category
;+		(comment "The parent category for this Operating Model Category")
		(type INSTANCE)
;+		(allowed-classes Operating_Model_Category)
;+		(cardinality 0 1)
;+		(inverse-slot contains_operating_model_categories)
		(create-accessor read-write))
	(single-slot cache_report
;+		(comment "The Report instance that is to be cached")
		(type INSTANCE)
;+		(allowed-classes Report)
;+		(cardinality 1 1)
;+		(inverse-slot report_cache_configuration)
		(create-accessor read-write))
	(multislot related_information_elements
;+		(comment "DEPRECATED: Information EA elements that are related to this issue\\n\\nREPLACED BY: sr_requirement_for_elements")
		(type INSTANCE)
;+		(allowed-classes Information_Layer)
;+		(inverse-slot known_information_issues)
		(create-accessor read-write))
	(single-slot dlsu_disposition_effort_days
;+		(comment "The estimated number of days of effort that will be spent for the disposition period")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ms_service_scope
;+		(comment "Defines how the Managed Service is scoped")
		(type INSTANCE)
;+		(allowed-classes Managed_Service_Scope)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot report_pdf_config_is_default
;+		(comment "Defines whether the PDF Configuration is a default configuration")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default FALSE)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot reporting_business_roles
;+		(comment "The Business Roles that report to this Business Role")
		(type INSTANCE)
;+		(allowed-classes Business_Role)
;+		(inverse-slot reports_to)
		(create-accessor read-write))
	(single-slot license_months_to_renewal
;+		(comment "DEPRECATED: The equivalent of this property has been moved to the CONTRACT_COMPONENT_RELATION class")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot job_given_to_actors
;+		(comment "The individual actors that have been (or wish to be) placed in this Job Position")
		(type INSTANCE)
;+		(allowed-classes ACTOR_TO_JOB_RELATION)
;+		(inverse-slot actor_to_job_to_job)
		(create-accessor read-write))
	(multislot control_related_business
;+		(comment "DEPRECATED: The set of business elements that are related to the control\\n\\nSUPERCEDED BY: controlled_elements")
		(type INSTANCE)
;+		(allowed-classes Business_Layer)
		(create-accessor read-write))
	(single-slot editor_section_anchor_id
;+		(comment "Provides the id of the anchor position of the Editor Section")
		(type STRING)
		(default "main_section")
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot obj_to_svc_quality_is_key
;+		(comment "Determines if this is a key performance measure")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default FALSE)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot external_repository_reference
;+		(comment "Specifies the external repository that this reference is from")
		(type INSTANCE)
;+		(allowed-classes External_Repository)
;+		(cardinality 1 1)
;+		(inverse-slot instance_references_of_external_respository)
		(create-accessor read-write))
	(single-slot business_capability_index
;+		(comment "An index number that allows for ordering of business capabilties")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot portal_panel_actors
;+		(comment "Actors to be displayed on the Portal Panel Section")
		(type INSTANCE)
;+		(allowed-classes Individual_Actor Group_Actor)
		(create-accessor read-write))
	(single-slot system_content_quality_escalation_to_actor_previous_escalation
;+		(comment "The previous escalation point (if any) for this escalation")
		(type INSTANCE)
;+		(allowed-classes SYS_CONTENT_QUALITY_ESCALATION_TO_ACTOR_RELATION)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot license_combined_with
;+		(comment "Relationship from a License instance to other License instances that have been combined with this License Instance.")
		(type INSTANCE)
;+		(allowed-classes License)
		(create-accessor read-write))
	(single-slot value_stage_to_emotion_to_emotion
;+		(comment "The Emotion that is related to the Value Stage")
		(type INSTANCE)
;+		(allowed-classes Customer_Emotion)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot usage_of_information_store
;+		(comment "The Information Store that is being used.")
		(type INSTANCE)
;+		(allowed-classes Information_Store)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot arch_state_physical_information
;+		(comment "Slot to group the set of architectures from the Information Physical layer in an Architecture State")
		(type INSTANCE)
;+		(allowed-classes Information_Physical)
;+		(inverse-slot physical_info_contained_in_arch_states)
		(create-accessor read-write))
	(multislot idea_proposed_changes
;+		(comment "The set of changes that is being proposed for the Idea")
		(type INSTANCE)
;+		(allowed-classes IDEA_TO_ELEMENT_RELATION)
;+		(inverse-slot idea_to_element_idea)
		(create-accessor read-write))
	(multislot system_secured_edit_elements
;+		(comment "The set of elements within the repository that have been assigned this security classification for EDIT access")
		(type INSTANCE)
;+		(allowed-classes %3AESSENTIAL-CLASS %3AESSENTIAL-SLOT %3AEA_Graph_Relation EA_Relation EA_Class EA_Security)
;+		(inverse-slot system_security_edit_classification)
		(create-accessor read-write))
	(single-slot ea_last_class_id
;+		(comment "The last ID that was used to identify a Class in the repository")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot total_instances
		(type INTEGER)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot rr_required_expertise
;+		(comment "Any specific subject matetr expertise that the required resource should have")
		(type INSTANCE)
;+		(allowed-classes Subject_Matter_Expertise)
		(create-accessor read-write))
	(multislot %3Apu_to_pu_info_reps
;+		(comment "The information representations or information representation attributes that are required to make use of a dependent product")
		(type INSTANCE)
;+		(allowed-classes Information_Representation_Type)
		(create-accessor read-write))
	(multislot arch_state_application_conceptual
;+		(comment "Slot to group the set of architectures from the Application Conceptual layer in an Architecture State")
		(type INSTANCE)
;+		(allowed-classes Application_Conceptual)
;+		(inverse-slot app_conceptual_contained_in_arch_states)
		(create-accessor read-write))
	(single-slot regdatausage_to_busproc_consent_busproc
;+		(comment "The business process that is used to achieve consent")
		(type INSTANCE)
;+		(allowed-classes Business_Process_Type)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot cs_security_classifications
;+		(comment "The set of security classifications that belong to this scheme")
		(type INSTANCE)
;+		(allowed-classes Security_Classification)
;+		(inverse-slot sc_belongs_to_classification_scheme)
		(create-accessor read-write))
	(multislot contained_lifecycle_model_relations
;+		(comment "The set of relationships that exist in a Lifecycle Model")
		(type INSTANCE)
;+		(allowed-classes %3ALifecycle-Model-Relation)
;+		(inverse-slot %3Acontained_in_lifecycle_model)
		(create-accessor read-write))
	(single-slot comment_seq_number
;+		(comment "Integer that defines the position of a comment within a set of comments (e.g. those associated with a particular instances)")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot prod_static_architecture
;+		(comment "A model that describes other products that this product is dependent upon (including any required information)")
		(type INSTANCE)
;+		(allowed-classes Static_Product_Architecture)
;+		(cardinality 0 1)
;+		(inverse-slot static_architecture_of_product)
		(create-accessor read-write))
	(single-slot apppro_to_physbus_from_appprorole
;+		(comment "The Application Provider Role that is supporting a physical process")
		(type INSTANCE)
;+		(allowed-classes Application_Provider_Role)
;+		(cardinality 0 1)
;+		(inverse-slot app_pro_role_supports_phys_proc)
		(create-accessor read-write))
	(single-slot idea_lifecycle_status
;+		(comment "The current status of the Idea")
		(type INSTANCE)
;+		(allowed-classes Idea_Lifecycle_Status)
		(default [essential_baseline_6.5.4_Class75])
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot bd_has_tech_implications
;+		(comment "The of Technology Drivers for which an business driver has implications.")
		(type INSTANCE)
;+		(allowed-classes Technology_Driver)
		(create-accessor read-write))
	(multislot sd_information_elements
;+		(comment "The set of information elements that are part of the Security Deployment")
		(type INSTANCE)
;+		(allowed-classes Information_Store)
		(create-accessor read-write))
	(multislot sc_classified_technology_resources
;+		(comment "The technology resources that fall under this Security Classification")
		(type INSTANCE)
;+		(allowed-classes Technology_Layer)
;+		(inverse-slot tl_security_classifications)
		(create-accessor read-write))
	(single-slot business_capability_chain_type_label
;+		(comment "The display label to be used in a Business Capability Chain diagram")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot regulation_regulatory_body
;+		(comment "The organisation or inidivual that oversees compliance to the regulation")
		(type INSTANCE)
;+		(allowed-classes Actor)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot constraint_related_technology
;+		(comment "The set of technology elements that are related to the constraint.")
		(type INSTANCE)
;+		(allowed-classes Technology_Layer)
		(create-accessor read-write))
	(multislot sd_technology_elements
;+		(comment "The set of technology elements that are part of the Security Deployment")
		(type INSTANCE)
;+		(allowed-classes Technology_Node Technology_Instance)
		(create-accessor read-write))
	(single-slot editor_component_execution_logic_path
;+		(comment "Defines the path to the JavaScript fragment containing the Editor Component interface Class definition (properties and methods e.g. init, draw, etc) , variables and supporting functions")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot product_type_brands
;+		(comment "The Brands associated with products of this type")
		(type INSTANCE)
;+		(allowed-classes Brand)
		(create-accessor read-write))
	(multislot business_domain_contains_information_concepts
;+		(comment "The Information Concepts that are related to this Business Domain")
		(type INSTANCE)
;+		(allowed-classes Information_Concept)
;+		(inverse-slot belongs_to_business_domain_information)
		(create-accessor read-write))
	(single-slot used_in_lifecycle_model
;+		(comment "The Lifecycle Model in which the Lifecycle Model Type element exists.")
		(type INSTANCE)
;+		(allowed-classes Lifecycle_Model)
;+		(cardinality 1 1)
;+		(inverse-slot contained_lifecycle_model_elements)
		(create-accessor read-write))
	(multislot is_member_of_actor
;+		(comment "The parent Actor that an Actor can belong to and thereby is a sub-actor of that parent.")
		(type INSTANCE)
;+		(allowed-classes Actor)
;+		(inverse-slot contained_sub_actors)
		(create-accessor read-write))
	(multislot contained_techProd_components
;+		(comment "The set of Technology Products that make up this architecture")
		(type INSTANCE)
;+		(allowed-classes Technology_Product_Architecture_Type)
;+		(inverse-slot used_in_technology_product_architecture)
		(create-accessor read-write))
	(multislot physical_data_org_scope
;+		(comment "Describes the organisational scope of the physical  data in terms of one or more Group Actors")
		(type INSTANCE)
;+		(allowed-classes Group_Actor)
		(create-accessor read-write))
	(multislot gr_locations
;+		(comment "The individual geographical locations that are contained within this region (e.g. cities, towns)")
		(type INSTANCE)
;+		(allowed-classes Geographic_Location)
		(create-accessor read-write))
	(multislot ivs_standard_usage
;+		(comment "Defines the business processes for which this information standard should be applied")
		(type INSTANCE)
;+		(allowed-classes Business_Process_Type)
		(create-accessor read-write))
	(single-slot taxonomy_term_label
;+		(comment "Captures the label used for display purposes")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot external_update_date
;+		(comment "Slot to capture the date/time of when this reference was last updated. Created typically using default Java DateFormat.getDateTimeInstance()")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot header_logo_path
;+		(comment "The path to an image to be used in the header")
		(type STRING)
		(default "images/eas_logo_2014_white.png")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3Acontained_in_roadmap
;+		(comment "Slot defining the Roadmap Model in which this relationship is contained.")
		(type INSTANCE)
;+		(allowed-classes Roadmap_Model)
;+		(cardinality 1 1)
;+		(inverse-slot contained_roadmap_relations)
		(create-accessor read-write))
	(single-slot system_content_visibility
;+		(comment "Defines the visibility of an EA element, e.g. individual, specific group, everyone")
		(type INSTANCE)
;+		(allowed-classes SYS_CONTENT_VISIBILITY)
		(default [essential_baseline_6.5.4_Class68])
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot contract_type
;+		(comment "Defines the nature of the Contract, e.g. Framework Agreement, Order")
		(type INSTANCE)
;+		(allowed-classes Contract_Type)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot revenue_currency
;+		(comment "The default currency in which the contained revenue amounts are defined")
		(type INSTANCE)
;+		(allowed-classes Currency)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot bramt_used_in_business_reference_architecture
;+		(comment "The Business Reference Architecture Model in which this usage of a Business Process is used")
		(type INSTANCE)
;+		(allowed-classes Business_Reference_Architecture)
;+		(cardinality 1 1)
;+		(inverse-slot business_reference_architecture_elements)
		(create-accessor read-write))
	(single-slot site_geographic_location
;+		(comment "The geographic location of a site, defined in terms of a Geographical Location or Geographical Region, as required.")
		(type INSTANCE)
;+		(allowed-classes Geographic_Region Geographic_Location)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot data_derivation_definition
;+		(comment "Slot to capture the calculation or rules that define how the Data Attributes are used or combined to derive an Information View Attribute")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ce_configuration_config
;+		(comment "Contains the UI layout and structural configuration of the editor")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot technology_provider_version
;+		(comment "The version number/identifier for the technology provider")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot project_goal_state
;+		(comment "DEPRECATED: The Architecture State representing the goal configuration that this Project will produce. Include the relevant scope of architecture components. e.g. Technology Requirements are captured in the Technology Conceptual part of the Architecture State")
		(type INSTANCE)
;+		(allowed-classes Architecture_State)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot ao_owner
;+		(comment "Captures the individual or organisation that is accountable for meeting the objective")
		(type INSTANCE)
;+		(allowed-classes Actor)
		(create-accessor read-write))
	(single-slot to_skill_actor_relation
;+		(comment "Slot to capture the 'TO' end of this Skill relation, which is to a Skill or Skill At Level instance")
		(type INSTANCE)
;+		(allowed-classes Skill Skill_At_Level)
;+		(cardinality 1 1)
;+		(inverse-slot skills_of_actor)
		(create-accessor read-write))
	(multislot system_security_edit_classification
;+		(comment "Defines the security classification that has been assigned to an element of the repository for EDIT access")
		(type INSTANCE)
;+		(allowed-classes EA_Content_Classification)
;+		(inverse-slot system_secured_edit_elements)
;+		(associated-facet essential_baseline_v5_Class4)
		(create-accessor read-write))
	(multislot feature_for_product_type
;+		(comment "The product type that this feature belongs to")
		(type INSTANCE)
;+		(allowed-classes Product_Type)
;+		(inverse-slot pt_product_type_features)
		(create-accessor read-write))
	(multislot provided_by_application_provider
;+		(comment "DEPRECATED. The set of Application Providers that provide an Application Service")
		(type INSTANCE)
;+		(allowed-classes Application_Provider)
;+		(inverse-slot provides_application_service)
		(create-accessor read-write))
	(single-slot usage_of_application_service
;+		(comment "The Application Service that this is a usage of.")
		(type INSTANCE)
;+		(allowed-classes Application_Service)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot information_store_product_type_scope
;+		(comment "Defines the product type scope of information within the Information Store")
		(type INSTANCE)
;+		(allowed-classes Product_Type)
		(create-accessor read-write))
	(single-slot describes_technology_product
;+		(comment "The Technology Product that this Product Architecture describes")
		(type INSTANCE)
;+		(allowed-classes Technology_Product)
;+		(cardinality 0 1)
;+		(inverse-slot technology_product_architecture)
		(create-accessor read-write))
	(single-slot data_standard_custodian
;+		(comment "DEPRECATED. USE STAKEHOLDERS SLOT. Captures the individual that is responsible for managing the Data Standard on behalf of the owning organisation")
		(type INSTANCE)
;+		(allowed-classes ACTOR_TO_ROLE_RELATION)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot taxonomy_parent
;+		(comment "Capture the parent classification in the taxonomy hierarchy.")
		(type INSTANCE)
;+		(allowed-classes Taxonomy_Term)
;+		(cardinality 0 1)
;+		(inverse-slot taxonomy_children)
		(create-accessor read-write))
	(multislot sq_values
;+		(comment "The service quality value instances associated with this service quality")
		(type INSTANCE)
;+		(allowed-classes Service_Quality_Value)
;+		(inverse-slot usage_of_service_quality)
		(create-accessor read-write))
	(multislot sti_enterprise_impacts
;+		(comment "The impacts on EA elements that occur if the implication is realised")
		(type INSTANCE)
;+		(allowed-classes STRAT_TREND_IMPLICATION_TO_ELEMENT_RELATION)
;+		(inverse-slot implication_to_element_from_implication)
		(create-accessor read-write))
	(multislot vsg_participants
;+		(comment "Defines the business role types or business roles that participate in the value stage")
		(type INSTANCE)
;+		(allowed-classes Business_Role Business_Role_Type)
		(create-accessor read-write))
	(single-slot dynamic_architecture_of_application_function_impl
;+		(comment "the application function implementation that this dynamic application architecture is describing")
		(type INSTANCE)
;+		(allowed-classes Application_Function_Implementation)
;+		(cardinality 0 1)
;+		(inverse-slot application_function_impl_architecture)
		(create-accessor read-write))
	(single-slot contained_in_logical_sw_arch
;+		(comment "The logical software architecture in which this relation is contained")
		(type INSTANCE)
;+		(allowed-classes Logical_Software_Architecture)
;+		(cardinality 0 1)
;+		(inverse-slot sw_arch_relations)
		(create-accessor read-write))
	(single-slot system_cq_review_policy_manager_instance_dataset_api
;+		(comment "The dataset APi that provides the data to be used in Content Manager Dashboards for this class")
		(type INSTANCE)
;+		(allowed-classes Data_Set_API)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot tech_physical_contained_in_arch_states
;+		(comment "The architecture states that contain this physical technology element")
		(type INSTANCE)
;+		(allowed-classes Architecture_State)
;+		(inverse-slot arch_state_technology_physical)
		(create-accessor read-write))
	(single-slot %3Arelation_label
;+		(comment "A text label that can be used for display, particularly in graphical models.")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot gr_region_borders
;+		(comment "Captures the set of GeoCodes that plot the borders of the region")
		(type INSTANCE)
;+		(allowed-classes GeoCode)
		(create-accessor read-write))
	(single-slot app_pro_to_inforep_security_access
;+		(comment "Describes the nature of security access for the information representation provided by the application")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot arch_state_strategy_management
;+		(comment "Slot to group the set of strategic assumptions, constraints and requirements in an Architecture State")
		(type INSTANCE)
;+		(allowed-classes Strategy_Management)
;+		(inverse-slot strategy_contained_in_arch_state)
		(create-accessor read-write))
	(single-slot enumeration_report_commentary
;+		(comment "String to define a short commentary for an enumeration value that can be used in Views, e.g. to specify that a waiver is required for a certain Life Cycle status. Contributed by Kevin Campbell 6/10/2010")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot budget_end_date_iso_8601
;+		(comment "The end date in ISO 8601 format (yyyy-mm-dd) up to which a budgetary element is defined")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot ms_managed_info_elements
;+		(comment "Defines the information / data elements that contribute to the service")
		(type INSTANCE)
;+		(allowed-classes Information_Relationship Information_Layer)
;+		(inverse-slot il_managed_by_services)
		(create-accessor read-write))
	(single-slot system_element_to_comms_method_from_element
;+		(comment "The element for which the communication method and frequency is being defined")
		(type INSTANCE)
;+		(allowed-classes SYS_CONTENT_QUALITY_REVIEW_POLICY SYS_CONTENT_QUALITY_ESCALATION_POLICY)
;+		(cardinality 1 1)
;+		(inverse-slot system_cq_policy_comms_methods)
		(create-accessor read-write))
	(multislot system_content_quality_reviews
;+		(comment "The content quality reviews that have been undertaken against this element")
		(type INSTANCE)
;+		(allowed-classes SYS_CONTENT_QUALITY_REVIEW)
;+		(inverse-slot system_content_quality_review_for_element)
		(create-accessor read-write))
	(single-slot lifecycle_status_business
;+		(comment "The lifecycle status for this Business Process Type")
		(type INSTANCE)
;+		(allowed-classes Lifecycle_Status)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot cj_product_types
;+		(comment "Product Types for which a Persona undertakes the Customer Journey")
		(type INSTANCE)
;+		(allowed-classes Product_Type)
		(create-accessor read-write))
	(multislot bmc_product_scope
;+		(comment "The Products or Product Types that are supported by the Business Model Configuration")
		(type INSTANCE)
;+		(allowed-classes Product Product_Type)
		(create-accessor read-write))
	(single-slot standardisation_level
;+		(comment "Defines the standardisation level of the business process, activity or task")
		(type INSTANCE)
;+		(allowed-classes Standardisation_Level)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot issue_categories
;+		(comment "A classification of this issue or need  (i.e. tagging)")
		(type INSTANCE)
;+		(allowed-classes Issue_Category)
		(create-accessor read-write))
	(single-slot ca_actual_start_date_iso_8601
;+		(comment "The date from when the change activity actually started in ISO 8601 format (yyyy-mm-dd)")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot raising_system_event_time_basis
;+		(comment "A string slot to hold the time-based information about the raising of a system event")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot ad_has_app_implications
;+		(comment "The of Application Drivers for which an application driver has implications.")
		(type INSTANCE)
;+		(allowed-classes Application_Driver)
		(create-accessor read-write))
	(single-slot pca_element_assessed
;+		(comment "The element that is being assessed against a principle")
		(type INSTANCE)
;+		(allowed-classes EA_Class)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot %3AINFORMATION
		(type INSTANCE)
;+		(allowed-classes %3ATHING)
		(create-accessor read-write))
	(single-slot busproctype_reads_infoview
;+		(comment "Defines whether the Business Process Type reads the Information View")
		(type SYMBOL)
		(allowed-values Yes No Unknown)
		(default Unknown)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot instance_of_application_deployment
;+		(comment "Reference to the Application Deployment that this Technology Instance represents. E.g. this bit of software (code, config, script etc.) is the application that has been deployed.")
		(type INSTANCE)
;+		(allowed-classes Application_Deployment)
;+		(cardinality 0 1)
;+		(inverse-slot application_deployment_technology_instance)
		(create-accessor read-write))
	(multislot rct_for_classes
;+		(comment "The types of elements for which the revenue component  applies")
		(type INSTANCE)
;+		(allowed-classes %3AESSENTIAL-CLASS)
		(create-accessor read-write))
	(single-slot information_principle_rationale
;+		(comment "")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot rdu_usage_of_infodata
;+		(comment "The elements for which consent has been given")
		(type INSTANCE)
;+		(allowed-classes Data_Object_Type Information_View_Type)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(single-slot sp_action
;+		(comment "An action that the Business Role, Actor or Security Clearance Level can make against the secured resource")
		(type INSTANCE)
;+		(allowed-classes Secured_Action)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot bps_standardised_business_capability
;+		(comment "The business capability for which the business process standard has been defined")
		(type INSTANCE)
;+		(allowed-classes Business_Capability)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot provided_by_application_service
;+		(comment "The Application Service that provides the Application Function")
		(type INSTANCE)
;+		(allowed-classes Application_Service)
;+		(cardinality 1 1)
;+		(inverse-slot provides_application_functions)
		(create-accessor read-write))
	(single-slot time_day
;+		(comment "Slot to manage the day 'value' of a Time instance.")
		(type SYMBOL)
		(allowed-values 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot tech_principle_app_implications
;+		(comment "Commentary describing the application implications of the technology principle")
		(type STRING)
		(create-accessor read-write))
	(single-slot data_subject_individual_owner
;+		(comment "DEPRECATED - Slot to capture the owner (individual) of a Data Subject in terms of an Individual Actor in the business layer.\\n\\nUse 'stakeholders' slot with ACTOR_TO_ROLE_RELATION instances")
		(type INSTANCE)
;+		(allowed-classes Individual_Actor)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot appsvc_to_bus_managed_info_views
;+		(comment "Defines the Information Views that are managed by the Application Service in support of the Business Process")
		(type INSTANCE)
;+		(allowed-classes Information_View_Type)
		(create-accessor read-write))
	(multislot supports_business_capabilities
		(type INSTANCE)
;+		(allowed-classes Business_Capability)
;+		(inverse-slot contained_business_capabilities)
		(create-accessor read-write))
	(multislot contained_info_rep_usages
;+		(comment "The information representation usages that are contained within a static application provider architecture")
		(type INSTANCE)
;+		(allowed-classes Software_Information_Representation_Usage)
		(create-accessor read-write))
	(multislot physical_process_automated_by
;+		(comment "The set of Application Function Implementations that automate a Physical Process.")
		(type INSTANCE)
;+		(allowed-classes Application_Function_Implementation)
;+		(inverse-slot inverse_of_physical_process_automated_by)
		(create-accessor read-write))
	(multislot mf_managed_support_elements
;+		(comment "Defines the scope of business/IT management elements that are managed by this framework")
		(type INSTANCE)
;+		(allowed-classes EA_Support_Relationship EA_Support)
		(create-accessor read-write))
	(single-slot control_to_element_ea_element
		(type INSTANCE)
;+		(allowed-classes EA_Class EA_Relation %3AEA_Graph_Relation)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot element_styling_classes
;+		(comment "Slot to define styling classes that are to be applied to an element, e.g. in Essential Viewer")
		(type INSTANCE)
;+		(allowed-classes Element_Style)
;+		(inverse-slot style_for_elements)
		(create-accessor read-write))
	(multislot information_principles_relevant_to_concept
;+		(comment "")
		(type INSTANCE)
;+		(allowed-classes Information_Architecture_Principle)
;+		(inverse-slot principle_relevant_to_information_concepts)
		(create-accessor read-write))
	(multislot tech_principle_tech_implications
;+		(comment "Commentary describing the technology implications of the technology principle")
		(type STRING)
		(create-accessor read-write))
	(multislot service_related_channel
;+		(comment "Channel(s) that enable the delivery of a product or business service")
		(type INSTANCE)
;+		(allowed-classes Channel)
;+		(inverse-slot channel_initiates_service)
		(create-accessor read-write))
	(single-slot app_pro_deletes_data_rep
;+		(comment "Determines whether the Application Provider deletes instances of the Data Representation")
		(type SYMBOL)
		(allowed-values Yes No Unknown)
		(default Unknown)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot control_solution_application_elements
;+		(comment "The application elements that form part of this control solution")
		(type INSTANCE)
;+		(allowed-classes Application_Logical Application_Physical)
		(create-accessor read-write))
	(single-slot system_content_quality_review_to_actor_from_review
;+		(comment "The Content Quality Review to which the actor is assigned")
		(type INSTANCE)
;+		(allowed-classes SYS_CONTENT_QUALITY_REVIEW)
;+		(cardinality 1 1)
;+		(inverse-slot system_content_quality_review_assigned_to_actor)
		(create-accessor read-write))
	(multislot supporting_data_subjects
;+		(comment "Describes the set of Data Subjects that are required to deliver the Information Concept")
		(type INSTANCE)
;+		(allowed-classes Data_Subject)
		(create-accessor read-write))
	(single-slot report_parameter_for_report
;+		(comment "Defines report that is passed this parameter")
		(type INSTANCE)
;+		(allowed-classes Report)
;+		(cardinality 1 1)
;+		(inverse-slot report_parameters)
		(create-accessor read-write))
	(single-slot vendor_product_lifecycle_status
;+		(comment "Captures the current lifecycle status of a technology product, as defined by the vendor of that product. Use where a full lifecycle model is not required, e.g. where no time-based information exists. Use lifecycle model where a timeline is required")
		(type INSTANCE)
;+		(allowed-classes Vendor_Lifecycle_Status)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot system_escalation_policy_for_cq_review_policy
;+		(comment "The content quality review policy to which this escalation policy applies")
		(type INSTANCE)
;+		(allowed-classes SYS_CONTENT_QUALITY_REVIEW_POLICY)
;+		(cardinality 1 1)
;+		(inverse-slot system_cq_review_escalation_policies)
		(create-accessor read-write))
	(single-slot ra_utilisation
;+		(comment "The utilisation level of the allocated resource (in FTEs)")
		(type FLOAT)
		(range 0.0 1.0)
		(default 1.0)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot editor_supporting_config_path
;+		(comment "Defines the path to a file (typically JSON) containing custom configuration for the Editor")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot contained_physical_data_entities
;+		(comment "Slot to manage the set of Physical Data Objects that are contained in an Information Store")
		(type INSTANCE)
;+		(allowed-classes Physical_Data_Object)
;+		(inverse-slot contained_in_information_store)
		(create-accessor read-write))
	(single-slot requirement_status
;+		(comment "")
		(type INSTANCE)
;+		(allowed-classes Requirement_Status)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot sme_actors_with_expertise
;+		(comment "The Actor who has expertise in the given EA element")
		(type INSTANCE)
;+		(allowed-classes ACTOR_TO_EXPERTISE_RELATION)
;+		(inverse-slot actor_to_expertise_to_expertise)
		(create-accessor read-write))
	(multislot busproctype_uses_infoviews
;+		(comment "The Information Views that are used to perform the Business Process Type")
		(type INSTANCE)
;+		(allowed-classes BUSPROCTYPE_TO_INFOVIEW_RELATION)
;+		(inverse-slot busproctype_to_infoview_from_busproc)
		(create-accessor read-write))
	(multislot classifies_elements
;+		(comment "Slot to contain the elements that are being classified, enabling the Taxonomy Terms instances (not just the hierarchy) to be managed.")
		(type INSTANCE)
;+		(allowed-classes EA_Class)
;+		(inverse-slot element_classified_by)
		(create-accessor read-write))
	(multislot gr_contained_regions
;+		(comment "The sub-regions that are contained within this region")
		(type INSTANCE)
;+		(allowed-classes Geographic_Region)
		(create-accessor read-write))
	(single-slot dmp_responsibility
;+		(comment "The data management responsibility being assigned")
		(type INSTANCE)
;+		(allowed-classes Business_Role Group_Actor)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot static_product_architecture_elements
;+		(comment "The usages of Products that are contained in this dependency model")
		(type INSTANCE)
;+		(allowed-classes Static_Product_Architecture_Type)
;+		(inverse-slot pu_used_in_static_product_architecture)
		(create-accessor read-write))
	(multislot report_menu_items
;+		(comment "Defines the list of menu item links that should be displayed for the menu group")
		(type INSTANCE)
;+		(allowed-classes Report_Menu_Item)
		(cardinality 1 ?VARIABLE)
;+		(inverse-slot report_menu_item_parent_groups)
		(create-accessor read-write))
	(single-slot role_for_technology_provider
;+		(comment "The Technology Provider for which this role is defined")
		(type INSTANCE)
;+		(allowed-classes Technology_Provider)
;+		(cardinality 1 1)
;+		(inverse-slot implements_technology_components)
		(create-accessor read-write))
	(single-slot start_date
;+		(comment "The date from which this architecture is relevant to the enterprise")
		(type INSTANCE)
;+		(allowed-classes Time)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot control_solution_technology_elements
;+		(comment "The technology elements that form part of this control solution")
		(type INSTANCE)
;+		(allowed-classes Technology_Logical Technology_Physical)
		(create-accessor read-write))
	(single-slot sqvms_x_value
;+		(comment "The Service Quality Value defined on the X-Axis of the parent map")
		(type INSTANCE)
;+		(allowed-classes Service_Quality_Value)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot exception_expiry_date
;+		(comment "The date on which this exception expires")
		(type INSTANCE)
;+		(allowed-classes Time)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot rc_revenue_end_date_iso_8601
;+		(comment "The end date for the revenue component in ISO 8601 format (yyyy-mm-dd)")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot realised_by_technology_products
;+		(comment "The Technology Products that realise this Technology Components")
		(type INSTANCE)
;+		(allowed-classes Technology_Provider_Role)
;+		(inverse-slot implementing_technology_component)
		(create-accessor read-write))
	(single-slot information_domain_id
;+		(comment "A unique reference for the Information Domain")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot busproctype_to_infoview_to_infoview
;+		(comment "The Information View that is being used by the Business Process Type")
		(type INSTANCE)
;+		(allowed-classes Information_View)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot actor_to_job_from_actor
;+		(comment "The Individual Actor who has been placed in the Job Position")
		(type INSTANCE)
;+		(allowed-classes Individual_Actor)
;+		(cardinality 1 1)
;+		(inverse-slot actor_has_jobs)
		(create-accessor read-write))
	(single-slot editor_component_execution_html_path
;+		(comment "The path to the HTML fragment containing the visual presentation of the Editor Component")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot decision_date
;+		(comment "The date capturing when the decision was made.")
		(type INSTANCE)
;+		(allowed-classes Time)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot information_updated_by_bus_process_types
;+		(comment "DEPRECATED.\\nThe business process types that update information aligned to this information view")
		(type INSTANCE)
;+		(allowed-classes Business_Process_Type)
;+		(inverse-slot bus_process_type_updates_information)
		(create-accessor read-write))
	(single-slot technology_deployment_architecture
		(type INSTANCE)
;+		(allowed-classes Technology_Deployment_Architecture)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot portal_panel_section_label
;+		(comment "The label or title for this panel section")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot from_actor_skill_relation
;+		(comment "Slot holding the reference to the instance of an Actor that has a Skill.")
		(type INSTANCE)
;+		(allowed-classes Actor)
;+		(cardinality 1 1)
;+		(inverse-slot actor_has_skills)
		(create-accessor read-write))
	(single-slot providing_technology_product_usage
;+		(comment "Reference to the Technology Product Usage that is providing this Technology Function Usage")
		(type INSTANCE)
;+		(allowed-classes Technology_Provider_Usage)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot project_activities
;+		(comment "the set of activities that comprise this project")
		(type INSTANCE)
;+		(allowed-classes Project_Activity)
;+		(inverse-slot contained_in_project)
		(create-accessor read-write))
	(multislot known_information_issues
;+		(comment "Known issues with this information element")
		(type INSTANCE)
;+		(allowed-classes Issue)
;+		(inverse-slot related_information_elements)
		(create-accessor read-write))
	(single-slot bpf_business_criticality
;+		(comment "Defines the relative criticality of the business process family to the business")
		(type INSTANCE)
;+		(allowed-classes Business_Criticality)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot portal_label
;+		(comment "The display label or title of the portal.")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot decision_result
;+		(comment "Defines the fundamental outcome of the Decision")
		(type INSTANCE)
;+		(allowed-classes Decision_Result)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot app_svc_to_infoview_to_infoview
;+		(comment "The Information View that is being processed by the Application Service")
		(type INSTANCE)
;+		(allowed-classes Information_View)
;+		(cardinality 1 1)
;+		(inverse-slot information_view_operated_on_by_app_services)
		(create-accessor read-write))
	(multislot control_supported_by_business
;+		(comment "DEPRECATED:  The business elements that support the implementation of this control\\n\\nSUPERCEDED BY: control_implemented_by_solutions")
		(type INSTANCE)
;+		(allowed-classes Business_Layer)
		(create-accessor read-write))
	(multislot arch_state_technology_logical
;+		(comment "Slot to group the set of architectures from the Technology Logical Layer in an Architecture State")
		(type INSTANCE)
;+		(allowed-classes Technology_Logical %3ATechnology_Relationship)
;+		(inverse-slot tech_logical_contained_in_arch_states)
		(create-accessor read-write))
	(multislot returned_information
;+		(comment "The Information that is returned by the function that is being used.")
		(type INSTANCE)
;+		(allowed-classes Information_Layer)
		(create-accessor read-write))
	(multislot tech_principle_inf_implications
;+		(comment "Commentary describing the information implications of the technology principle")
		(type STRING)
		(create-accessor read-write))
	(single-slot portal_intro_text
;+		(comment "The optional introductory text for the portal. Typically a short strapline around 8-16 words")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot cap_weighted_dep_from_element
;+		(comment "The element that has the dependency on the capability")
		(type INSTANCE)
;+		(allowed-classes EA_Relation EA_Class)
;+		(cardinality 1 1)
;+		(inverse-slot capability_weighted_dependencies)
		(create-accessor read-write))
	(multislot editor_component_for_specific_classes
;+		(comment "Any Essential classes for which this component is specifically defined")
		(type INSTANCE)
;+		(allowed-classes %3AESSENTIAL-CLASS)
		(create-accessor read-write))
	(single-slot contract_supplier
;+		(comment "The supplier of goods or services in the contract.")
		(type INSTANCE)
;+		(allowed-classes Actor Supplier)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot required_data_quality
;+		(comment "Slot to capture the data quality requirements using Service Qualities")
		(type INSTANCE)
;+		(allowed-classes Information_Service_Quality_Value)
		(create-accessor read-write))
	(multislot indivactor_skill_certifications
;+		(comment "The skill certifications that the actor possesses")
		(type INSTANCE)
;+		(allowed-classes Skill_Certification)
		(create-accessor read-write))
	(multislot apu_to_apu_relation_inforep_service_quals
;+		(comment "The quality of service for the exchange of information (e.g. frequency of the exchange of information between the Application Providers)")
		(type INSTANCE)
;+		(allowed-classes Information_Service_Quality_Value)
		(create-accessor read-write))
	(multislot strategy_contained_in_arch_state
;+		(comment "The architecture states that contain this strategy management element")
		(type INSTANCE)
;+		(allowed-classes Architecture_State)
;+		(inverse-slot arch_state_strategy_management)
		(create-accessor read-write))
	(multislot vs_supporting_bus_processes
;+		(comment "Defines the business processes that support the execution of the Value Stage")
		(type INSTANCE)
;+		(allowed-classes Business_Process_Type)
		(create-accessor read-write))
	(multislot business_capability_requires_information
;+		(comment "The Information Concepts that are required to deliver the Business Capability")
		(type INSTANCE)
;+		(allowed-classes Information_Concept)
		(create-accessor read-write))
	(single-slot sqvcm_service_quality_value
;+		(comment "The Service Quality Value for which a contextuual meaning is being defined")
		(type INSTANCE)
;+		(allowed-classes Service_Quality_Value)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot ca_target_end_date_iso_8601
;+		(comment "The date when a change activity is expected to be completed in ISO 8601 format (yyyy-mm-dd)")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot type_of_application_capability
;+		(comment "The Application Capabilities that an Application Function realises")
		(type INSTANCE)
;+		(allowed-classes Application_Capability)
		(create-accessor read-write))
	(multislot raising_external_business_actor
;+		(comment "Slot to identify the external party role that raises a business event")
		(type INSTANCE)
;+		(allowed-classes Actor)
		(create-accessor read-write))
	(multislot report_group_contained_reports
;+		(comment "The set of reports associated with this report group")
		(type INSTANCE)
;+		(allowed-classes Report)
		(create-accessor read-write))
	(multislot principle_realisation_policies
;+		(comment "The set of policies that are in place to realise a Pricinple in concrete terms")
		(type INSTANCE)
;+		(allowed-classes Policy)
		(create-accessor read-write))
	(single-slot bo_id
;+		(comment "Identifier for the objective")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot report_pdf_configuration
;+		(comment "The configuration to be used when generating a PDF of the Report")
		(type INSTANCE)
;+		(allowed-classes Report_PDF_Configuration)
		(default [essential_baseline_v6_10_4_Class10014])
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot system_content_quality_review_assigned_to_actor
;+		(comment "The actor to which this Content Quality Review is currently assigned")
		(type INSTANCE)
;+		(allowed-classes SYS_CONTENT_QUALITY_REVIEW_TO_ACTOR_RELATION)
;+		(cardinality 0 1)
;+		(inverse-slot system_content_quality_review_to_actor_from_review)
		(create-accessor read-write))
	(multislot realises_application_capabilities
;+		(comment "the application capabilities that are realised by this application service")
		(type INSTANCE)
;+		(allowed-classes Application_Capability)
;+		(inverse-slot realised_by_application_services)
		(create-accessor read-write))
	(single-slot sal_skill_level
;+		(comment "The Skill Level at which the given Skill is being defined")
		(type INSTANCE)
;+		(allowed-classes Skill_Level)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot vlsu_dependent_technology_context
;+		(comment "Defines any dependent Technology Product Roles that determine the context in which this Vendor Lifecycle Status applies, e.g. End of Life when deployed on a specific Operating System product")
		(type INSTANCE)
;+		(allowed-classes Technology_Product_Role)
		(create-accessor read-write))
	(single-slot portal_section_label
;+		(comment "The label for a section within a portal")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot viewer_text_primary_colour
;+		(comment "The primary colour for Viewer. Typically used for headings")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot tech_logical_contained_in_arch_states
;+		(comment "The architecture states that contain this logical technology element")
		(type INSTANCE)
;+		(allowed-classes Architecture_State)
;+		(inverse-slot arch_state_technology_logical)
		(create-accessor read-write))
	(single-slot application_function_behaviour_type
;+		(comment "DEPRECATED - Identify the type of behaviour that this function is providing. It is important to focus on the main objective of this function when determining which type of behaviour is being selected.")
		(type SYMBOL)
		(allowed-values Inbound_Data Outbound_Data Process)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot io_motivated_by_driver
;+		(comment "The set of drivers that motivate the objective")
		(type INSTANCE)
;+		(allowed-classes Information_Driver)
;+		(inverse-slot id_motivates_objectives)
		(create-accessor read-write))
	(multislot logical_software_arch_elements
;+		(comment "The elements contained within a logical software architecture")
		(type INSTANCE)
;+		(allowed-classes Logical_Software_Architecture_Type)
;+		(inverse-slot contained_in_logical_software_arch)
		(create-accessor read-write))
	(single-slot report_qualifying_intro_text
;+		(comment "Defines the text that should be used in a qualifying report (typically a catalogue) when pre-selecting an element for this report")
		(type INSTANCE)
;+		(allowed-classes Commentary)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot busprocttype_to_busprocfam_is_standard
;+		(comment "Defines whether the Business Process Type is a standard for the Business Process Family")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default FALSE)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot mf_implements_framework_types
;+		(comment "Defines the types of management framework that this framework implements")
		(type INSTANCE)
;+		(allowed-classes Management_Framework_Type)
		(create-accessor read-write))
	(multislot obligation_component_service_quals
;+		(comment "The service qualities that are exhibited by the element in meeting the obligation")
		(type INSTANCE)
;+		(allowed-classes Service_Quality_Value)
		(create-accessor read-write))
	(single-slot strategic_plan_status
;+		(comment "The current status of this strategic plan.")
		(type INSTANCE)
;+		(allowed-classes Planning_Status)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot rc_revenue_end_date
;+		(comment "The end date for the revenue component")
		(type INSTANCE)
;+		(allowed-classes Time)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot application_deployment_technology_instance
;+		(comment "Specify the instance(s) of a technology provider that represents this application deployment. i.e. an instance of software or configuration at a node that is this application deployment.")
		(type INSTANCE)
;+		(allowed-classes Application_Software_Instance)
;+		(inverse-slot instance_of_application_deployment)
		(create-accessor read-write))
	(multislot principle_inf_implications_synonyms
;+		(comment "Defines synonyms for the information implications of the principle")
		(type INSTANCE)
;+		(allowed-classes Synonym)
		(create-accessor read-write))
	(multislot bo_measures
;+		(comment "DEPRECATED. TARGETS SHOULD BE CAPTURED VIA BO_ASSIGNED_TO. Captures the Business Service Quality Values that will measure success in meeting the Business Objective")
		(type INSTANCE)
;+		(allowed-classes Business_Service_Quality_Value)
		(create-accessor read-write))
	(multislot data_standard_service_qualities
;+		(comment "The set of service qualities for the Data Standard.")
		(type INSTANCE)
;+		(allowed-classes Service_Quality_Value)
		(create-accessor read-write))
	(single-slot modal_report_template_name
;+		(comment "Defines the name of the template used to display the content of the modal")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot contract_for_obligations
;+		(comment "Relationship from a contract to one or multiple obligations")
		(type INSTANCE)
;+		(allowed-classes Contractual_Obligation)
;+		(inverse-slot obligation_to_contracts)
		(create-accessor read-write))
	(multislot app_funcImp_architecture_components
;+		(comment "The set of components that are used in the architecture. There are two subtypes of component used in the architecture. \n1. Application Provider (Usages) that represent the actuall applications being used in the architecture.\n2.. Application Function Implementation (Usages) that represent the exposed functionality from the Application Providers that can be requested by other Providers, typically in an integration scenario")
		(type INSTANCE)
;+		(allowed-classes Dynamic_Application_Provider_Architecture_Type)
;+		(inverse-slot used_in_dynamic_app_provider_architecture)
		(create-accessor read-write))
	(multislot control_solution_for_controls
;+		(comment "The controls that this solution impements")
		(type INSTANCE)
;+		(allowed-classes Control)
		(cardinality 1 ?VARIABLE)
;+		(inverse-slot control_implemented_by_solutions)
		(create-accessor read-write))
	(single-slot buscap_to_parent_parent_buscap
;+		(comment "The parent business capability in the relationship")
		(type INSTANCE)
;+		(allowed-classes Business_Capability)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot element_style_class
;+		(comment "The CSS class that should be applied to the elements")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot bmp_escalation_policy
;+		(comment "Describes the Business Management Policy to which this policy escalates issues or conflicts")
		(type INSTANCE)
;+		(allowed-classes Business_Management_Policy)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot cc_cost_currency
;+		(comment "The currency in which the cost is incurred")
		(type INSTANCE)
;+		(allowed-classes Currency)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot term_in_taxonomy
;+		(comment "Slot to capture the taxonomy of which a taxonomy term is a member")
		(type INSTANCE)
;+		(allowed-classes Taxonomy)
;+		(cardinality 1 1)
;+		(inverse-slot taxonomy_terms)
		(create-accessor read-write))
	(multislot need_impact
;+		(comment "The impact of the need")
		(type INSTANCE)
;+		(allowed-classes Requirement_Impact Service_Quality)
		(create-accessor read-write))
	(single-slot indivactor_skill_level
;+		(comment "The overall skill level associated with the individual actor or job position")
		(type INSTANCE)
;+		(allowed-classes Skill_Level)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot system_ea_reference_auto_create_enabled
;+		(comment "Defines whether auto-population of the ea_reference slot is enabled")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot app_pro_to_inforep_from_app
;+		(comment "The Application Provider that uses the Information Representation")
		(type INSTANCE)
;+		(allowed-classes Application_Provider_Type)
;+		(cardinality 1 1)
;+		(inverse-slot uses_information_representation)
		(create-accessor read-write))
	(single-slot sequence_number
;+		(comment "An integer that defines the sequence step at which this relationship occurs within the dynamic view of an architecture.")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot editor_menu_link_classes
;+		(comment "The set of classes for which menu links are used in the Editor")
		(type INSTANCE)
;+		(allowed-classes %3AESSENTIAL-CLASS)
		(create-accessor read-write))
	(multislot control_related_support
;+		(comment "DEPRECATED: The set of management elements that are related to the control\\n\\nSUPERCEDED BY: controlled_elements")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
		(create-accessor read-write))
	(single-slot static_architecture_of_product_type
;+		(comment "The product type that this static architecture describes")
		(type INSTANCE)
;+		(allowed-classes Product_Type)
;+		(cardinality 1 1)
;+		(inverse-slot pt_static_architecture)
		(create-accessor read-write))
	(single-slot currency_is_default
;+		(comment "Defines whether this is the default currency for the enterprise")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default FALSE)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot ari_relation_in_application_reference_implementation_model
;+		(comment "The Application Reference Impementation Model that contains this dependency")
		(type INSTANCE)
;+		(allowed-classes Application_Reference_Implementation)
;+		(cardinality 1 1)
;+		(inverse-slot application_reference_implementation_dependencies)
		(create-accessor read-write))
	(single-slot doass_parent_data_standard
;+		(comment "The parent Data Standard for this specification")
		(type INSTANCE)
;+		(allowed-classes Info_Data_Standard)
;+		(cardinality 0 1)
;+		(inverse-slot data_object_att_standard_specs)
		(create-accessor read-write))
	(single-slot appsvc_to_bus_from_appsvc
;+		(comment "The Application Service that is supporting a process")
		(type INSTANCE)
;+		(allowed-classes Application_Service)
;+		(cardinality 1 1)
;+		(inverse-slot supports_business_process_appsvc)
		(create-accessor read-write))
	(single-slot is_type_of_skill
;+		(comment "Relationship to the Skill Type class instance that a skill is a type of.")
		(type INSTANCE)
;+		(allowed-classes Skill_Type)
;+		(cardinality 0 1)
;+		(inverse-slot realised_by_skill)
		(create-accessor read-write))
	(multislot contained_architecture_components
;+		(comment "The set of Technology Product Usages and Technology Product Function Usages used in a Technology Product Architecture")
		(type INSTANCE)
;+		(allowed-classes Technology_Build_Architecture_Type)
;+		(inverse-slot used_in_technology_provider_architecture)
		(create-accessor read-write))
	(single-slot data_subject_organisation_owner
;+		(comment "DEPRECATED - Slot to capture the organisation that owns the Data Subject in terms of a Group Actor in the business layer\\n\\nUse 'stakeholders' slot with ACTOR_TO_ROLE_RELATION instances")
		(type INSTANCE)
;+		(allowed-classes Group_Actor)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot system_cq_review_policy_reviewer_instance_template_path
;+		(comment "The path to the content template that should be used to generate a read-only summary of an instance to be reviewed")
		(type STRING)
		(default "editors/enterprise/content-governance-dashboard/default-content-reviewer-instance-review-template.html")
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot realisation_of_function_type
		(type INSTANCE)
;+		(allowed-classes Technology_Function_Type)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot contained_product_types
;+		(comment "The set of Product Type instances that are contained in a Composite.")
		(type INSTANCE)
;+		(allowed-classes Product_Type)
		(create-accessor read-write))
	(multislot business_process_owned_by_business_role
;+		(comment "The business role that owns the given business process type")
		(type INSTANCE)
;+		(allowed-classes Business_Role)
;+		(inverse-slot owns_business_process)
		(create-accessor read-write))
	(multislot contains_business_roles
;+		(comment "The business roles that comprise this business role")
		(type INSTANCE)
;+		(allowed-classes Business_Role)
;+		(inverse-slot is_member_of_business_role)
		(create-accessor read-write))
	(single-slot ca_proposed_start_date_iso_8601
;+		(comment "The date from when a change activity is expected to start in ISO 8601 format (yyyy-mm-dd)")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot doss_parent_data_standard
;+		(comment "The parent Data Standard for this specification")
		(type INSTANCE)
;+		(allowed-classes Info_Data_Standard)
;+		(cardinality 0 1)
;+		(inverse-slot data_object_standard_specs)
		(create-accessor read-write))
	(multislot projects_for_programme
;+		(comment "Slot to manage the set of Projects that are part of a Programme")
		(type INSTANCE)
;+		(allowed-classes Project)
;+		(inverse-slot contained_in_programme)
		(create-accessor read-write))
	(multislot business_model_directives
;+		(comment "Defines a list of statements describing the overall mode of operation for the different types of elements that comprise the Business Model")
		(type INSTANCE)
;+		(allowed-classes Business_Model_Directive)
;+		(inverse-slot bmd_for_business_model)
		(create-accessor read-write))
	(single-slot used_in_business_capability_chain
;+		(comment "The Business Capability Chain in which this element is contained")
		(type INSTANCE)
;+		(allowed-classes Business_Capability_Chain)
;+		(cardinality 0 1)
;+		(inverse-slot chain_steps_used)
		(create-accessor read-write))
	(multislot sd_application_elements
;+		(comment "The set of Application elements that are part of the Security Deployment")
		(type INSTANCE)
;+		(allowed-classes Application_Deployment)
		(create-accessor read-write))
	(single-slot provides_technology_function
;+		(comment "A reference to the Technology Function that this Technology Product Function Usage is providing.")
		(type INSTANCE)
;+		(allowed-classes Technology_Function)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot contained_target_business_processes
;+		(comment "The sub Target Business Processes that make up a Target Business Process")
		(type INSTANCE)
;+		(allowed-classes)
		(create-accessor read-write))
	(multislot strategic_plan_drivers
;+		(comment "The strategic drivers that have motivated the need for the strategic plan")
		(type INSTANCE)
;+		(allowed-classes Business_Driver Application_Driver Information_Driver Technology_Driver)
		(create-accessor read-write))
	(single-slot assessed_control_solution
;+		(comment "The Control Solution that is being assessed")
		(type INSTANCE)
;+		(allowed-classes Control_Solution)
;+		(cardinality 1 1)
;+		(inverse-slot control_solution_assessments)
		(create-accessor read-write))
	(multislot business_model_architecture_dependencies
;+		(comment "The relations representing dependencies between the conceptual elements that comprise the Business Model Architecture")
		(type INSTANCE)
;+		(allowed-classes %3ABM-DIAGRAM-RELATION)
;+		(inverse-slot %3Arelation_in_business_model_architecture)
		(create-accessor read-write))
	(single-slot cc_cost_end_date_iso_8601
;+		(comment "The end date for the cost component in ISO 8601 format (yyyy-mm-dd)")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot sqc_service_quality
;+		(comment "The service quality for which the change is defined")
		(type INSTANCE)
;+		(allowed-classes Service_Quality)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot app_fun_impl_requires_tech_cap
;+		(comment "Specifies the Technology Capabilities that an Application Function Implementation requires")
		(type INSTANCE)
;+		(allowed-classes APP_FUNCIMPL_TO_TECH_CAP_RELATION)
;+		(inverse-slot app_fun_impl_to_tech_FROM_app)
		(create-accessor read-write))
	(single-slot ms_end_date_ISO8601
;+		(comment "Defines the date at which the managed service will no longer be available")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot app_principle_tech_implications
;+		(comment "Commentary describing the technology implications of the application principle")
		(type STRING)
		(create-accessor read-write))
	(single-slot obj_to_svc_quality_service_quality
;+		(comment "The service quality that is used to measure the performance against the objective")
		(type INSTANCE)
;+		(allowed-classes Service_Quality)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot report_group_label
;+		(comment "The label to be displayed for the report group")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot rc_enabled
;+		(comment "Determines whether the criterion should be included for evaluation by the asscociated report")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default TRUE)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot pwtc_theme
;+		(comment "The parent Presentation Widget Theme using the colour")
		(type INSTANCE)
;+		(allowed-classes Widget_Theme)
;+		(cardinality 1 1)
;+		(inverse-slot pwt_category_colour_scheme)
		(create-accessor read-write))
	(single-slot editor_component_supports_sub_components
;+		(comment "Defines whether teh component suipports sub components")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default FALSE)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot sr_org_scope
;+		(comment "The organisations for which this requirements specifically applies")
		(type INSTANCE)
;+		(allowed-classes Group_Actor)
		(create-accessor read-write))
	(multislot data_object_standard_specs
;+		(comment "The set of Data Object Standard Specifications associated with the Data Standard")
		(type INSTANCE)
;+		(allowed-classes Data_Object_Standard_Specification)
;+		(inverse-slot doss_parent_data_standard)
		(create-accessor read-write))
	(multislot initiative_business_models
;+		(comment "The Business Models that are identified as being in scope for the strategic initiative")
		(type INSTANCE)
;+		(allowed-classes Business_Model)
		(create-accessor read-write))
	(multislot id_motivates_objectives
;+		(comment "The set of objectives that are motivated by the driver")
		(type INSTANCE)
;+		(allowed-classes Information_Architecture_Objective)
;+		(inverse-slot io_motivated_by_driver)
		(create-accessor read-write))
	(multislot application_principle_relevant_to_application_capabilities
;+		(comment "")
		(type INSTANCE)
;+		(allowed-classes Application_Capability)
;+		(inverse-slot relevant_application_principles)
		(create-accessor read-write))
	(multislot arch_state_information_conceptual
;+		(comment "Slot to group the set of architectures from the Information Conceptual layer in an Architecture State")
		(type INSTANCE)
;+		(allowed-classes Information_Conceptual)
;+		(inverse-slot info_conceptual_contained_in_arch_states)
		(create-accessor read-write))
	(multislot risk_leads_to
;+		(comment "The set of risks that can follow from the risk")
		(type INSTANCE)
;+		(allowed-classes Risk)
;+		(inverse-slot risk_leading_to)
		(create-accessor read-write))
	(multislot idea_for_strategic_reqs
;+		(comment "The list of requirements that the idea seeks to address")
		(type INSTANCE)
;+		(allowed-classes Strategic_Requirement)
;+		(inverse-slot sr_ideas)
		(create-accessor read-write))
	(single-slot time_year
;+		(comment "Slot to manage the month 'year' of a Time instance")
		(type SYMBOL)
		(allowed-values 2000 2001 2002 2003 2004 2005 2006 2007 2008 2009 2010 2011 2012 2013 2014 2015 2016 2017 2018 2019 2020 2021 2022 2023 2024 2025 2026 2027 2028 2029 2030 2031 2032 2033 2034 2035 2036 2037 2038 2039 2040 2041 2042 2043 2044 2045 2046 2047 2048 2049 2050)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot act_to_obj_target_value
;+		(comment "An optional target that has been defined for the objective")
		(type INSTANCE)
;+		(allowed-classes Service_Quality_Value)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot contained_relations_in_tech_product_architecture
;+		(comment "The set of relations that are contained in this Technology Product Architecture")
		(type INSTANCE)
;+		(allowed-classes %3ATPRA-RELATION)
;+		(inverse-slot relation_contained_in_tech_product_architecture)
		(create-accessor read-write))
	(single-slot app_service_static_model_architecture
;+		(comment "A static model defining the sub components of the service and the dependencies between them.")
		(type INSTANCE)
;+		(allowed-classes Static_Application_Service_Architecture)
;+		(cardinality 0 1)
;+		(inverse-slot static_architecture_of_app_svc)
		(create-accessor read-write))
	(multislot mft_managed_application_scope
;+		(comment "Defines the scope of application elements that are controlled by this type of management framework")
		(type INSTANCE)
;+		(allowed-classes Application_Relationship Application_Layer)
		(create-accessor read-write))
	(single-slot app_func_impl_protocol
;+		(comment "The protocol that is used to invoke an application function implementation")
		(type INSTANCE)
;+		(allowed-classes Technology_Protocol)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ibral_skill_level
;+		(comment "The skill level at which the role is being performed")
		(type INSTANCE)
;+		(allowed-classes Skill_Level)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot architecture_of_business_model_configuration
;+		(comment "The Business Model Configuration that this architecture describes")
		(type INSTANCE)
;+		(allowed-classes Business_Model_Configuration)
;+		(cardinality 1 1)
;+		(inverse-slot bmc_architecture)
		(create-accessor read-write))
	(single-slot license_type
;+		(comment "Relationship from a License instance that defines the type of license that it is.")
		(type INSTANCE)
;+		(allowed-classes License_Type)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot idea_to_element_change_action
;+		(comment "The change that is the being suggested for the EA element")
		(type INSTANCE)
;+		(allowed-classes Planning_Action)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot editor_component_supported_cardinality
;+		(comment "The slot cardinality supported by the Editor Component")
		(type INSTANCE)
;+		(allowed-classes Editor_Component_Cardinality)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot budget_currency
;+		(comment "The currency in which the budgetary element amounts are defined")
		(type INSTANCE)
;+		(allowed-classes Currency)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot bus_conceptual_contained_in_arch_states
;+		(comment "The architecture states that contain this conceptual business element")
		(type INSTANCE)
;+		(allowed-classes Architecture_State)
;+		(inverse-slot arch_state_business_conceptual)
		(create-accessor read-write))
	(multislot performed_by_business_role_task
;+		(comment "The Business Role that performs this Business Task.")
		(type INSTANCE)
;+		(allowed-classes Business_Role)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(single-slot report_scoping_api
;+		(comment "The Dataset API that provides the lists of instances that can be used to scope this view")
		(type INSTANCE)
;+		(allowed-classes Data_Set_API)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot contained_in_content_classification_group
;+		(comment "Relation to the classification group to which a security classification belongs")
		(type INSTANCE)
;+		(allowed-classes EA_Content_Classification_Group)
;+		(cardinality 0 1)
;+		(inverse-slot contains_content_classifications)
		(create-accessor read-write))
	(multislot bus_env_factor_weighted_dependencies
;+		(comment "The weighted dependencies on Business Environment Factors")
		(type INSTANCE)
;+		(allowed-classes Business_Environment_Weighted_Dependency)
;+		(inverse-slot be_weighted_dep_from_element)
		(create-accessor read-write))
	(multislot implements_information_views
;+		(comment "The Information View that this Representation implements.")
		(type INSTANCE)
;+		(allowed-classes Information_View)
;+		(inverse-slot has_information_representations)
		(create-accessor read-write))
	(multislot sr_rationale_statements
;+		(comment "A summary of the reasons behind, or benefits realised if the requirement is met")
		(type INSTANCE)
;+		(allowed-classes Commentary)
		(create-accessor read-write))
	(single-slot role_skill_level
;+		(comment "The overall skill level of the role")
		(type INSTANCE)
;+		(allowed-classes Skill_Level)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot id_has_app_implications
;+		(comment "The of Application Drivers for which an information driver has implications.")
		(type INSTANCE)
;+		(allowed-classes Application_Driver)
		(create-accessor read-write))
	(multislot target_performance_measures
;+		(comment "The Performance Measures that are defined as targets for this element")
		(type INSTANCE)
;+		(allowed-classes Performance_Measure)
;+		(inverse-slot pm_target_measure_for_element)
		(create-accessor read-write))
	(single-slot arch_state_application_relation
		(type STRING)
;+		(cardinality 0 1)
;+		(inverse-slot app_relation_contained_in_arch_states)
		(create-accessor read-write))
	(single-slot physical_data_volume
;+		(comment "The volume of data stored against this physical data element")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot external_to_enterprise
;+		(comment "Determines whether an actor or role is internal or external to the organisation being modelled")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default FALSE)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot contained_technology_nodes
;+		(comment "The set of Technology Nodes that are contained in this Technology Node")
		(type INSTANCE)
;+		(allowed-classes Technology_Node)
;+		(inverse-slot inverse_of_contained_technology_nodes)
		(create-accessor read-write))
	(single-slot contract_renewal_notice_days
;+		(comment "number of days notice required for contract renewal")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot issue_source
;+		(comment "The actor who has raised the issue")
		(type INSTANCE)
;+		(allowed-classes Actor)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot sti_cost_impacts
;+		(comment "The types of cost that are impacted if the implication is realised")
		(type INSTANCE)
;+		(allowed-classes Cost_Component_Change)
		(create-accessor read-write))
	(single-slot from_job_skill_relation
;+		(comment "The Job Position that requries the Skill")
		(type INSTANCE)
;+		(allowed-classes Job_Position)
;+		(cardinality 1 1)
;+		(inverse-slot job_requires_skills)
		(create-accessor read-write))
	(single-slot infrep_att_value_max_length
;+		(comment "Defines the maximum length allowed for values of the Information Representation Attribute")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot ap_site_access
;+		(comment "The sites from which this application provider is accessed")
		(type INSTANCE)
;+		(allowed-classes Site)
		(create-accessor read-write))
	(single-slot application_function_architecture
;+		(comment "The defining Application Function Architecture for an Application Function.")
		(type INSTANCE)
;+		(allowed-classes Dynamic_Application_Service_Architecture)
;+		(cardinality 0 1)
;+		(inverse-slot dynamic_architecture_of_app_fun)
		(create-accessor read-write))
	(multislot contained_information_representations
;+		(comment "Sub Information Representations from which an Information Representation can be composed.")
		(type INSTANCE)
;+		(allowed-classes Information_Representation)
		(create-accessor read-write))
	(single-slot ea_security_user_id
;+		(comment "The username for a user of the system")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot bmc_architecture_dependencies
;+		(comment "The dependencies that exist between elements that comprise a Business Model Configuration Architecture")
		(type INSTANCE)
;+		(allowed-classes %3ABMC-DIAGRAM-RELATION)
;+		(inverse-slot bmc_relation_in_business_model_config_architecture)
		(create-accessor read-write))
	(single-slot app_to_bus_from_app
;+		(comment "The Application (Group) that is supporting a process")
		(type INSTANCE)
;+		(allowed-classes Application_Family)
;+		(cardinality 1 1)
;+		(inverse-slot supports_business_process_app)
		(create-accessor read-write))
	(multislot bpfd_decision_makers
;+		(comment "The logical roles that are responsible for reaching this decision")
		(type INSTANCE)
;+		(allowed-classes Business_Role)
		(create-accessor read-write))
	(single-slot pwt_renderer_file_path
;+		(comment "The path to the file containing the function that renders the template")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot ra_assessed_risk
;+		(comment "The Risk being assessed")
		(type INSTANCE)
;+		(allowed-classes Risk)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot chain_steps_used
;+		(comment "The set of Business Capabilities that are used to define the steps in a Business Capability Chain.")
		(type INSTANCE)
;+		(allowed-classes Business_Capability_Chain_Type)
;+		(inverse-slot used_in_business_capability_chain)
		(create-accessor read-write))
	(multislot objective_for_business_domains
;+		(comment "")
		(type INSTANCE)
;+		(allowed-classes Business_Domain)
;+		(inverse-slot strategic_objectives)
		(create-accessor read-write))
	(multislot supporting_application_principles
;+		(comment "")
		(type INSTANCE)
;+		(allowed-classes Application_Architecture_Principle)
;+		(inverse-slot supports_application_objectives)
		(create-accessor read-write))
	(single-slot physbusproc_to_appinfoview_info_delivery
;+		(comment "Describes how the information used is delivered")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot system_element_to_comms_method_to_comms_method
;+		(comment "The method of communication to be used")
		(type INSTANCE)
;+		(allowed-classes SYS_COMMUNICATION_METHOD)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot editor_data_set_apis
;+		(comment "The Data Set APIs tha are accessed by the Editor")
		(type INSTANCE)
;+		(allowed-classes Data_Set_API)
		(create-accessor read-write))
	(multislot business_assumptions
;+		(comment "The business elements relevant to the assumption")
		(type INSTANCE)
;+		(allowed-classes Business_Layer)
		(create-accessor read-write))
	(single-slot ca_criticality
;+		(comment "Defines the relative business criticality of the change activity")
		(type INSTANCE)
;+		(allowed-classes Business_Criticality)
		(default [essential_prj_CC_v1.4.2_Instance_60025])
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot brm_relation_in_business_reference_architecture_model
;+		(comment "The Business Reference Architecture Model that contains this dependency")
		(type INSTANCE)
;+		(allowed-classes Business_Reference_Architecture)
;+		(cardinality 1 1)
;+		(inverse-slot business_reference_architecture_dependencies)
		(create-accessor read-write))
	(single-slot group_actor_lifecycle_status
;+		(comment "Defines the current lifecycle status of the Organisation")
		(type INSTANCE)
;+		(allowed-classes Group_Actor_Lifecycle_Status)
		(default [store_55_Class21])
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot provider_as_role
;+		(comment "The Provider and its Role (Technology Component) in a Technology Provider Architecture")
		(type INSTANCE)
;+		(allowed-classes Technology_Provider_Role)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ap_max_number_of_users
;+		(comment "Defines the maximum number of users for the application")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot data_standard_allowed_formats
;+		(comment "Defines the technology formats that are permitted for this information/data standard")
		(type INSTANCE)
;+		(allowed-classes Technology_Product_Role)
		(create-accessor read-write))
	(multislot has_information_views
;+		(comment "The informations views that describe this information concept")
		(type INSTANCE)
;+		(allowed-classes Information_View)
;+		(inverse-slot refinement_of_information_concept)
		(create-accessor read-write))
	(single-slot amp_escalation_policy
;+		(comment "Describes the Application Management Policy to which this policy escalates issues or conflicts")
		(type INSTANCE)
;+		(allowed-classes Application_Management_Policy)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot lifecycle_status_content_status
;+		(comment "Defines the system content status that maps to the lifecycle status")
		(type INSTANCE)
;+		(allowed-classes SYS_CONTENT_APPROVAL_STATUS)
		(default [essential_baseline_6.5.4_Class67])
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot supporting_doa_standard_specs
;+		(comment "The set of related Data Object Attribute Standard Specifications")
		(type INSTANCE)
;+		(allowed-classes Data_Object_Attribute_Standard_Specification)
;+		(inverse-slot parent_data_object_standard_spec)
		(create-accessor read-write))
	(single-slot belongs_to_information_store_group
;+		(comment "The Information Store Group that this Information Store belongs to.")
		(type INSTANCE)
;+		(allowed-classes Information_Store_Group)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot rdulb_regulation
;+		(comment "The regulation that requires this legal basis for using information or data")
		(type INSTANCE)
;+		(allowed-classes Regulation)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot project_start_state
;+		(comment "DEPRECATED: The architecture state describing the relevant starting configuration for this project. This state can cover all layers of the architecture")
		(type INSTANCE)
;+		(allowed-classes Architecture_State)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot sq_correlation_from_element
;+		(comment "The element that has the correlation with the service quality")
		(type INSTANCE)
;+		(allowed-classes EA_Relation EA_Class)
;+		(cardinality 1 1)
;+		(inverse-slot service_quality_correlations)
		(create-accessor read-write))
	(multislot data_created_by_app_func_impls
;+		(comment "DEPRECATED.")
		(type INSTANCE)
;+		(allowed-classes Application_Function_Implementation)
;+		(inverse-slot app_func_impl_creates_data_in)
		(create-accessor read-write))
	(single-slot bps_standard_business_process
;+		(comment "A business process defined as the standards for the related business capability")
		(type INSTANCE)
;+		(allowed-classes Business_Process_Type)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot coord_x
;+		(comment "The x-coordinate attribute of an object in a graphical model")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot coord_y
;+		(comment "The y-coordinate attribute of an object in a graphical model")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ccr_renewal_notice_days
;+		(comment "Defines the number of days prior to the contracted end date that notice of contract cancellation must be given")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot report_constant_ea_elements
;+		(comment "The EA elements or relations that are associated with this report constant")
		(type INSTANCE)
;+		(allowed-classes EA_Class EA_Relation)
		(create-accessor read-write))
	(multislot interpreted_by_system_events
;+		(comment "Slot defining the set of System Events that are interpreted as a Business Event.")
		(type INSTANCE)
;+		(allowed-classes System_Event)
;+		(inverse-slot interpreted_as_business_event)
		(create-accessor read-write))
	(multislot refinement_of_information_concept
;+		(comment "The Information Concept that a View is a refinement of")
		(type INSTANCE)
;+		(allowed-classes Information_Concept)
		(cardinality 1 ?VARIABLE)
;+		(inverse-slot has_information_views)
		(create-accessor read-write))
	(single-slot data_object_attribute_standard_name
;+		(comment "")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot capability_weighted_dependencies
;+		(comment "The weighted dependencies between this element and Business, Application or Technology Capabilities")
		(type INSTANCE)
;+		(allowed-classes Capability_Weighted_Dependency)
;+		(inverse-slot cap_weighted_dep_from_element)
		(create-accessor read-write))
	(multislot operates_at_site_categories
;+		(comment "The site categories where this Business Role operates.")
		(type INSTANCE)
;+		(allowed-classes Site_Category)
		(create-accessor read-write))
	(single-slot has_software_architecture
;+		(comment "the logical software architeure of this application provider")
		(type INSTANCE)
;+		(allowed-classes Logical_Software_Architecture)
;+		(cardinality 0 1)
;+		(inverse-slot software_architecture_of_app_provider)
		(create-accessor read-write))
	(single-slot inverse_of_application_service_usage_dependencies
;+		(comment "Relation back to containing architecture")
		(type INSTANCE)
;+		(allowed-classes Static_Application_Service_Architecture)
;+		(cardinality 0 1)
;+		(inverse-slot application_service_usage_dependencies)
		(create-accessor read-write))
	(multislot license_compatible_with
;+		(comment "Relationship from a License instance that defines a set of compatible license instances.")
		(type INSTANCE)
;+		(allowed-classes License)
		(create-accessor read-write))
	(single-slot usage_of_technology_node
;+		(comment "Specification of the Technology Node that is being used.")
		(type INSTANCE)
;+		(allowed-classes Technology_Node)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot business_objectives_for_business_capability
;+		(comment "Slot to define the relationship to the Business Objectives that this Business Capability supports")
		(type INSTANCE)
;+		(allowed-classes Business_Objective)
;+		(inverse-slot supporting_business_capabilities)
		(create-accessor read-write))
	(single-slot gr_region_centrepoint
;+		(comment "A longitude and latitude for the centre of the region")
		(type INSTANCE)
;+		(allowed-classes GeoCode)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot project_start_date
;+		(comment "DEPRECATED. the start date for the project")
		(type INSTANCE)
;+		(allowed-classes Time)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot required_technology_capabilities
;+		(comment "The technology capabilities that are expected to be required to implement the service")
		(type INSTANCE)
;+		(allowed-classes Technology_Capability)
		(create-accessor read-write))
	(single-slot sti_label
;+		(comment "A short name for the strategic trend implication")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot ca_target_rate_of_return
;+		(comment "Defines the target percentage rate of return for the change activity as a decimal, between 0.0 and 1.0")
		(type FLOAT)
		(range 0.0 1.0)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot idea_geo_scope
;+		(comment "The geographic regions that are in scope for the Idea")
		(type INSTANCE)
;+		(allowed-classes Geographic_Region)
		(create-accessor read-write))
	(single-slot cache_instance_type
;+		(comment "Defines the Class (type) of the instances for which the selected Report / View should be cached. e.g. a business process summary would accept instances of type Business Process Type")
		(type INSTANCE)
;+		(allowed-classes %3ASTANDARD-CLASS)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot cust_journey_phase_to_channel_from_cust_journey_phase
;+		(comment "The Customer Journey Phase that is related to the Channel")
		(type INSTANCE)
;+		(allowed-classes Customer_Journey_Phase)
;+		(cardinality 1 1)
;+		(inverse-slot cjp_channel)
		(create-accessor read-write))
	(single-slot TECHNOLOGY_PROTOCOL
;+		(comment "Technology Protocol that is used in an instance of this relationship. This slot is used from subclasses of the EAS_Relationship relation (Class).")
		(type INSTANCE)
;+		(allowed-classes Technology_Protocol_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot system_cq_review_policy_default_editor
;+		(comment "The deafult editor that should be used to edit instances of the class against which the policy is defined")
		(type INSTANCE)
;+		(allowed-classes Editor)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot report_to_portal_section_index
;+		(comment "A numerical value used to define the sequence of the reports in the portal section")
		(type INTEGER)
		(default 0)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot application_provider_deployed
;+		(comment "Slot to hold the Application Provider that is being deployed in an Application Deployment")
		(type INSTANCE)
;+		(allowed-classes Application_Provider)
;+		(cardinality 0 1)
;+		(inverse-slot deployments_of_application_provider)
		(create-accessor read-write))
	(single-slot report_group_intro_text
;+		(comment "The text used to introduce this report group")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot cust_journey_phase_to_experience_from_cust_journey_phase
;+		(comment "The Customer Journey Phase that is related to the Customer Experience")
		(type INSTANCE)
;+		(allowed-classes Customer_Journey_Phase)
;+		(cardinality 1 1)
;+		(inverse-slot cjp_experience_rating)
		(create-accessor read-write))
	(single-slot ra_end_date_iso_8601
;+		(comment "The date up to which point the resource allocation ends in ISO 8601 format (yyyy-mm-dd)")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot cjp_customer_journey
;+		(comment "The parent Customer Journey that contains this Customer Journey Phase")
		(type INSTANCE)
;+		(allowed-classes Customer_Journey)
;+		(cardinality 1 1)
;+		(inverse-slot cj_phases)
		(create-accessor read-write))
	(multislot assessment_for_elements
;+		(comment "DEPRECATED: Relationship to the elements that have been assessed.")
		(type INSTANCE)
;+		(allowed-classes %3AEA_Graph_Relation EA_Relation EA_Class)
		(create-accessor read-write))
	(multislot bp_applicable_business_rules
;+		(comment "The set of business rules that apply to the step in a process flow definition.")
		(type INSTANCE)
;+		(allowed-classes Business_Rule)
		(create-accessor read-write))
	(single-slot standard_spec_for_data_object_att
;+		(comment "The Data Object Atribute against which this standard specification is defined")
		(type INSTANCE)
;+		(allowed-classes Data_Object_Attribute)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot system_ea_reference_padding
;+		(comment "Defines the number padding that should be applied to counter segments of an auto-populated ea_reference")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot system_creation_datetime_iso8601
;+		(comment "The date and time at which this element was created")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot bus_process_type_updates_information
;+		(comment "DEPRECATED.\\nThe set of Information Representations that this process updates")
		(type INSTANCE)
;+		(allowed-classes Information_View_Type)
;+		(inverse-slot information_updated_by_bus_process_types)
		(create-accessor read-write))
	(single-slot system_essential_slot_priority_level
;+		(comment "The relative priority/importance for the slot being populated in instances of the class")
		(type INSTANCE)
;+		(allowed-classes SYS_SLOT_PRIORITY_LEVEL)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot operates_on_information_representation
;+		(comment "DEPRECATED - REPLACED BY 'uses_information_representation'.\\nThe Information Representation that an Application Provider operates on.")
		(type INSTANCE)
;+		(allowed-classes Information_Representation)
		(create-accessor read-write))
	(multislot cj_phases
;+		(comment "The sequence of Customer Journey Phases that take place within this Customer Journey")
		(type INSTANCE)
;+		(allowed-classes Customer_Journey_Phase)
;+		(inverse-slot cjp_customer_journey)
		(create-accessor read-write))
	(multislot busproctype_belongs_to_busprocfamily
;+		(comment "The Business Process Family to which the Business Process Type belongs")
		(type INSTANCE)
;+		(allowed-classes Business_Process_Family)
;+		(inverse-slot bpf_contains_busproctypes)
		(create-accessor read-write))
	(multislot owned_ea_content
;+		(comment "The set of EA elements that are owned by the Content Owner")
		(type INSTANCE)
;+		(allowed-classes EA_Class EA_Relation)
		(create-accessor read-write))
	(multislot ss_technology_elements
;+		(comment "The set of Technology elements that are part of the Security Solution")
		(type INSTANCE)
;+		(allowed-classes Technology_Provider)
		(create-accessor read-write))
	(single-slot app_svc_creates_info_view
;+		(comment "Defines whether the Application Service creates the Information View")
		(type SYMBOL)
		(allowed-values Yes No Unknown)
		(default Unknown)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot act_to_role_is_primary
;+		(comment "Defines whether or not the role is the main responsibility for the actor")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default FALSE)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot compliance_obligation_lifecycle_status
;+		(comment "The lifecycle status of the obligation")
		(type INSTANCE)
;+		(allowed-classes Obligation_Lifecycle_Status)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot control_supported_by_information
;+		(comment "DEPRECATED: The information elements that support the implementation of this control\\n\\nSUPERCEDED BY: control_implemented_by_solutions")
		(type INSTANCE)
;+		(allowed-classes Information_Layer)
		(create-accessor read-write))
	(single-slot usage_of_technology_product
		(type INSTANCE)
;+		(allowed-classes Technology_Provider)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot report_menu_item_target_report
;+		(comment "Defines the report that the menu item navigates to")
		(type INSTANCE)
;+		(allowed-classes Report Editor_Section)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot contained_business_capabilities
;+		(comment "A business capability can be composed of sub-business capabilities.")
		(type INSTANCE)
;+		(allowed-classes Business_Capability)
;+		(inverse-slot supports_business_capabilities)
		(create-accessor read-write))
	(single-slot busprocttype_to_busprocfam_busprocfam
;+		(comment "The Business Process Family to which the Business Process Type belongs")
		(type INSTANCE)
;+		(allowed-classes Business_Process_Family)
;+		(cardinality 1 1)
;+		(inverse-slot bpf_contained_business_process_types)
		(create-accessor read-write))
	(single-slot business_capability_purpose
;+		(comment "Describes the nature/purpose of the Business Capability e.g. using the IBM BCM modelling approach")
		(type INSTANCE)
;+		(allowed-classes Business_Capability_Purpose)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot bus_responsibility_relation_to_element
;+		(comment "The EA element or which the responsibility is being defined")
		(type INSTANCE)
;+		(allowed-classes EA_Class EA_Relation %3AEA_Graph_Relation)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot asru_usage_of_application_service
;+		(comment "The Application Service that is being used in the Applicaton Reference Architecture")
		(type INSTANCE)
;+		(allowed-classes Application_Service)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot data_deleted_by_app_func_impls
;+		(comment "DEPRECATED.")
		(type INSTANCE)
;+		(allowed-classes Application_Function_Implementation)
;+		(inverse-slot app_func_impl_deletes_data_from)
		(create-accessor read-write))
	(multislot vsg_emotions
;+		(comment "The emotions felt by participants in the value stage")
		(type INSTANCE)
;+		(allowed-classes VALUE_STAGE_TO_EMOTION_RELATION)
;+		(inverse-slot value_stage_to_emotion_from_value_stage)
		(create-accessor read-write))
	(multislot automates_business_process_appfunimpl
;+		(comment "The Business Process, Tasks or Activities that are automated by the Application Function Implementation.")
		(type INSTANCE)
;+		(allowed-classes APP_FUNIMPL_TO_BUS_RELATION)
		(create-accessor read-write))
	(single-slot retention_period
;+		(comment "The retention period that applies in this records management policy.")
		(type INSTANCE)
;+		(allowed-classes Retention_Period)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supplier_contact_telephone
;+		(comment "The telephone number that is used to contact the Supplier")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot security_classification_index
;+		(comment "Numerical index to control the hierarchy / sequence of classifications within a group.")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot regulation_for_compliance_obligations
;+		(comment "Relationship from a regulation to one or multiple compliance obligations")
		(type INSTANCE)
;+		(allowed-classes Compliance_Obligation)
;+		(inverse-slot obligation_to_regulations)
		(create-accessor read-write))
	(single-slot belongs_to_data_object
;+		(comment "The data object that this attribute is part of")
		(type INSTANCE)
;+		(allowed-classes Data_Object)
;+		(cardinality 1 1)
;+		(inverse-slot contained_data_attributes)
		(create-accessor read-write))
	(multislot objective_for_application_capabilities
;+		(comment "")
		(type INSTANCE)
;+		(allowed-classes Application_Capability)
;+		(inverse-slot application_objectives_for_application_capability)
		(create-accessor read-write))
	(single-slot project_activity_end_date
;+		(comment "DEPRECATED.")
		(type INSTANCE)
;+		(allowed-classes Time)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot gr_region_identifier
;+		(comment "An optional unique identifier for a region (e.g. ISO Country Code)")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot strategic_planning_action
;+		(comment "DEPRECATED - USE AS PART OF  \\\"strategic_plan_for_elements\\\" slot: The action that is to be taken as part of the Strategic Plan")
		(type INSTANCE)
;+		(allowed-classes Planning_Action)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot provides_application_service
;+		(comment "DEPRECATED. The Application Services that this Application Provider provides")
		(type INSTANCE)
;+		(allowed-classes Application_Service)
;+		(inverse-slot provided_by_application_provider)
		(create-accessor read-write))
	(multislot bo_performance_measures
;+		(comment "Defines the service qualities used to measure performance against the objective")
		(type INSTANCE)
;+		(allowed-classes OBJ_TO_SVC_QUALITY_RELATION)
;+		(inverse-slot obj_to_svc_quality_objective)
		(create-accessor read-write))
	(multislot related_information_view
;+		(comment "Slot to hold the related Information Views that a Business Event is associated with.")
		(type INSTANCE)
;+		(allowed-classes Information_View)
		(create-accessor read-write))
	(single-slot technology_product_as_role
;+		(comment "The Product and its Role (Technology Component) in a Technology Product Architecture")
		(type INSTANCE)
;+		(allowed-classes Technology_Product_Role)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot contract_component_service_quals
;+		(comment "Slot to manage the set of service qualities that apply to the components that are being provided in contract")
		(type INSTANCE)
;+		(allowed-classes Business_Service_Quality_Value)
		(create-accessor read-write))
	(single-slot system_cq_policy_to_role_relationship_type
;+		(comment "The nature of the association that the individual actor playing the assigned role should have with instances being reviewed")
		(type INSTANCE)
;+		(allowed-classes SYS_CONTENT_QUALITY_RELATIONSHIP_TYPE)
		(default [store_55_Class4])
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot goal_supported_by_objectives
;+		(comment "The objectives that help to meet the goal")
		(type INSTANCE)
;+		(allowed-classes Business_Objective Information_Architecture_Objective Application_Architecture_Objective Technology_Architecture_Objective)
;+		(inverse-slot objective_supports_goals)
		(create-accessor read-write))
	(multislot bl_managed_by_services
;+		(comment "The managed services that are related to this Business element")
		(type INSTANCE)
;+		(allowed-classes Managed_Service)
;+		(inverse-slot ms_managed_bus_elements)
		(create-accessor read-write))
	(multislot inverse_of_contained_technology_nodes
;+		(comment "The set of Technology Nodes in which this node is contained.")
		(type INSTANCE)
;+		(allowed-classes Technology_Node)
;+		(inverse-slot contained_technology_nodes)
		(create-accessor read-write))
	(multislot member_of_business_role_types
;+		(comment "The Business Role Type to which a Business Role Type belongs.")
		(type INSTANCE)
;+		(allowed-classes Business_Role_Type)
;+		(inverse-slot contained_business_role_types)
		(create-accessor read-write))
	(single-slot ea_recovery_time_objective
;+		(comment "Defines the maximum amount of time the application can be unavailable for use without resulting in a significant impact on the enterprise")
		(type INSTANCE)
;+		(allowed-classes Recovery_Time_Objective)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot gl_geocode
;+		(comment "A single geocode (representing a geographical point) for the Geographic Location")
		(type INSTANCE)
;+		(allowed-classes GeoCode)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot pw_is_enabled
;+		(comment "Determines whether the widget is available to be used")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default TRUE)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot roadmap_strategic_plans
;+		(comment "The strategic plans to be undertaken in order to deliver the target state of the roadmap. Together they provide a finer grained view of the changes to be undertaken")
		(type INSTANCE)
;+		(allowed-classes Strategic_Plan)
		(create-accessor read-write))
	(single-slot budget_amount
;+		(comment "The amount of money being budgeted")
		(type FLOAT)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot budget_approval_status
;+		(comment "The approval status of the BUdgetary Element")
		(type INSTANCE)
;+		(allowed-classes Budget_Approval_Status)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot system_cq_review_policy_reviewer_instance_api_params
;+		(comment "The URL paramteres to be used when requesting to populate the Content Review Dashboards for this class")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot busproctype2infoview_updates_dataobj
;+		(comment "Defines whether the business process type updates the data object when interacting with an information view")
		(type SYMBOL)
		(allowed-values Yes No Unknown)
		(default Unknown)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot technology_deployment_usages
;+		(comment "The Technology Deployment Usages that are used in the architecture")
		(type INSTANCE)
;+		(allowed-classes Technology_Deployment_Architecture_Model_Type)
;+		(inverse-slot inverse_of_technology_deployment_usages)
		(create-accessor read-write))
	(single-slot gm_meeting_of_body
;+		(comment "The Governance Body that holds the Governance Meeting")
		(type INSTANCE)
;+		(allowed-classes Governance_Body)
;+		(cardinality 0 1)
;+		(inverse-slot gb_meetings)
		(create-accessor read-write))
	(multislot risk_related_business
;+		(comment "The set of business elements that are related to the risk")
		(type INSTANCE)
;+		(allowed-classes Business_Layer)
		(create-accessor read-write))
	(single-slot ao_target_date_iso_8601
;+		(comment "The target date for achieving the objective in ISO 8601 format (yyyy-mm-dd)")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot known_business_issues
;+		(comment "Known issues for this business layer element")
		(type INSTANCE)
;+		(allowed-classes Issue)
;+		(inverse-slot related_business_elements)
		(create-accessor read-write))
	(single-slot target_implements_business_capability
;+		(comment "The Business Capability that a Target Business Process implements.")
		(type INSTANCE)
;+		(allowed-classes Business_Capability)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot data_object_standard_name
;+		(comment "This is the name that this standard uses for the associated logical Data Object")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot supports_business_process_app
;+		(comment "The business process, task or activity that this application supports.")
		(type INSTANCE)
;+		(allowed-classes APP_APP_TO_BUS_RELATION)
;+		(inverse-slot app_to_bus_from_app)
		(create-accessor read-write))
	(multislot deployment_of_software_components
;+		(comment "The usages of Software Components that this Application Deployment contains")
		(type INSTANCE)
;+		(allowed-classes Software_Component_Usage)
;+		(inverse-slot software_physical_deployments)
		(create-accessor read-write))
	(single-slot rl_language
;+		(comment "The human language associated with this report language")
		(type INSTANCE)
;+		(allowed-classes Language)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot sq_minimum_threshold
;+		(comment "Defines the minimum acceptable value for the Service Quality")
		(type INSTANCE)
;+		(allowed-classes Service_Quality_Value)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot rdu_consent_documentation_links
;+		(comment "Defines links to external documentation describing the consent that has been given")
		(type INSTANCE)
;+		(allowed-classes External_Reference_Link)
		(create-accessor read-write))
	(single-slot system_is_cq_review_polcy_enabled
;+		(comment "Defines whether this content quality review policy should be applied")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default TRUE)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot aps_standard_usage
;+		(comment "Defines the business processes for which this application standard should be applied")
		(type INSTANCE)
;+		(allowed-classes Business_Process_Type)
		(create-accessor read-write))
	(multislot objective_supported_by_objective
;+		(comment "Slot to manage the set of objectives that support an objective. Applies to Business Objectives, Application Architecture Objectives, Information Architecture Objectives and Technology Architecture Objectives")
		(type INSTANCE)
;+		(allowed-classes Information_Architecture_Objective Technology_Architecture_Objective Application_Architecture_Objective Business_Objective)
;+		(inverse-slot objective_supports_objective)
		(create-accessor read-write))
	(single-slot report_classification_label
;+		(comment "The label to be displayed for the report category")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot system_cq_polcy_to_role_to_role
;+		(comment "The individual role that is being assigned to the Content Quality Review or Escalation Policy")
		(type INSTANCE)
;+		(allowed-classes Individual_Business_Role)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot aricu_usage_of_application_reference_implementation
;+		(comment "The Application Reference Impementation that is being used as part of a Business Model Configuration Architecture")
		(type INSTANCE)
;+		(allowed-classes Application_Reference_Implementation)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot menu_item_short_name
;+		(comment "Defines the short name that should be used to identify the report menu item")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot physical_info_contained_in_arch_states
;+		(comment "The architecture states that contain this physical information element")
		(type INSTANCE)
;+		(allowed-classes Architecture_State)
;+		(inverse-slot arch_state_physical_information)
		(create-accessor read-write))
	(multislot vs_outcome_conditions
;+		(comment "Defines the Business Conditions that must be met in order to complete the Value Stream")
		(type INSTANCE)
;+		(allowed-classes Business_Condition)
		(create-accessor read-write))
	(multislot application_reference_architecture_elements
;+		(comment "The elements that comprise the Application Reference Architecture")
		(type INSTANCE)
;+		(allowed-classes Application_Reference_Architecture_Type)
;+		(inverse-slot arat_used_in_application_reference_architecture)
		(create-accessor read-write))
	(single-slot rcs_score
;+		(comment "The score to be given to a value comparing positively to the criterion score value")
		(type SYMBOL)
		(allowed-values 0 1 2 3 4 5 6 7 8 9 10)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot actor_objectives
;+		(comment "Slot to manage the set of Objectives that an Actor has. Note that this slot manages all 'types' of Objective, not just Business Objective")
		(type INSTANCE)
;+		(allowed-classes Business_Objective Information_Architecture_Objective Application_Architecture_Objective Technology_Architecture_Objective)
		(create-accessor read-write))
	(single-slot geocode_latitude
;+		(comment "Captures the geographic coordinate that specifies the north-south position of the geocode")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot reports_to
;+		(comment "The Business Roles that this role reports to")
		(type INSTANCE)
;+		(allowed-classes Business_Role)
;+		(inverse-slot reporting_business_roles)
		(create-accessor read-write))
	(multislot style_for_elements
;+		(comment "The elements that are being styled")
		(type INSTANCE)
;+		(allowed-classes Technology_Layer Information_Layer EA_Support Business_Layer Application_Layer EA_Relation %3AESSENTIAL-CLASS)
		(cardinality 1 ?VARIABLE)
;+		(inverse-slot element_styling_classes)
		(create-accessor read-write))
	(single-slot cost_currency
;+		(comment "The default currency in which the contained costs amounts are defined")
		(type INSTANCE)
;+		(allowed-classes Currency)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ca_proposed_start_date
;+		(comment "The date from when a change activity is expected to start")
		(type INSTANCE)
;+		(allowed-classes Time)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot regulation_applies_to
;+		(comment "The EA elements to which this regulation applies")
		(type INSTANCE)
;+		(allowed-classes REGULATED_COMPONENT_RELATION)
		(create-accessor read-write))
	(multislot product_type_information_held
;+		(comment "The Information that is held about the Product Type.")
		(type INSTANCE)
;+		(allowed-classes Information_View)
		(create-accessor read-write))
	(single-slot apppro_to_physbus_to_busproc
;+		(comment "The Business Process that is supported by an Application Provider")
		(type INSTANCE)
;+		(allowed-classes Physical_Process_Type)
;+		(cardinality 1 1)
;+		(inverse-slot phys_bp_supported_by_app_pro)
		(create-accessor read-write))
	(multislot bo_owners
;+		(comment "Captures the individuals or organisations that are accountable for meeting the objective")
		(type INSTANCE)
;+		(allowed-classes Actor)
		(create-accessor read-write))
	(multislot bec_factors
;+		(comment "The Business Environment Factors that belong to this Business Environment Category")
		(type INSTANCE)
;+		(allowed-classes Business_Environment_Factor)
;+		(inverse-slot bef_category)
		(create-accessor read-write))
	(multislot id_has_tech_implications
;+		(comment "The set of Technology Drivers for which a technology driver has implications.")
		(type INSTANCE)
;+		(allowed-classes Technology_Driver)
		(create-accessor read-write))
	(single-slot roadmap_subject
;+		(comment "The main subject about which the Roadmap is defined")
		(type INSTANCE)
;+		(allowed-classes EA_Relation EA_Class)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ra_start_date
;+		(comment "The date from when the resource allocation begins")
		(type INSTANCE)
;+		(allowed-classes Time)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot sqmcm_ea_element_context
;+		(comment "The EA element that is the context for the definition of the Service Quality or Service Quality Value")
		(type INSTANCE)
;+		(allowed-classes EA_Class)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot used_in_technology_provider_architecture
;+		(comment "The Technology Provider Architecture in which this Technology Provider Usage is contained")
		(type INSTANCE)
;+		(allowed-classes Technology_Build_Architecture)
;+		(cardinality 0 1)
;+		(inverse-slot contained_architecture_components)
		(create-accessor read-write))
	(multislot app_pro_use_of_data_rep
;+		(comment "Describes the Data Object representing the type of data that the application populates into this Data Representation")
		(type INSTANCE)
;+		(allowed-classes Data_Object_Type)
		(create-accessor read-write))
	(multislot contained_project_dependencies
;+		(comment "the set of dependencies between Project Activities and Application Providers in this model")
		(type INSTANCE)
;+		(allowed-classes)
		(create-accessor read-write))
	(multislot sent_information
;+		(comment "The Information that is sent in a usage of a function")
		(type INSTANCE)
;+		(allowed-classes Information_Layer)
		(create-accessor read-write))
	(multislot arch_state_application_logical
;+		(comment "Slot to group the set of architectures from the Application Logical Layer in an Architecture State")
		(type INSTANCE)
;+		(allowed-classes Application_Logical)
;+		(inverse-slot app_logical_contained_in_arch_states)
		(create-accessor read-write))
	(single-slot user_last_name
;+		(comment "The surname of the user")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot pmc_service_qualities
;+		(comment "The service qualities that are used to measure this category of performance measure")
		(type INSTANCE)
;+		(allowed-classes Service_Quality)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(multislot contained_app_service_usages
;+		(comment "The Application Services (Usages) that are the sub components that make up this Application Service Architecture")
		(type INSTANCE)
;+		(allowed-classes Application_Service_Usage)
;+		(inverse-slot inverse_of_contained_app_service_usages)
		(create-accessor read-write))
	(multislot regulation_related_regulations
;+		(comment "Defines any regulations that are related to this regulation")
		(type INSTANCE)
;+		(allowed-classes Regulation)
		(create-accessor read-write))
	(multislot rdu_usage_geographic_scope
;+		(comment "The geographic scope for which use of elements has been permitted")
		(type INSTANCE)
;+		(allowed-classes Geographic_Region)
		(create-accessor read-write))
	(multislot application_function_behaviour
;+		(comment "Identify the type of behaviour that this function is providing. It is important to focus on the main objective of this function when determining which type of behaviour is being selected.")
		(type INSTANCE)
;+		(allowed-classes Application_Function_Behaviour)
		(create-accessor read-write))
	(single-slot used_in_technology_product_architecture
;+		(comment "Reference to the Technology Product Architecture in which this usage appears")
		(type INSTANCE)
;+		(allowed-classes Technology_Product_Architecture)
;+		(cardinality 0 1)
;+		(inverse-slot contained_techProd_components)
		(create-accessor read-write))
	(single-slot owning_organisation
;+		(comment "The Group Actor on who's behalf the content owner is managing the associated EA content")
		(type INSTANCE)
;+		(allowed-classes Group_Actor)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot gm_decisions
;+		(comment "The Decisions that resulted from the Governance Meeting")
		(type INSTANCE)
;+		(allowed-classes Decision)
;+		(inverse-slot decision_from_meeting)
		(create-accessor read-write))
	(multislot resolved_by
;+		(comment "The strategic plans that have been defined to resolve the issue")
		(type INSTANCE)
;+		(allowed-classes Strategic_Plan)
;+		(inverse-slot strat_plan_meets_requirement)
		(create-accessor read-write))
	(single-slot report_menu_is_default
;+		(comment "Determines whether this menu is the default menu for the associated meta-class")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default FALSE)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot app_relation_contained_in_arch_states
;+		(comment "The architecture states that contain this application relationship")
		(type INSTANCE)
;+		(allowed-classes Architecture_State)
;+		(inverse-slot arch_state_application_relation)
		(create-accessor read-write))
	(multislot provides_business_capabilities
;+		(comment "The set of business capabilities that are provided by a role type")
		(type INSTANCE)
;+		(allowed-classes Business_Capability)
		(create-accessor read-write))
	(single-slot dmp_assigned_info_data_object
;+		(comment "The information view or data object to which the responsibility is being assigned")
		(type INSTANCE)
;+		(allowed-classes Data_Object Information_View_Type)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot realised_by_business_processes
;+		(comment "The business processes that realise a business capability")
		(type INSTANCE)
;+		(allowed-classes Business_Process)
;+		(inverse-slot realises_business_capability)
		(create-accessor read-write))
	(single-slot bmcr_from_busmodel_config
;+		(comment "The Business Model Configuration that requires the enterprise element")
		(type INSTANCE)
;+		(allowed-classes Business_Model_Configuration)
;+		(cardinality 1 1)
;+		(inverse-slot bmc_elements)
		(create-accessor read-write))
	(single-slot budget_quarter
;+		(comment "The year and quarter for which a quarterly budgetary element is defined")
		(type INSTANCE)
;+		(allowed-classes Quarter)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot product_type_external_facing
;+		(comment "Defines whether the Product Type is external facing.")
		(type SYMBOL)
		(allowed-values Yes No Unknown)
		(default Unknown)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot technology_product_architecture
;+		(comment "The Technology Product Architecture for this Technology Product to describe the dependencies that the Product has on other Technology Product")
		(type INSTANCE)
;+		(allowed-classes Technology_Product_Architecture)
;+		(cardinality 0 1)
;+		(inverse-slot describes_technology_product)
		(create-accessor read-write))
	(single-slot static_app_provider_arch_display_label
;+		(comment "The display label for this component in the static application provider architecture model")
		(type STRING)
		(default "<component-name>")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot atire_app_pro_to_inforep
;+		(comment "The Information managed by a given Application that is being exchanged")
		(type INSTANCE)
;+		(allowed-classes APP_PRO_TO_INFOREP_RELATION)
;+		(cardinality 1 1)
;+		(inverse-slot app_pro_to_inforep_exchanges)
		(create-accessor read-write))
	(multislot pt_product_type_features
;+		(comment "The features that are provided by this product type")
		(type INSTANCE)
;+		(allowed-classes Product_Feature)
;+		(inverse-slot feature_for_product_type)
		(create-accessor read-write))
	(multislot process_performed_at_sites
;+		(comment "The Sites at which this process is performed")
		(type INSTANCE)
;+		(allowed-classes Site)
		(create-accessor read-write))
	(multislot known_app_issue
;+		(comment "A known issue for this application layer element")
		(type INSTANCE)
;+		(allowed-classes Issue)
;+		(inverse-slot related_application_elements)
		(create-accessor read-write))
	(single-slot max_number_of_users
;+		(comment "The maximum number of users that have access to the relations application in the context of the associated business process")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot tao_target_date_iso_8601
;+		(comment "The target date for achieving the objective in ISO 8601 format (yyyy-mm-dd)")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot report_xsl_filename
;+		(comment "The name of the xsl file for this report")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot channel_initiates_service
;+		(comment "Products or Business Services provided through the channel")
		(type INSTANCE)
;+		(allowed-classes Product)
;+		(inverse-slot service_related_channel)
		(create-accessor read-write))
	(multislot data_standard_related_information
;+		(comment "The set of Information Views and Representations that are related to this Data Standard")
		(type INSTANCE)
;+		(allowed-classes Information_Representation_Type Information_View)
		(create-accessor read-write))
	(single-slot report_history_label
;+		(comment "Defines the label prefix that should be provided as the history label for the report")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot pwtc_colour
;+		(comment "The string representation (e.g. hex) of the colour")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot ivs_parent_data_standard
;+		(comment "Defines the Information/Data to which this specification belongs")
		(type INSTANCE)
;+		(allowed-classes Info_Data_Standard)
;+		(cardinality 0 1)
;+		(inverse-slot info_view_standard_specs)
		(create-accessor read-write))
	(single-slot end_date
;+		(comment "The date until which this architecture is relevant to the enterprise")
		(type INSTANCE)
;+		(allowed-classes Time)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot product_type_realises_concept
;+		(comment "The Product Concept(s) that a Product Type realises.")
		(type INSTANCE)
;+		(allowed-classes Product_Concept)
;+		(inverse-slot product_concept_realised_by_type)
		(create-accessor read-write))
	(multislot data_standard_user_roles
;+		(comment "Slot to capture the set of user roles that make use of a Data Standard.")
		(type INSTANCE)
;+		(allowed-classes Business_Role)
		(create-accessor read-write))
	(multislot external_reference_links
;+		(comment "Slot to manage the set of external reference links to an EA_Class instance. Normally, create a new instance.")
		(type INSTANCE)
;+		(allowed-classes External_Reference_Link)
;+		(inverse-slot referenced_ea_instance)
		(create-accessor read-write))
	(multislot stakeholders
;+		(comment "Define the stakeholders for the element. Specific stakeholders are defined in terms of an ACTOR_TO_ROLE_RELATION. Alternatively, the type of relevant stakeholders can be defined in terms of a Business_Role.")
		(type INSTANCE)
;+		(allowed-classes ACTOR_TO_ROLE_RELATION Business_Role)
		(create-accessor read-write))
	(multislot cf_controls
;+		(comment "")
		(type INSTANCE)
;+		(allowed-classes Control)
		(create-accessor read-write))
	(single-slot decision_made_by_actor
;+		(comment "Relationship to the Actor that has made the decision")
		(type INSTANCE)
;+		(allowed-classes Actor)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot sp_related_security_capabilities
;+		(comment "The set of security capabilities that this Security Principle applies to")
		(type INSTANCE)
;+		(allowed-classes Security_Capability)
		(create-accessor read-write))
	(single-slot ea_security_display_label
;+		(comment "Slot to hold the name that should be displayed in any user interfaces. Should be the display slot for security instances")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot usage_of_technology_capabilities
;+		(comment "")
		(type INSTANCE)
;+		(allowed-classes Technology_Capability)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot distribute_costs
;+		(comment "Defines whether the costs associated with the element should be evenly distributed across the consumers of its capabilities")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default TRUE)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot contained_data_representation_attributes
;+		(comment "The set of Data Representation Attributes that comprise the Data Representation.")
		(type INSTANCE)
;+		(allowed-classes Data_Representation_Attribute)
		(create-accessor read-write))
	(multislot ea_security_clearance_edit
;+		(comment "The set of security clearance levels that are assigned to a system user for edit access")
		(type INSTANCE)
;+		(allowed-classes EA_Content_Classification)
		(create-accessor read-write))
	(multislot regdatausage_to_busproc_consent_types
;+		(comment "The types of consent that are being achieved")
		(type INSTANCE)
;+		(allowed-classes Legal_Consent_Type)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(multislot product_information_held
;+		(comment "The Information that is held about the Product.")
		(type INSTANCE)
;+		(allowed-classes Information_Representation)
		(create-accessor read-write))
	(single-slot apru_usage_of_application_provider
;+		(comment "The Application that is being used in an Application Reference Implementation Model")
		(type INSTANCE)
;+		(allowed-classes Application_Provider_Role)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot contained_application_providers
;+		(comment "The set of Application Providers that make up a Composite Application Provider")
		(type INSTANCE)
;+		(allowed-classes Application_Provider)
;+		(inverse-slot parent_application_provider)
		(create-accessor read-write))
	(multislot gb_meetings
;+		(comment "The meetings that have been held, or will be held by the Governance Body")
		(type INSTANCE)
;+		(allowed-classes Governance_Meeting)
;+		(inverse-slot gm_meeting_of_body)
		(create-accessor read-write))
	(single-slot system_cq_review_policy_manager_instance_template_path
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot portal_section_sequence
;+		(comment "The sequence in which the groups should be displayed in the portal.")
		(type INTEGER)
		(default 0)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot sti_revenue_impacts
;+		(comment "The types of revenue stream that are impacted if the implication is realised")
		(type INSTANCE)
;+		(allowed-classes Revenue_Component_Change)
		(create-accessor read-write))
	(multislot info_conceptual_contained_in_arch_states
;+		(comment "The architecture states that contain this conceptual information element")
		(type INSTANCE)
;+		(allowed-classes Architecture_State)
;+		(inverse-slot arch_state_information_conceptual)
		(create-accessor read-write))
	(single-slot primary_header_colour_viewer
;+		(comment "The primary header colour. Typically represented as a hexidecimal value e.g. #123456")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot app_svc_to_infoview_from_appsvc
;+		(comment "The Application Service that is operating on the Information View")
		(type INSTANCE)
;+		(allowed-classes Application_Service)
;+		(cardinality 1 1)
;+		(inverse-slot operates_on_information_views)
		(create-accessor read-write))
	(single-slot system_content_quality_review_to_actor_to_actor
;+		(comment "The actor that is assigned to the Content Quality Review")
		(type INSTANCE)
;+		(allowed-classes Individual_Actor ACTOR_TO_ROLE_RELATION)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot api_supported_protocols
;+		(comment "Captures the list of technology protocols that can be used tio access the functions provided by the interface")
		(type INSTANCE)
;+		(allowed-classes Technology_Protocol)
		(create-accessor read-write))
	(multislot regulation_supported_drivers
;+		(comment "The business drivers that the regulation supports")
		(type INSTANCE)
;+		(allowed-classes Business_Driver)
		(create-accessor read-write))
	(single-slot exception_granted_date
;+		(comment "The date on which the exception was granted.")
		(type INSTANCE)
;+		(allowed-classes Time)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot ea_scope
;+		(comment "Supports the arbitrary scoping of an EA element by other EA elements, e.g. Org, Geo, Brand etc.")
		(type INSTANCE)
;+		(allowed-classes EA_Class)
		(create-accessor read-write))
	(single-slot usage_of_software_component
;+		(comment "the Software Component that this instance is a usage of")
		(type INSTANCE)
;+		(allowed-classes Software_Component)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot supported_by_information_principles
;+		(comment "")
		(type INSTANCE)
;+		(allowed-classes Information_Architecture_Principle)
;+		(inverse-slot principle_supports_information_objectives)
		(create-accessor read-write))
	(multislot sm_organisational_scope
;+		(comment "The organisational scope for which a standard should be applied")
		(type INSTANCE)
;+		(allowed-classes Group_Actor)
		(create-accessor read-write))
	(single-slot contract_uses_license
;+		(comment "DEPRECATED: The equivalent of this property has been moved to the CONTRACT_COMPONENT_RELATION class")
		(type INSTANCE)
;+		(allowed-classes License)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ap_static_architecture
;+		(comment "The defining static architecture of an Applicatoin Provider.")
		(type INSTANCE)
;+		(allowed-classes Static_Application_Provider_Architecture)
;+		(cardinality 0 1)
;+		(inverse-slot static_architecture_of_app_provider)
		(create-accessor read-write))
	(single-slot deployment_of
		(type INSTANCE)
;+		(allowed-classes Technology_Provider)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot system_cq_review_escalation_policies
;+		(comment "The escalation policies that should be applied when a content quality review becomes overdue")
		(type INSTANCE)
;+		(allowed-classes SYS_CONTENT_QUALITY_ESCALATION_POLICY)
;+		(inverse-slot system_escalation_policy_for_cq_review_policy)
		(create-accessor read-write))
	(single-slot usage_of_system_event
;+		(comment "Slot to define which System Event is being used in an System Event Usage.")
		(type INSTANCE)
;+		(allowed-classes System_Event)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot system_content_quality_review_for_element
;+		(comment "The element for which the content quality is under review")
		(type INSTANCE)
;+		(allowed-classes EA_Class EA_Relation %3AEA_Graph_Relation)
;+		(cardinality 1 1)
;+		(inverse-slot system_content_quality_reviews)
		(create-accessor read-write))
	(single-slot supplier_actor
;+		(comment "Relationship to connect a Supplier to the Group Actor that represents the supplier in the model")
		(type INSTANCE)
;+		(allowed-classes Actor)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot license_contact_details
;+		(comment "Slot containing the contact details for Essential Architecture Manager.")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot supports_strategic_plan
;+		(comment "The set of Strategic Plans that this plan supports")
		(type INSTANCE)
;+		(allowed-classes Strategic_Plan)
;+		(inverse-slot depends_on_strategic_plans)
		(create-accessor read-write))
	(single-slot idea_to_element_change_activity
;+		(comment "The change activity that will implement the change")
		(type INSTANCE)
;+		(allowed-classes Change_Activity)
;+		(cardinality 0 1)
;+		(inverse-slot ca_innovation_changes)
		(create-accessor read-write))
	(single-slot used_in_process_flow
;+		(comment "The process flow in which this component is used")
		(type INSTANCE)
;+		(allowed-classes Business_Process_Flow)
;+		(cardinality 0 1)
;+		(inverse-slot process_steps_used)
		(create-accessor read-write))
	(single-slot system_cq_review_policy_reviewer_instance_dataset_api
;+		(comment "The dataset APi that provides the data to be used in Content Review Dashboards for this class")
		(type INSTANCE)
;+		(allowed-classes Data_Set_API)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot technology_component_lifecycle_status
;+		(comment "Defines the lifecycle status of the logical technology component (e.g. strategic, off strategy, reference architecture)")
		(type INSTANCE)
;+		(allowed-classes Lifecycle_Status)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot data_standard_relation_type
;+		(comment "Describes the nature of the relationship between the two Data Standards that are being related")
		(type INSTANCE)
;+		(allowed-classes Data_Standard_Relationship_Type)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot system_element_to_comms_method_frequency
;+		(comment "The frequency of the communication")
		(type INSTANCE)
;+		(allowed-classes SYS_FREQUENCY)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot pws_styled_class
;+		(comment "The class used to select Presentation Widget elements to which the style should be applied")
		(type INSTANCE)
;+		(allowed-classes Widget_Style_Class)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot used_in_dynamic_app_provider_architecture
;+		(comment "the dynamic architecture that this component is used in")
		(type INSTANCE)
;+		(allowed-classes Dynamic_Application_Provider_Architecture)
;+		(cardinality 0 1)
;+		(inverse-slot app_funcImp_architecture_components)
		(create-accessor read-write))
	(single-slot app_svc_deletes_info_view
;+		(comment "Defines whether the Application Service deletes the Information View")
		(type SYMBOL)
		(allowed-values Yes No Unknown)
		(default Unknown)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot bmd_of_class
;+		(comment "The type of enterprise element for which the overall direction is being defined")
		(type INSTANCE)
;+		(allowed-classes %3AESSENTIAL-CLASS)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot business_reference_architecture_dependencies
;+		(comment "The dependencies that exist between the business processes that comprise the Business Reference Architecture")
		(type INSTANCE)
;+		(allowed-classes %3ABusiness-Ref-Arch-Model-Relation)
;+		(inverse-slot brm_relation_in_business_reference_architecture_model)
		(create-accessor read-write))
	(single-slot system_cq_review_policy_escalation_point_dashboard
		(type INSTANCE)
;+		(allowed-classes Editor)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot cjp_label
;+		(comment "The name of the Customer Journey Phase")
		(type INSTANCE)
;+		(allowed-classes Label)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot used_in_technology_build
;+		(comment "Slot capturing the architectures (Product Builds) that reference this Technology Node. Holds the specific element in the build that refers to this Node.")
		(type INSTANCE)
;+		(allowed-classes Technology_Provider_Usage)
;+		(inverse-slot deployed_as_technology_node)
		(create-accessor read-write))
	(multislot system_cq_policy_comms_methods
;+		(comment "The frequencies and modes of communication that should be used when communicating with the actor playing the role assigned to the policy")
		(type INSTANCE)
;+		(allowed-classes SYS_ELEMENT_TO_COMMS_METHOD_RELATION)
		(cardinality 1 ?VARIABLE)
;+		(inverse-slot system_element_to_comms_method_from_element)
		(create-accessor read-write))
	(multislot technology_product_family
;+		(comment "DEPRECATED. USE MEMBER_OF_TECHNOLOGY_PRODUCT_FAMILIES. Specifies the Product Family(ies) that a Technology Product belongs to. E.g. Windows Server 2003 could belong to the Windows Product Family")
		(type INSTANCE)
;+		(allowed-classes Product_Family)
		(create-accessor read-write))
	(single-slot regulated_component_to_element
;+		(comment "The EA element that is being regulated")
		(type INSTANCE)
;+		(allowed-classes EA_Class)
;+		(cardinality 1 1)
;+		(inverse-slot ea_subject_to_regulations)
		(create-accessor read-write))
	(multislot application_assumptions
;+		(comment "The application elements that are relevant to the assumption")
		(type INSTANCE)
;+		(allowed-classes Application_Layer)
		(create-accessor read-write))
	(single-slot ra_allocated_resource
;+		(comment "The Actor (in a particular Job Position or Business Role) that has been allocated")
		(type INSTANCE)
;+		(allowed-classes ACTOR_TO_ROLE_RELATION ACTOR_TO_JOB_RELATION)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot scf_security_classification_schemes
;+		(comment "The schemes that are used by this framework to classify enterprise resources")
		(type INSTANCE)
;+		(allowed-classes Security_Classification_Scheme)
;+		(inverse-slot cs_belongs_to_security_classification_framework)
		(create-accessor read-write))
	(multislot bd_motivated_objectives
;+		(comment "The set of objectives that are motivated by the driver")
		(type INSTANCE)
;+		(allowed-classes Business_Objective)
;+		(inverse-slot bo_motivated_by_driver)
		(create-accessor read-write))
	(single-slot bracu_usage_of_business_reference_architecture
;+		(comment "The Business Reference Archjitecture that is being used as part of a Business Model Configuration Architecture")
		(type INSTANCE)
;+		(allowed-classes Business_Reference_Architecture)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot pm_comments
;+		(comment "Slot to capture any commentary about the Performance Measure")
		(type INSTANCE)
;+		(allowed-classes Commentary)
		(create-accessor read-write))
	(multislot brand_associated_roles
;+		(comment "Associated business roles to the brand")
		(type INSTANCE)
;+		(allowed-classes Group_Business_Role)
		(create-accessor read-write))
	(single-slot aps_standard_app_provider_role
;+		(comment "The application provider role that has been defined as a standard")
		(type INSTANCE)
;+		(allowed-classes Application_Provider_Role)
;+		(cardinality 1 1)
;+		(inverse-slot apr_has_standard_specs)
		(create-accessor read-write))
	(single-slot ea_notes
;+		(comment "Abitrary notes that have been made against the element")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot role_to_skill_focus_level
;+		(comment "The extent to which the Skill should be the main focus for the Role")
		(type INSTANCE)
;+		(allowed-classes Skill_Focus_Level)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot atire_service_quals
;+		(comment "The service quality values associated with the information exchange (e.g. frequency)")
		(type INSTANCE)
;+		(allowed-classes Service_Quality_Value)
		(create-accessor read-write))
	(multislot required_fte_resources
;+		(comment "The resources (in FTEs) required")
		(type INSTANCE)
;+		(allowed-classes Resource_Requirement)
;+		(inverse-slot rr_resource_requester)
		(create-accessor read-write))
	(multislot constraint_related_information
;+		(comment "The set of informtion elements that are related to the constraint.")
		(type INSTANCE)
;+		(allowed-classes Information_Layer)
		(create-accessor read-write))
	(single-slot plan_to_element_change_activity
;+		(comment "The change activity designated to deliver the planned action against the element")
		(type INSTANCE)
;+		(allowed-classes Change_Activity)
;+		(cardinality 0 1)
;+		(inverse-slot ca_planned_changes)
		(create-accessor read-write))
	(multislot bmcr_required_performance
;+		(comment "The service quality values that should be met by the enterprise element")
		(type INSTANCE)
;+		(allowed-classes Service_Quality_Value)
		(create-accessor read-write))
	(single-slot dra_index
;+		(comment "Defines the sequencing position of the Data Representation Attribute within its parent Data Representation")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot control_solution_assessments
;+		(comment "The assessments that have been made against the Control Solution")
		(type INSTANCE)
;+		(allowed-classes Control_Solution_Assessment)
;+		(inverse-slot assessed_control_solution)
		(create-accessor read-write))
	(single-slot ca_forecast_end_date_iso_8601
;+		(comment "The date by when the change activity is forecast to end in ISO 8601 format (yyyy-mm-dd)")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot data_object_organisation_owner
;+		(comment "DEPRECATED - Slot to capture the organisation that owns the Data Object in terms of a Group Actor in the business layer")
		(type INSTANCE)
;+		(allowed-classes Group_Actor)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot impacting_change_activities
;+		(comment "Change activities that impact this element")
		(type INSTANCE)
;+		(allowed-classes Change_Activity)
;+		(inverse-slot ca_impacted_elements)
		(create-accessor read-write))
	(multislot strategic_plan_supported_by_projects
;+		(comment "The set of Projects that are supporting the realisation of a Strategic Plan")
		(type INSTANCE)
;+		(allowed-classes Change_Activity)
;+		(inverse-slot ca_strategic_plans_supported)
		(create-accessor read-write))
	(single-slot budget_category
;+		(comment "The category that defines the overall intended purpose of the budget")
		(type INSTANCE)
;+		(allowed-classes Budget_Category)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot system_content_quality_review_to_actor_comms_datetimes_iso8601
;+		(comment "The dates and times at which the actor was notified about the Content Quality review")
		(type STRING)
		(create-accessor read-write))
	(multislot business_principle_supports_business_objectives
;+		(comment "")
		(type INSTANCE)
;+		(allowed-classes Business_Objective)
;+		(inverse-slot supporting_business_principles)
		(create-accessor read-write))
	(multislot channel_type_for_product_types
;+		(comment "The Product Types that for which this Channel Type is used")
		(type INSTANCE)
;+		(allowed-classes Product_Type)
;+		(inverse-slot product_type_via_channel_types)
		(create-accessor read-write))
	(multislot rdu_consenting_business_processes
;+		(comment "The business processes that acquires consent for the use of one or more EA elements")
		(type INSTANCE)
;+		(allowed-classes REGULATED_DATA_USAGE_CONSENT_BUSPROC_RELATION)
;+		(inverse-slot regdatausage_to_busproc_regdatausage)
		(create-accessor read-write))
	(single-slot license_acknowledgments
;+		(comment "Slot containing the acknowledgments due to other parties in the license.")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot busprocttype_to_busprocfam_standard_org_scope
;+		(comment "The organisational scope for which the Business Process Type is a standard for the Business Process Family")
		(type INSTANCE)
;+		(allowed-classes Group_Actor)
		(create-accessor read-write))
	(multislot groups_applications
;+		(comment "The Application Providers that this Application groups together.")
		(type INSTANCE)
;+		(allowed-classes Application_Provider)
;+		(inverse-slot type_of_application)
		(create-accessor read-write))
	(single-slot data_standard_owning_organisation
;+		(comment "DEPRECATED. USE STAKEHOLDERS SLOT. Captures the organisation that is responsible for governing the Data Standard")
		(type INSTANCE)
;+		(allowed-classes ACTOR_TO_ROLE_RELATION)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot decision_elements
;+		(comment "The elements that are the subject of the decision.")
		(type INSTANCE)
;+		(allowed-classes %3AEA_Graph_Relation EA_Relation EA_Class)
;+		(inverse-slot impacting_decisions)
		(create-accessor read-write))
	(single-slot implication_to_element_from_implication
;+		(comment "The trend implication that is impacting the element")
		(type INSTANCE)
;+		(allowed-classes Strategic_Trend_Implication)
;+		(cardinality 1 1)
;+		(inverse-slot sti_enterprise_impacts)
		(create-accessor read-write))
	(single-slot report_parameter_string_value
;+		(comment "Defines a string that is passed as the parameter value")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot actor_to_skill_focus_level
;+		(comment "The extent to which the Skill is the main focus for the Actor")
		(type INSTANCE)
;+		(allowed-classes Skill_Focus_Level)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot start_capability_chain_label
;+		(comment "The display label for a start node of a capability chain")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot sr_lifecycle_status
;+		(comment "Defines the current status of the requirement")
		(type INSTANCE)
;+		(allowed-classes Strategic_Requirement_Lifecycle_Status)
		(default [essential_baseline_6.5.4_Class71])
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot bmat_operating_model_category
;+		(comment "Defines the approach to be taken to operating the given element in the contex of a Business Model")
		(type INSTANCE)
;+		(allowed-classes Operating_Model_Category)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot contained_data_attributes
;+		(comment "Slot to manage the set of Data Attributes that are members of a Data Subject")
		(type INSTANCE)
;+		(allowed-classes Data_Object_Attribute)
;+		(inverse-slot belongs_to_data_object)
		(create-accessor read-write))
	(multislot app_pro_supports_phys_proc
;+		(comment "DEPRECATED. Specifies the Physical Business processes supported by an Application Provider")
		(type INSTANCE)
;+		(allowed-classes APP_PRO_TO_PHYS_BUS_RELATION)
;+		(inverse-slot apppro_to_physbus_from_apppro)
		(create-accessor read-write))
	(multislot product_concept_supported_by_capability
;+		(comment "The Business Capability(ies) that supports the production of a Product Concept.")
		(type INSTANCE)
;+		(allowed-classes Business_Capability)
		(create-accessor read-write))
	(single-slot tech_cap_supports_app_caps
		(type STRING)
;+		(cardinality 0 1)
;+		(inverse-slot app_cap_supporting_tech_caps)
		(create-accessor read-write))
	(single-slot ap_business_owner
;+		(comment "DEPRECATED. USE STAKEHOLDERS SLOT. The business owner for this application provider")
		(type INSTANCE)
;+		(allowed-classes Actor)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot initiative_requirements_roadmap
;+		(comment "The roadmap that defines the sequence in which the Initiative’s Business Models are to be introduced to the enterprise")
		(type INSTANCE)
;+		(allowed-classes Roadmap)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot sp_actor
;+		(comment "Defines a Business Role, Actor or Security Clearance Level to which the Security Policy applies")
		(type INSTANCE)
;+		(allowed-classes Business_Role Actor Security_Clearance_Level)
		(create-accessor read-write))
	(multislot buscap_contextual_supports_buscap
;+		(comment "Contextualised relationships to parent Business Capabilities")
		(type INSTANCE)
;+		(allowed-classes BUSCAP_TO_PARENTBUSCAP_RELATION)
;+		(inverse-slot buscap_to_parent_child_buscap)
		(create-accessor read-write))
	(multislot info_view_standard_specs
;+		(comment "The set of Information View Standard Specifications associated with the Data Standard")
		(type INSTANCE)
;+		(allowed-classes Info_View_Standard_Specification)
;+		(inverse-slot ivs_parent_data_standard)
		(create-accessor read-write))
	(single-slot technology_capability_architecture
;+		(comment "The definiting architecture of a Technology Capability, in terms of the Technology Capabilities that are used to deliver it.")
		(type INSTANCE)
;+		(allowed-classes Technology_Capability_Architecture)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot id_has_inf_implications
;+		(comment "The set of Information Drivers for which an information driver has implications.")
		(type INSTANCE)
;+		(allowed-classes Information_Driver)
		(create-accessor read-write))
	(multislot report_filter_included_slots
;+		(comment "Defines the slots that should be included as filters for this Report")
		(type INSTANCE)
;+		(allowed-classes %3AESSENTIAL-SLOT)
		(create-accessor read-write))
	(multislot cjp_value_stages
;+		(comment "The Value Stages that are supported by this Customer Journey Phase")
		(type INSTANCE)
;+		(allowed-classes Value_Stage)
		(create-accessor read-write))
	(multislot element_classified_by
;+		(comment "Slot to capture the classification(s) that apply to an element in the ontology. Add this slot to any class that is to be managed by a Taxonomy.")
		(type INSTANCE)
;+		(allowed-classes Taxonomy_Term)
;+		(inverse-slot classifies_elements)
		(create-accessor read-write))
	(single-slot report_qualifying_report
;+		(comment "Defines a report (typically a catalogue) that is used as a pre-qualifier for this report")
		(type INSTANCE)
;+		(allowed-classes Report)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot arch_state_information_relations
;+		(comment "Slot to capture the Information Relationship instances (e.g. Information used by Application relationships) that are in an Architecture State")
		(type INSTANCE)
;+		(allowed-classes Information_Relationship APP_TO_INFO_RELATION)
;+		(inverse-slot info_relations_contained_in_arch_states)
		(create-accessor read-write))
	(single-slot pca_compliance_assessment_value
;+		(comment "The level of compliance assessed for the EA aset")
		(type INSTANCE)
;+		(allowed-classes Principle_Compliance_Level)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot amp_responsible_roles
;+		(comment "The roles that are responsible for adherence to this policy")
		(type INSTANCE)
;+		(allowed-classes Business_Role)
		(create-accessor read-write))
	(single-slot lang_english_name
;+		(comment "The name of the language in English")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot business_capability_level
;+		(comment "Defines the granularity of the business capability (0 = coarse grained, 5 = fine grained)")
		(type SYMBOL)
		(allowed-values 0 1 2 3 4 5)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot data_standard_allowed_protocols
;+		(comment "Defines the technology protocols that are permitted for transmitting information/data for this standard")
		(type INSTANCE)
;+		(allowed-classes Technology_Protocol)
		(create-accessor read-write))
	(single-slot business_capability_used
;+		(comment "The Business Capability that this Business Capability Usage represents")
		(type INSTANCE)
;+		(allowed-classes Business_Capability)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot owns_business_process
;+		(comment "The Business Processes that this Business Role owns.")
		(type INSTANCE)
;+		(allowed-classes Business_Process_Type)
;+		(inverse-slot business_process_owned_by_business_role)
		(create-accessor read-write))
	(multislot skills_required_for_roles
;+		(comment "The roles for which this Skill at Level is required")
		(type INSTANCE)
;+		(allowed-classes ROLE_TO_SKILL_RELATION)
		(create-accessor read-write))
	(multislot project_strategic_plans_supported
;+		(comment "DEPRECATED. The set of Strategic Plans that a project is supporting through its implementation and the outputs that it delivers.")
		(type INSTANCE)
;+		(allowed-classes Strategic_Plan)
		(create-accessor read-write))
	(single-slot cm_date_iso_8601
;+		(comment "The date for the milestone in ISO 8601 format (yyyy-mm-dd)")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot project_activity_start_date
;+		(comment "DEPRECATED.")
		(type INSTANCE)
;+		(allowed-classes Time)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot required_expertise
;+		(comment "Defines the Subject Matter Expertise that is required to deliver this element")
		(type INSTANCE)
;+		(allowed-classes Subject_Matter_Expertise)
		(create-accessor read-write))
	(single-slot system_content_quality_review_to_actor_assignment_date_iso8601
;+		(comment "The date in which the actor was assigned to the Content Quality Review")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot usage_of_business_event_in_process
;+		(comment "Slot to define which Business Event is being used in a Business Event usage.")
		(type INSTANCE)
;+		(allowed-classes Business_Event)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot rc_report
;+		(comment "The reports that make use of this criterion")
		(type INSTANCE)
;+		(allowed-classes Report)
		(cardinality 1 ?VARIABLE)
;+		(inverse-slot report_criteria)
		(create-accessor read-write))
	(single-slot static_usage_of_product
;+		(comment "The product that this is a usage of.")
		(type INSTANCE)
;+		(allowed-classes Product)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot system_cq_review_policy_instance_manager_table_header_template_path
;+		(comment "The path to the HTML template that generates the headers and footers for the table displayed in the Content Manager Dashboard")
		(type STRING)
		(default "editors/enterprise/content-governance-dashboard/default-content-reviewer-instance-manager-table-header-template.html")
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot system_cq_review_policy_reviewer_dashboard
		(type INSTANCE)
;+		(allowed-classes Editor)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot tn_supplier
		(type INSTANCE)
;+		(allowed-classes Supplier)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot taxonomy_terms
;+		(comment "Slot to manage the set of Taxonomy Terms that make up a Taxonomy")
		(type INSTANCE)
;+		(allowed-classes Taxonomy_Term)
;+		(inverse-slot term_in_taxonomy)
		(create-accessor read-write))
	(single-slot rdulb_index
;+		(comment "Used to optionally sequence legal bases")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot app_datarep_inforep_source
;+		(comment "Which information representation is the source of the data used by the Application Provider")
		(type INSTANCE)
;+		(allowed-classes APP_PRO_TO_INFOREP_RELATION)
		(create-accessor read-write))
	(multislot app_principle_app_implications
;+		(comment "Commentary describing the application implications of the application principle")
		(type STRING)
		(create-accessor read-write))
	(multislot pwt_user_defined_text
;+		(comment "A list of labels for text elements that can be defined by a user")
		(type STRING)
		(create-accessor read-write))
	(multislot assessment_finding
;+		(comment "The results of the assessment, defined in terms of a vocabulary of allowed values or service quality values")
		(type INSTANCE)
;+		(allowed-classes Control_Assessment_Finding Service_Quality_Value)
		(create-accessor read-write))
	(single-slot usage_of_application
;+		(comment "The Application that this is a usage of.")
		(type INSTANCE)
;+		(allowed-classes Application_Family)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot pps_standard_physical_process
;+		(comment "Defines the physical process representing a business process performed by a specific organisation as a standard")
		(type INSTANCE)
;+		(allowed-classes Physical_Process_Type)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot attribute_value_of
;+		(comment "Relation to the instance of an Attribute that an Attribute_Value is the value of.")
		(type INSTANCE)
;+		(allowed-classes Attribute)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot regulation_attributes
;+		(comment "Slot to manage the set of attribute values that apply to an instance of a Regulation.")
		(type INSTANCE)
;+		(allowed-classes Regulation_Attribute_Value)
		(create-accessor read-write))
	(single-slot lang_display_label
;+		(comment "The string to be displayed as a label for the language")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot mft_managed_business_scope
;+		(comment "Defines the scope of business elements that are controlled by this type of management framework")
		(type INSTANCE)
;+		(allowed-classes Business_Relationship Business_Layer)
		(create-accessor read-write))
	(multislot sp_realises_principles
;+		(comment "The Security Principles that this security policies realises")
		(type INSTANCE)
;+		(allowed-classes Security_Principle)
		(create-accessor read-write))
	(single-slot sr_required_from_date_ISO8601
;+		(comment "The date from when this requriement needs to be addressed")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot data_stored_in_relations
;+		(comment "The relations that associate Application_Provider_Usages to Application_Information_Representation_Usages")
		(type INSTANCE)
;+		(allowed-classes SCU-TO-SIRU-RELATION)
		(create-accessor read-write))
	(single-slot modal_report_menu_item_category
;+		(comment "If the modal is to be accessed via a popup, menu, define the category to which the associated menu item belongs")
		(type INSTANCE)
;+		(allowed-classes Menu_Item_Category)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot rcs_enumerated_value
;+		(comment "An enumerated value to be given a score")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot mf_managed_information_elements
;+		(comment "Defines the scope of information/data elements that are managed by this framework")
		(type INSTANCE)
;+		(allowed-classes Information_Relationship Information_Layer)
		(create-accessor read-write))
	(single-slot modal_report_is_enabled
;+		(comment "Determines whether the report modal is visible in the Essential Viewer")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default FALSE)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot style_is_active
;+		(comment "Set whether the select Viewer Styling instance should be used by Essential Viewer")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot sr_target_personas
;+		(comment "")
		(type INSTANCE)
;+		(allowed-classes Persona)
		(create-accessor read-write))
	(multislot tao_owner
;+		(comment "Captures the individual or organisation that is accountable for meeting the objective")
		(type INSTANCE)
;+		(allowed-classes Actor)
		(create-accessor read-write))
	(single-slot bmcat_used_in_business_model_config_architecture
;+		(comment "The Business Model Configuration Architecture Model that contains this usage of an element")
		(type INSTANCE)
;+		(allowed-classes Business_Model_Configuration_Architecture)
;+		(cardinality 1 1)
;+		(inverse-slot bmc_architecture_elements)
		(create-accessor read-write))
	(single-slot term_icon_class
;+		(comment "Used to define a CSS class for elements associated with this term")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot enumeration_score
;+		(comment "Defines a relative score from 0 to 10 for the enumeration value")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot risk_leading_to
;+		(comment "The set of risks that can lead to the risk")
		(type INSTANCE)
;+		(allowed-classes Risk)
;+		(inverse-slot risk_leads_to)
		(create-accessor read-write))
	(multislot required_application_service_quality
;+		(comment "An Application Service Quality defining how the Application component supports or automates the business.")
		(type INSTANCE)
;+		(allowed-classes Application_Service_Quality_Value)
		(create-accessor read-write))
	(single-slot modal_report_menu_label
;+		(comment "The label to be used in a menu popup for this modal report")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot report_label
;+		(comment "The label that is displayed for the report")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot system_content_quality_escalation_to_actor_escalation_date_iso8601
;+		(comment "The date when this Content Quality Review Escalation took place")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot usage_of_service_quality
;+		(comment "The Service Quality that this is a usage of.")
		(type INSTANCE)
;+		(allowed-classes Service_Quality)
;+		(cardinality 1 1)
;+		(inverse-slot sq_values)
		(create-accessor read-write))
	(single-slot vsg_index
;+		(comment "Defines the position of this Value Stage in the sequence of Values Stages that take place within its parent Value Stream")
		(type INTEGER)
		(default 0)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot contained_process_relations
;+		(comment "The set of relations that define the flow of a business process, in terms of which step occurs before which step(s).")
		(type INSTANCE)
;+		(allowed-classes %3ABP-DIAGRAM-RELATION)
;+		(inverse-slot contained_in_process_flow)
		(create-accessor read-write))
	(multislot bl_security_classifications
;+		(comment "The security classifications assigned to this business element in the context of the enterprise")
		(type INSTANCE)
;+		(allowed-classes Security_Classification)
;+		(inverse-slot sc_classified_business_resources)
		(create-accessor read-write))
	(multislot realised_by_technology_components
;+		(comment "The Technology Components that realise a Technology Capability")
		(type INSTANCE)
;+		(allowed-classes Technology_Component)
;+		(inverse-slot realisation_of_technology_capability)
		(create-accessor read-write))
	(multislot contained_architecture_relations
;+		(comment "The relationships between the components in the Application Function Architecture.")
		(type INSTANCE)
;+		(allowed-classes %3AAFA-RELATION)
		(create-accessor read-write))
	(single-slot describes_technology_provider
;+		(comment "The Technology Product that an Technology Product Architecture is describing")
		(type INSTANCE)
;+		(allowed-classes Technology_Provider)
;+		(cardinality 0 1)
;+		(inverse-slot technology_provider_architecture)
		(create-accessor read-write))
	(single-slot exception_to_standard
;+		(comment "Relationship to the Standard for which this is an exception.")
		(type INSTANCE)
;+		(allowed-classes Standards_Management)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot apr_lifecycle_status
;+		(comment "Captures the lifecycle status of the use of the Application Provider in providing the Application Service")
		(type INSTANCE)
;+		(allowed-classes Lifecycle_Status)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot instance_of_business_activity
;+		(comment "The Business Activity that this Physical Activity is an instance of.")
		(type INSTANCE)
;+		(allowed-classes Business_Activity)
;+		(cardinality 1 1)
;+		(inverse-slot activity_implemented_by_physical)
		(create-accessor read-write))
	(single-slot pm_accountable_actor
;+		(comment "The actor that is accountable for the perfomance of the element")
		(type INSTANCE)
;+		(allowed-classes Actor)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot secondary_header_colour_viewer
;+		(comment "The secondary header colour. Typically represented as a hexidecimal value e.g. #123456")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot element_style_colour
;+		(comment "The colour that should be applied to the elements")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot principle_bus_implications_synonyms
;+		(comment "Allows for language translations of the business implications of a principle")
		(type INSTANCE)
;+		(allowed-classes Synonym)
		(create-accessor read-write))
	(single-slot Supplier+Contact
;+		(comment "The contact for the product supplier")
		(type INSTANCE)
;+		(allowed-classes Actor)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot application_function_output_views
;+		(comment "Specify the Information Views that are being returned as outputs by this function.")
		(type INSTANCE)
;+		(allowed-classes Information_View)
		(create-accessor read-write))
	(multislot report_menu_parent_menus
;+		(comment "Defines tha parent menu that contains the menu group")
		(type INSTANCE)
;+		(allowed-classes Report_Menu)
;+		(inverse-slot report_menu_groups)
		(create-accessor read-write))
	(single-slot contained_in_activity_flow
;+		(comment "Inverse relationship to track which Activity Flow a relationship is contained in")
		(type INSTANCE)
;+		(allowed-classes Business_Activity_Flow)
;+		(cardinality 0 1)
;+		(inverse-slot contained_activity_relations)
		(create-accessor read-write))
	(multislot product_type_via_channel_types
;+		(comment "The list of Channel Types via which this Product Type can be accessed")
		(type INSTANCE)
;+		(allowed-classes Channel_Type)
;+		(inverse-slot channel_type_for_product_types)
		(create-accessor read-write))
	(single-slot regdatausage_to_busproc_regdatausage
;+		(comment "The Regulated Data Usage for which consent is being achieved")
		(type INSTANCE)
;+		(allowed-classes Regulated_Data_Usage)
;+		(cardinality 1 1)
;+		(inverse-slot rdu_consenting_business_processes)
		(create-accessor read-write))
	(single-slot relation_contained_in_tech_provider_architecture
;+		(comment "The Technology Provider Architecture in which this instance is contained")
		(type INSTANCE)
;+		(allowed-classes Technology_Build_Architecture)
;+		(cardinality 0 1)
;+		(inverse-slot contained_provider_architecture_relations)
		(create-accessor read-write))
	(single-slot lcm_lifecycle_status
;+		(comment "The Lifecycle Status element that is being used in a Lifecycle Model.")
		(type INSTANCE)
;+		(allowed-classes Lifecycle_Status)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot busproctype2infoview_creates_dataobj
;+		(comment "Defines whether the business process type creates the data object when interacting with an information view")
		(type SYMBOL)
		(allowed-values Yes No Unknown)
		(default Unknown)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot report_pdf_paper_height
;+		(comment "The height in inches of the generated report pdf. The default value (18) provides the best results for A4")
		(type INTEGER)
		(default 18)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot apppro_to_physbus_from_apppro
;+		(comment "The Application Provider that is supporting a process")
		(type INSTANCE)
;+		(allowed-classes Application_Provider)
;+		(cardinality 0 1)
;+		(inverse-slot app_pro_supports_phys_proc)
		(create-accessor read-write))
	(multislot information_concepts_exchanged
;+		(comment "The set of Information Concepts that are exchanged between Business Capabilities in a Capability Chain")
		(type INSTANCE)
;+		(allowed-classes Information_Concept)
		(create-accessor read-write))
	(single-slot appfunimpl_to_physbus_from_appfunimpl
;+		(comment "The Application Function Implementation that is supporting a process")
		(type INSTANCE)
;+		(allowed-classes Application_Function_Implementation)
;+		(cardinality 1 1)
;+		(inverse-slot supports_business_process_appfunimpl)
		(create-accessor read-write))
	(single-slot system_cq_review_policy_interval
;+		(comment "The number of days between content quality reviews for instances of the class")
		(type INTEGER)
		(range 1 %3FVARIABLE)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot inverse_of_physical_process_automated_by
;+		(comment "The set of Physical Process Types (Processes/Activities) that are automated by an Application Function Implementation.")
		(type INSTANCE)
;+		(allowed-classes Physical_Process_Type)
;+		(inverse-slot physical_process_automated_by)
		(create-accessor read-write))
	(multislot tpb_derived_from_tech_prod_build
;+		(comment "Defines other Technology Product Builds (e.g. standard/reference builds) from which this Technology Product Build is derived")
		(type INSTANCE)
;+		(allowed-classes Technology_Product_Build)
		(create-accessor read-write))
	(single-slot bus_responsibility_relation_from_stakeholder
;+		(comment "The role, actor or stakeholder that has the responsibility")
		(type INSTANCE)
;+		(allowed-classes Business_Role Actor ACTOR_TO_ROLE_RELATION)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot plan_to_element_plan
;+		(comment "The plan that is impacting the element")
		(type INSTANCE)
;+		(allowed-classes Strategic_Plan)
;+		(cardinality 1 1)
;+		(inverse-slot strategic_plan_for_elements)
		(create-accessor read-write))
	(single-slot bmc_brand_scope
;+		(comment "The Brands that are supported by the Business Model Configuration")
		(type INSTANCE)
;+		(allowed-classes Brand)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot rc_scores
;+		(comment "Defines the list of scores to be given for specific values being evaluated")
		(type INSTANCE)
;+		(allowed-classes Report_Criterion_Score)
		(cardinality 1 ?VARIABLE)
;+		(inverse-slot rcs_criterion)
		(create-accessor read-write))
	(single-slot physbusproc_to_appinfoview_to_appinforep
;+		(comment "The information from an application being used to perform the physical business process")
		(type INSTANCE)
;+		(allowed-classes APP_PRO_TO_INFOREP_RELATION)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot realises_target_business_process
;+		(comment "The Target Business Process that a Business Process realises")
		(type INSTANCE)
;+		(allowed-classes)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot erl_source_name
;+		(comment "The name of the organisation or individual that is the source of the externally referenced content")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ccr_renewal_model
;+		(comment "Defines the approach to be taken to renewing the contract for the element")
		(type INSTANCE)
;+		(allowed-classes Contract_Renewal_Model)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot taxonomy_for_classes
;+		(comment "Any specific meta-classes for which the Taxonomy is relevant")
		(type INSTANCE)
;+		(allowed-classes %3AESSENTIAL-CLASS)
		(create-accessor read-write))
	(single-slot weighted_dependency_for_class
;+		(comment "The class within which this dependency is weighted")
		(type INSTANCE)
;+		(allowed-classes %3AESSENTIAL-CLASS)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ca_approval_status
;+		(comment "Represents the approval status of a change activity")
		(type INSTANCE)
;+		(allowed-classes Project_Approval_Status)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot view_label
;+		(comment "The name to be displayed for the Information View")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot roadmap_architecture_states
;+		(comment "The collection of Architecture States that comprise the Roadmap. Together they provide a coarse grained view of the changes to be undertaken")
		(type INSTANCE)
;+		(allowed-classes Architecture_State)
;+		(inverse-slot as_contained_in_roadmaps)
		(create-accessor read-write))
	(single-slot inforep_category
;+		(comment "Defins the type of the information reprsentation, e.g. database, business report, data feed, message, business document")
		(type INSTANCE)
;+		(allowed-classes Information_Representation_Category)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot raising_conceptual_event_time_basis
;+		(comment "A string slot to hold the time-based information about the raising of a business event")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot system_ea_reference_suffix
;+		(comment "Defines a suffix string to be added to the end of the auto-generated ea reference")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot used_in_app_dependencies
;+		(comment "Defines a list of application dependencies in which this information is exchanged")
		(type INSTANCE)
;+		(allowed-classes %3AAPU-TO-APU-STATIC-RELATION)
;+		(inverse-slot apu_to_apu_relation_inforeps)
		(create-accessor read-write))
	(single-slot busproctype2infoview_reads_dataobj
;+		(comment "Defines whether the business process type reads the data object when interacting with an information view")
		(type SYMBOL)
		(allowed-values Yes No Unknown)
		(default Unknown)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot ea_recovery_point_objective
;+		(comment "Defines the maximum amount of data managed by the Application – as measured by time – that can be lost after a recovery from a disaster or failure")
		(type INSTANCE)
;+		(allowed-classes Recovery_Point_Objective)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot rc_label
;+		(comment "A user friendly label for the criterion")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot contract_end_date_ISO8601
;+		(comment "end date for the contract")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot role_requires_skills
;+		(comment "The set of Skill instances that are required by an instance of a Business Role, captured by a relationship class allowing qualities to be defined about the required Skills.")
		(type INSTANCE)
;+		(allowed-classes ROLE_TO_SKILL_RELATION)
		(create-accessor read-write))
	(multislot contract_related_contracts
;+		(comment "A set of contracts related to the contract (NOT superseded / superceding)")
		(type INSTANCE)
;+		(allowed-classes Contract)
		(create-accessor read-write))
	(multislot depends_on_strategic_plans
;+		(comment "The set of Strategic Plans that a Strategic plan depends upon.")
		(type INSTANCE)
;+		(allowed-classes Strategic_Plan)
;+		(inverse-slot supports_strategic_plan)
		(create-accessor read-write))
	(single-slot usage_of_business_event_in_activity
;+		(comment "Slot to define which Business Event is being used in a Business Event usage.")
		(type INSTANCE)
;+		(allowed-classes Business_Event)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot system_content_quality_review_to_actor_assigned_by_actor
;+		(comment "The actor that assigned this actor to the Content Quality Review")
		(type INSTANCE)
;+		(allowed-classes Individual_Actor ACTOR_TO_ROLE_RELATION)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot contract_for
;+		(comment "Relationship to capture the EA_Class element(s) in the architecture for which this Contract applies. Defined via a relationship class that groups a set of elements with associated service qualities. Define multiple instances of the relationship classes to manage varying service qualities.")
		(type INSTANCE)
;+		(allowed-classes CONTRACT_COMPONENT_RELATION)
		(cardinality 1 ?VARIABLE)
;+		(inverse-slot contract_component_from_contract)
		(create-accessor read-write))
	(multislot vsg_entrance_events
;+		(comment "Defines the busines events that trigger the value stage")
		(type INSTANCE)
;+		(allowed-classes Business_Event)
		(create-accessor read-write))
	(multislot activity_implements_business_capabilty
;+		(comment "The business capability that this Business Activity implements")
		(type INSTANCE)
;+		(allowed-classes Business_Capability)
		(create-accessor read-write))
	(multislot information_store_qualities
;+		(comment "Describes the Information Service Qualities (e.g. completeness, precision, granularity) associated with this Information Store")
		(type INSTANCE)
;+		(allowed-classes Information_Service_Quality_Value)
		(create-accessor read-write))
	(single-slot technology_objective_rationale
;+		(comment "")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot programme_business_priority
;+		(comment "Describes the relative business priority of this Programme")
		(type SYMBOL)
		(allowed-values High Medium Low)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot system_event_criteria
;+		(comment "Slot to capture the criteria for when this event is used, e.g. order value > 500")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot brau_usage_of_business_reference_architecture
;+		(comment "The Business Reference Architecture that is being used in the context of another Business Reference Architecture")
		(type INSTANCE)
;+		(allowed-classes Business_Reference_Architecture)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot external_link_type
;+		(comment "The format of the external link e.g. xls for a Microsoft Excel document")
		(type INSTANCE)
;+		(allowed-classes Document_File_Type)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot revenue_for_elements
;+		(comment "The EA elements to which this Revenue is attributed.")
		(type INSTANCE)
;+		(allowed-classes EA_Class)
		(cardinality 1 ?VARIABLE)
;+		(inverse-slot revenues_for_element)
		(create-accessor read-write))
	(single-slot contained_in_business_role
;+		(comment "The business role (team) that this business role belongs to")
		(type INSTANCE)
;+		(allowed-classes Business_Role)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot license_statement
;+		(comment "Slot containing the required licensing statements")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot vs_trigger_conditions
;+		(comment "Defines the business conditions that need to be met to begin the Value Stream")
		(type INSTANCE)
;+		(allowed-classes Business_Condition)
		(create-accessor read-write))
	(single-slot ccr_end_date_ISO8601
;+		(comment "Defines the date up to which the use of the EA element is permitted")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot system_cq_review_policy_for_essential_class
;+		(comment "The class for which this policy defines the content quality review intervals and responsibilities etc")
		(type INSTANCE)
;+		(allowed-classes %3AESSENTIAL-CLASS)
;+		(cardinality 1 1)
;+		(inverse-slot system_essential_class_content_quality_review_policy)
		(create-accessor read-write))
	(single-slot belongs_to_business_domain
;+		(comment "DEPRECATED: migrated to belongs_to_business_domains slot to support multiple cacrdinality\\n\\nThe instance of the business domain that a business capability belongs to.")
		(type INSTANCE)
;+		(allowed-classes Business_Domain)
;+		(cardinality 0 1)
;+		(inverse-slot domain_of_business_capabilities)
		(create-accessor read-write))
	(single-slot report_anchor_class
;+		(comment "The meta-class of the instance or instances that are the primary focus of the Report")
		(type INSTANCE)
;+		(allowed-classes %3AESSENTIAL-CLASS)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot gb_established_date_iso8601
;+		(comment "The date when the Governance Body was first established")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot essential_id
;+		(comment "Internal IDs used to track classes and slots in the Essential Intelligence Platform, beyond the Class name and Slot name.")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot bmau_used_application
;+		(comment "The Application Capability or Service that is being used in a Business Model Architecture")
		(type INSTANCE)
;+		(allowed-classes Application_Capability Application_Service)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot standard_spec_for_data_object
;+		(comment "The Data Object against which this standard specification is defined")
		(type INSTANCE)
;+		(allowed-classes Data_Object)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot bus_principle_tech_implications
;+		(comment "Commentary describing the technology implications of the business principle")
		(type STRING)
		(create-accessor read-write))
	(single-slot ctcr_percent_apportion
;+		(comment "The percentage proportion of the specified Cost that is payable by the specified Contract.")
		(type FLOAT)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot implemented_by
		(type INSTANCE)
;+		(allowed-classes Technology_Provider)
;+		(inverse-slot implementation_of)
		(create-accessor read-write))
	(multislot tpd_supported_products
;+		(comment "The set of Technology Product (Roles) that can be used to resolve this dependency by implementing the specified Component")
		(type INSTANCE)
;+		(allowed-classes Technology_Provider_Role)
		(create-accessor read-write))
	(single-slot portal_image_path
;+		(comment "The path to the PNG or JPG file which will be displayed as part of the portal header")
		(type STRING)
		(default "images/758431_68934320.jpg")
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot allocated_resources
;+		(comment "Resources (in FTEs) that have been allocated to this element")
		(type INSTANCE)
;+		(allowed-classes Resource_Allocation)
;+		(inverse-slot ra_resource_consumer)
		(create-accessor read-write))
	(single-slot inverse_of_application_function_output_views
;+		(comment "Reference to the Application Function that returns this Information View Usage when it executes.")
		(type INSTANCE)
;+		(allowed-classes Application_Function)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot job_to_role_at_level_to_role_at_level
;+		(comment "The individual business role at a specific level that the job is expected to perform")
		(type INSTANCE)
;+		(allowed-classes Individual_Business_Role_At_Level)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot contained_information_representation_attributes
;+		(comment "The set of Information Representation Attributes from which an Information Representation can be composed.")
		(type INSTANCE)
;+		(allowed-classes Information_Representation_Attribute)
		(create-accessor read-write))
	(single-slot sq_maximum_value
;+		(comment "Defines the maximum allowable value for the Service Quality")
		(type INSTANCE)
;+		(allowed-classes Service_Quality_Value)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot report_parameter_instance_value
;+		(comment "Defines an instance that is passed as the parameter value")
		(type INSTANCE)
;+		(allowed-classes EA_Class)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot cm_change_activity
;+		(comment "The change activity with which this miletsone is associated")
		(type INSTANCE)
;+		(allowed-classes Change_Activity)
;+		(cardinality 1 1)
;+		(inverse-slot ca_milestones)
		(create-accessor read-write))
	(multislot report_menu_item_parent_groups
;+		(comment "Defines the menu group that contains this menu item")
		(type INSTANCE)
;+		(allowed-classes Report_Menu_Group)
;+		(inverse-slot report_menu_items)
		(create-accessor read-write))
	(multislot information_created_by_bus_process_types
;+		(comment "DEPRECATED.\\nThe business process types that create information aligned to this information view")
		(type INSTANCE)
;+		(allowed-classes Business_Process_Type)
;+		(inverse-slot bus_process_type_creates_information)
		(create-accessor read-write))
	(multislot bus_cap_supporting_app_caps
;+		(comment "The set of Application Capabilities that support the Business Capability")
		(type INSTANCE)
;+		(allowed-classes Application_Capability)
;+		(inverse-slot app_cap_supports_bus_cap)
		(create-accessor read-write))
	(multislot pwt_styles
;+		(comment "The list of styles that comprise the theme")
		(type INSTANCE)
;+		(allowed-classes Widget_Theme_Style)
		(cardinality 1 ?VARIABLE)
;+		(inverse-slot pws_theme)
		(create-accessor read-write))
	(single-slot process_performed_by_actor_role
;+		(comment "The Actor, taking on a Business Role that perform this process.")
		(type INSTANCE)
;+		(allowed-classes ACTOR_TO_ROLE_RELATION Actor)
;+		(cardinality 0 1)
;+		(inverse-slot performs_physical_processes)
		(create-accessor read-write))
	(single-slot assessment_date
;+		(comment "The date on which the assessment was performed")
		(type INSTANCE)
;+		(allowed-classes Time)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot bef_category
;+		(comment "Defines the nature of the factor, e.g. Political, Legal, Social")
		(type INSTANCE)
;+		(allowed-classes Business_Environment_Category)
;+		(cardinality 1 1)
;+		(inverse-slot bec_factors)
		(create-accessor read-write))
	(multislot arch_state_technology_relations
;+		(comment "Slot to capture the Technology Relationship instances (e.g. technology dependencies in a logical technology architecture) that are in an Architecture State")
		(type INSTANCE)
;+		(allowed-classes %3ATechnology_Relationship)
		(create-accessor read-write))
	(single-slot governance_reference
;+		(comment "Reference identifier for all governance instances")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot usage_of_application_function_implementation
;+		(comment "The Application Function Implementation that is being used.")
		(type INSTANCE)
;+		(allowed-classes Application_Function_Implementation)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot physical_data_product_scope
;+		(comment "Describes the logical product scope of the physical  data in terms of one or more Products")
		(type INSTANCE)
;+		(allowed-classes Product)
		(create-accessor read-write))
	(single-slot usage_of_application_deployment
;+		(comment "The Application Deployment that this is a usage of")
		(type INSTANCE)
;+		(allowed-classes Application_Deployment)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot domain_of_business_capabilities
;+		(comment "DEPRECATED: Use business_domain_contains_bus_capabilities to allow a Business Capabilty to beloing to mutiple Business Domains")
		(type INSTANCE)
;+		(allowed-classes Business_Capability)
;+		(inverse-slot belongs_to_business_domain)
		(create-accessor read-write))
	(single-slot sqv_index
;+		(comment "Allows for sequencing of service quality values")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot bo_target_date
;+		(comment "Captures the target date for achieving the objective")
		(type INSTANCE)
;+		(allowed-classes Time)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot data_object_system_of_record
;+		(comment "The single source of truth for the Data Object")
		(type INSTANCE)
;+		(allowed-classes Application_Provider)
		(create-accessor read-write))
	(single-slot risk_category
;+		(comment "The category to which the Risk belongs")
		(type INSTANCE)
;+		(allowed-classes Risk_Category)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot business_task_display_label
;+		(comment "Text label used when a Business Task Usage is shown on e.g. an Activity Diagram")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot dmp_responsible_roles
;+		(comment "The Business Roles that have been assigned the data management responsibility for the data object")
		(type INSTANCE)
;+		(allowed-classes Business_Role Actor)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(single-slot portal_xsl_filename
;+		(comment "The name of the XSL file which acts as the template for the portal view.")
		(type STRING)
		(default "common/portal_template.xsl")
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot bmc_elements
;+		(comment "The enterprise elements that are needed to implement the Business Model Configuration")
		(type INSTANCE)
;+		(allowed-classes BUSMODEL_CONFIG_TO_ELEMENT_RELATION)
;+		(inverse-slot bmcr_from_busmodel_config)
		(create-accessor read-write))
	(single-slot technology_provider_delivery_model
;+		(comment "Defines how the services provided by a technology product are delivered to the enterprise")
		(type INSTANCE)
;+		(allowed-classes Technology_Delivery_Model)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ca_finding_impact_comments
;+		(comment "A summary of the impact of the assessment findings")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot bmc_relation_in_business_model_config_architecture
;+		(comment "The Business Model Configuration Architecture Model that contains this dependency")
		(type INSTANCE)
;+		(allowed-classes Business_Model_Configuration_Architecture)
;+		(cardinality 1 1)
;+		(inverse-slot bmc_architecture_dependencies)
		(create-accessor read-write))
	(multislot skill_for_elements
;+		(comment "DEPERECATED: The elements in which this skill represents expertise or knowledge")
		(type INSTANCE)
;+		(allowed-classes EA_Class)
		(create-accessor read-write))
	(single-slot inverse_of_technology_component_usages
		(type INSTANCE)
;+		(allowed-classes Technology_Component_Architecture)
;+		(cardinality 0 1)
;+		(inverse-slot technology_component_usages)
		(create-accessor read-write))
	(multislot pm_performance_value
;+		(comment "The service quality measure that represents the level of performance for the element")
		(type INSTANCE)
;+		(allowed-classes Service_Quality_Value)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(multislot info_concept_supports_bus_driver
;+		(comment "Defines the business drivers that are supported by this information concept")
		(type INSTANCE)
;+		(allowed-classes Business_Driver)
		(create-accessor read-write))
	(multislot product_implemented_by_process
;+		(comment "The Physical Business Processes that implement the product.")
		(type INSTANCE)
;+		(allowed-classes Physical_Process_Type)
		(create-accessor read-write))
	(single-slot providing_application_service_usage
;+		(comment "The usage of the application service that is providing this function.")
		(type INSTANCE)
;+		(allowed-classes Application_Service_Usage)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot ce_configuration_path
;+		(comment "The path to the JSON file containing the configuration of the editor")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot bd_has_bus_implications
;+		(comment "The of Business Drivers for which an business driver has implications.")
		(type INSTANCE)
;+		(allowed-classes Business_Driver)
		(create-accessor read-write))
	(multislot contains_technology_capabilities
;+		(comment "The technology capabilities that belong to this Technology Domain")
		(type INSTANCE)
;+		(allowed-classes Technology_Capability)
;+		(inverse-slot belongs_to_technology_domain)
		(create-accessor read-write))
	(multislot information_store_org_scope
;+		(comment "Describes the organisational scope of the information store in terms of one or more Group Actors")
		(type INSTANCE)
;+		(allowed-classes Group_Actor)
		(create-accessor read-write))
	(single-slot erl_source_email
;+		(comment "The email address of the organisation or individual that is the source of the externally referenced content")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot act_to_obj_objective
;+		(comment "The objective that has been given to the actor")
		(type INSTANCE)
;+		(allowed-classes Business_Objective)
;+		(cardinality 1 1)
;+		(inverse-slot bo_assigned_to)
		(create-accessor read-write))
	(single-slot budgetary_element_of_budget
;+		(comment "The budget that contains this budgetary element")
		(type INSTANCE)
;+		(allowed-classes Budget)
;+		(cardinality 1 1)
;+		(inverse-slot budgetary_elements)
		(create-accessor read-write))
	(multislot bus_process_type_reads_information
;+		(comment "DEPRECATED.\\nThe set of Information Representations that this process reads data from")
		(type INSTANCE)
;+		(allowed-classes Information_View_Type)
;+		(inverse-slot information_read_by_bus_process_types)
		(create-accessor read-write))
	(multislot contained_dynamic_relationships
;+		(comment "The set of relationships between Application Function Implementations in the architecture.")
		(type INSTANCE)
;+		(allowed-classes)
		(create-accessor read-write))
	(multislot technology_component_functions_offered
;+		(comment "")
		(type INSTANCE)
;+		(allowed-classes Technology_Function)
		(create-accessor read-write))
	(multislot indvactor_managed_individuals
;+		(comment "The individual actors that report to this actor")
		(type INSTANCE)
;+		(allowed-classes ACTOR_REPORTSTO_ACTOR_RELATION)
;+		(inverse-slot indvact_reportsto_indvact_to_actor)
		(create-accessor read-write))
	(single-slot apppro_to_inforep_to_datarep_to_datarep
;+		(comment "Describes the Data Representation that is being used by an Application Provider in the context of an Information Representation")
		(type INSTANCE)
;+		(allowed-classes Data_Representation_Type)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot ap_disposition_lifecycle_status
;+		(comment "The current disposition lifecycle status of the Application")
		(type INSTANCE)
;+		(allowed-classes Disposition_Lifecycle_Status)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot business_principle_for_business_capabilities
;+		(comment "")
		(type INSTANCE)
;+		(allowed-classes Business_Capability)
;+		(inverse-slot business_principles)
		(create-accessor read-write))
	(single-slot ca_remediation_target_date_ISO8601
;+		(comment "The target by when the assessment finding should be remediated")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot business_process_performed_by_business_role
;+		(comment "The business roles that perform this business process type")
		(type INSTANCE)
;+		(allowed-classes Business_Role)
;+		(inverse-slot performs_business_process)
		(create-accessor read-write))
	(single-slot meta_model_update_applied_date
;+		(comment "Slot for capturing the date/time when an update was applied")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot sti_implication_confidence_level
;+		(comment "The confidence level that the trend implication will occur. Defined as a percentage from 0.0 - 1.0")
		(type FLOAT)
		(range 0.0 1.0)
		(default 0.5)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot contract_applied
;+		(comment "Relationship to capture the EA_Class element(s) (often, physical instances) in the architecture that define the scope of this Contract. For example, when the contract is FOR the provision of a process, this slot is used to define the elements to which that process is applied.")
		(type INSTANCE)
;+		(allowed-classes EA_Class)
		(create-accessor read-write))
	(multislot arch_state_security_management
;+		(comment "Slot to capture the elements related to security management in an Architecture State. Choose a relevant concrete instance, e.g. Security Principle, Security Policy etc.")
		(type INSTANCE)
;+		(allowed-classes Security_Management)
		(create-accessor read-write))
	(multislot related_information_representation
;+		(comment "Slot to hold the related Information Representation that a System Event is associated with.")
		(type INSTANCE)
;+		(allowed-classes Information_Representation)
		(create-accessor read-write))
	(multislot app_principle_inf_implications
;+		(comment "Commentary describing the information implications of the application principle")
		(type STRING)
		(create-accessor read-write))
	(multislot report_filter_excluded_slots
		(type INSTANCE)
;+		(allowed-classes %3AESSENTIAL-SLOT)
		(create-accessor read-write))
	(multislot cct_for_classes
;+		(comment "The types of elements for which the cost component  applies")
		(type INSTANCE)
;+		(allowed-classes %3AESSENTIAL-CLASS)
		(create-accessor read-write))
	(single-slot maintenance_cost
;+		(comment "DEPRECATED - Use costs_for_element\\n\\nannual cost of maintenance")
		(type FLOAT)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot raising_event_time_basis
;+		(comment "A string slot to hold the time-based information about the raising of a business event")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot system_ea_reference_path_segment_separator
;+		(comment "Defines the character or string to be used as a separator between segments of an ea_reference")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot application_objectives_for_application_capability
		(type INSTANCE)
;+		(allowed-classes Application_Architecture_Objective)
;+		(inverse-slot objective_for_application_capabilities)
		(create-accessor read-write))
	(single-slot risk_indicators_comment
;+		(comment "A description of the key indicators for the Risk")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot project_business_priority
;+		(comment "the relative priority of this project")
		(type SYMBOL)
		(allowed-values High Medium Low)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot performed_by_business_role_activity
;+		(comment "The Business Role that performs this Business Activity")
		(type INSTANCE)
;+		(allowed-classes Business_Role)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(multislot provides_application_function_implementations
;+		(comment "The Application Function Implementations that this Provider provides")
		(type INSTANCE)
;+		(allowed-classes Application_Function_Implementation)
;+		(inverse-slot application_function_implementation_provided_by)
		(create-accessor read-write))
	(multislot synonyms
;+		(comment "Alternative names by which this element is known")
		(type INSTANCE)
;+		(allowed-classes Synonym)
		(create-accessor read-write))
	(single-slot application_principle_rationale
;+		(comment "")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot defining_business_process_flow
;+		(comment "The flow-relations, sub-processes and Business Activities that make up this Business Process")
		(type INSTANCE)
;+		(allowed-classes Business_Process_Flow)
;+		(cardinality 0 1)
;+		(inverse-slot defines_business_process)
		(create-accessor read-write))
	(multislot implemented_by_physical_business_processes
;+		(comment "The physical business processes that implement a logical business process")
		(type INSTANCE)
;+		(allowed-classes Physical_Process)
;+		(inverse-slot implements_business_process)
		(create-accessor read-write))
	(single-slot crl_maximum
;+		(comment "A number representing the maximum representative score (e.g. effort, cost) for this level of remediation")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot sc_index
;+		(comment "Represents the relative security level within its security classification scheme")
		(type INTEGER)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot ap_supplier
;+		(comment "The Supplier of the Application Provider")
		(type INSTANCE)
;+		(allowed-classes Supplier)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot usage_of_information_view
;+		(comment "The Information View that this is a usage of.")
		(type INSTANCE)
;+		(allowed-classes Information_View)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot parent_portal
;+		(comment "")
		(type INSTANCE)
;+		(allowed-classes Portal)
;+		(cardinality 1 1)
;+		(inverse-slot portal_sections)
		(create-accessor read-write))
	(multislot product_contained_products
;+		(comment "")
		(type INSTANCE)
;+		(allowed-classes Product)
		(create-accessor read-write))
	(single-slot element_style_text_colour
;+		(comment "The text colour that should be applied to the elements")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ap_codebase_status
;+		(comment "The status of the Application Provider codebase. Is this a packaged application, a bespoke application or something in between.")
		(type INSTANCE)
;+		(allowed-classes Codebase_Status)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot data_updated_by_app_func_impls
;+		(comment "DEPRECATED.")
		(type INSTANCE)
;+		(allowed-classes Application_Function_Implementation)
;+		(inverse-slot app_func_impl_updates_data_in)
		(create-accessor read-write))
	(single-slot defined_by_information_concept
;+		(comment "Captures the Information Concept that defines the semantics of this data attribute.")
		(type INSTANCE)
;+		(allowed-classes Information_Concept)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot dr_technical_name
;+		(comment "Used to capture the technical name used for the Data Representation (e.g. table name)")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot usage_label
;+		(comment "The label for this usage")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot pw_render_file_path
;+		(comment "The path to the file that transforms data provided by the Data Set API to that expected and renders the widget template")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot service_quality_value_value
;+		(comment "The specific value of the Service Quality Value instance.")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot contract_renewal_model
;+		(comment "Model for contract renewal used by the organisation")
		(type INSTANCE)
;+		(allowed-classes Contract_Renewal_Model)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot application_service_usage_dependencies
;+		(comment "The dependencies between the Application Services in the Application Service Architecture")
		(type INSTANCE)
;+		(allowed-classes %3AASU-TO-ASU-STATIC-RELATION)
;+		(inverse-slot inverse_of_application_service_usage_dependencies)
		(create-accessor read-write))
	(multislot editor_component_required_classes
;+		(comment "Defines the classes of instance lists required by this component")
		(type INSTANCE)
;+		(allowed-classes %3AESSENTIAL-CLASS)
		(create-accessor read-write))
	(single-slot ca_target_end_date
;+		(comment "The date when a change activity is expected to be completed")
		(type INSTANCE)
;+		(allowed-classes Time)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot sme_expertise_level
;+		(comment "The level of expertsie in the given Subject by the Actors")
		(type INSTANCE)
;+		(allowed-classes Expertise_Level)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot infodata_rep_lifecycle_status
;+		(comment "The current lifeycycle status of the Information or Data Representation")
		(type INSTANCE)
;+		(allowed-classes InfoData_Representation_Lifecycle_Status)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot app_svc_reads_info_view
;+		(comment "Defines whether the Application Service reads the Information View")
		(type SYMBOL)
		(allowed-values Yes No Unknown)
		(default Unknown)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ra_risk_impact
;+		(comment "The relative impact to the enterprise if the Risk was to occur")
		(type INSTANCE)
;+		(allowed-classes Risk_Impact)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot pwtc_index
;+		(comment "The sequencing index of the Presentation Colour Theme colour")
		(type INTEGER)
		(default 1)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot essential_prj_AA_v1.3_Slot_1
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot business_task_used
;+		(comment "The business task that this is a usage of.")
		(type INSTANCE)
;+		(allowed-classes Business_Task)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot bmd_for_operating_model_category
;+		(comment "The operating model category for which the overall direction is being defined")
		(type INSTANCE)
;+		(allowed-classes Operating_Model_Category)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot app_func_impl_creates_data_in
;+		(comment "DEPRECATED - REPLACED BY 'uses_information_representation' SLOT\nThe set of Information Representations that this application function implementation creates data for")
		(type INSTANCE)
;+		(allowed-classes Information_Representation)
;+		(inverse-slot data_created_by_app_func_impls)
		(create-accessor read-write))
	(multislot ce_editor_components
;+		(comment "The Editor Components that are used bu this Configured Editor")
		(type INSTANCE)
;+		(allowed-classes Editor_Component Editor_Component_Configurator)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(multislot sti_service_quality_impacts
;+		(comment "The service quality changes that occur if the implication is realised")
		(type INSTANCE)
;+		(allowed-classes Service_Quality_Change)
		(create-accessor read-write))
	(single-slot sq_weighting
;+		(comment "Defines the relative weighting of the service quality")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot contained_application_deployments
;+		(comment "Sub Application Deployments contained in an Application Deployment")
		(type INSTANCE)
;+		(allowed-classes Application_Deployment)
		(create-accessor read-write))
	(multislot technology_provider_instances
;+		(comment "The physical instances of this technology that have been deployed")
		(type INSTANCE)
;+		(allowed-classes Technology_Instance)
;+		(inverse-slot technology_instance_of)
		(create-accessor read-write))
	(single-slot actor_to_skill_is_aspiration
;+		(comment "Defines whether the Skill is aspirational for the Actor")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default FALSE)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot portal_sections
;+		(comment "The Portal_Groups that form the sections in a Portal")
		(type INSTANCE)
;+		(allowed-classes Portal_Section)
;+		(inverse-slot parent_portal)
		(create-accessor read-write))
	(multislot ss_solution_supports_policy
;+		(comment "The set of Security Policies that are supported by the Security Solution")
		(type INSTANCE)
;+		(allowed-classes Security_Policy)
		(create-accessor read-write))
	(single-slot system_ea_reference_suffix_path
;+		(comment "Defines an instance navigation path (in dot notation) to the slot value used as the suffix string of the auto-generated ea reference")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ctcr_cost
;+		(comment "The Cost for the Contract linked to this relationship")
		(type INSTANCE)
;+		(allowed-classes Cost)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot constraint_related_business
;+		(comment "The set of business elements that are related to the constraint.")
		(type INSTANCE)
;+		(allowed-classes Business_Layer)
		(create-accessor read-write))
	(single-slot implementing_application_service
;+		(comment "The Application Service that is provided by the Application Provider")
		(type INSTANCE)
;+		(allowed-classes Application_Service)
;+		(cardinality 1 1)
;+		(inverse-slot provided_by_application_provider_roles)
		(create-accessor read-write))
	(multislot information_read_by_bus_process_types
;+		(comment "DEPRECATED.\\nThe business process types that read information aligned to this information view")
		(type INSTANCE)
;+		(allowed-classes Business_Process_Type)
;+		(inverse-slot bus_process_type_reads_information)
		(create-accessor read-write))
	(single-slot rr_resource_requester
;+		(comment "The element that has a requirement for the resource")
		(type INSTANCE)
;+		(allowed-classes Change_Activity Group_Actor)
;+		(cardinality 1 1)
;+		(inverse-slot required_fte_resources)
		(create-accessor read-write))
	(single-slot static_architecture_of_product
;+		(comment "The product that this static architecture describes")
		(type INSTANCE)
;+		(allowed-classes Product)
;+		(cardinality 0 1)
;+		(inverse-slot prod_static_architecture)
		(create-accessor read-write))
	(multislot modal_report_content_apis
;+		(comment "Defines the Data Set APIs that provide read access to content to be dynamically displayed in the modal")
		(type INSTANCE)
;+		(allowed-classes Data_Set_API)
		(create-accessor read-write))
	(single-slot usage_of_app_provider
		(type INSTANCE)
;+		(allowed-classes Application_Provider)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot information_store_label
;+		(comment "The label to be dsplayed for the Information Store")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot obj_to_svc_quality_objective
;+		(comment "The objective being measured")
		(type INSTANCE)
;+		(allowed-classes Business_Objective)
;+		(cardinality 1 1)
;+		(inverse-slot bo_performance_measures)
		(create-accessor read-write))
	(multislot tl_security_classifications
;+		(comment "The security classifications assigned to this technology element in the context of the enterprise")
		(type INSTANCE)
;+		(allowed-classes Security_Classification)
;+		(inverse-slot sc_classified_technology_resources)
		(create-accessor read-write))
	(multislot skills_required_for_job_position
;+		(comment "Defines the skills that are required for the Job Position")
		(type INSTANCE)
;+		(allowed-classes JOB_TO_SKILL_RELATION)
;+		(inverse-slot to_skill_job_relation)
		(create-accessor read-write))
	(multislot sm_geographic_scope
;+		(comment "The geograpghic scope for which a standard should be applied")
		(type INSTANCE)
;+		(allowed-classes Geographic_Region Geographic_Location)
		(create-accessor read-write))
	(single-slot pwt_function_name
;+		(comment "Defines a unique name for the function that renders the template")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot product_type_target_audience
;+		(comment "The Business Role that is the target consumer of the Product Type")
		(type INSTANCE)
;+		(allowed-classes Business_Role)
		(create-accessor read-write))
	(single-slot business_process_id
;+		(comment "An identification number for the Business ProcessType that can also provide an indication of its granularity")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ra_risk_probability
;+		(comment "The probability (as a percentage between - and 100) of the Risk occurring")
		(type INTEGER)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot instance_of_site_categories
;+		(comment "The type of location that this Site is.")
		(type INSTANCE)
;+		(allowed-classes Site_Category)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(single-slot vsg_label
;+		(comment "DEPRECATED: The name of the Value Stage\\n\\nNOTE: Use vsg_display_label slot")
		(type INSTANCE)
;+		(allowed-classes Label)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot strategic_plan_valid_from_date
;+		(comment "The date from which this plan is valid in the enterprise")
		(type INSTANCE)
;+		(allowed-classes Time)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot skill_has_certification
;+		(comment "The set of certifications that exist for a particular skill")
		(type INSTANCE)
;+		(allowed-classes Skill_Certification)
		(create-accessor read-write))
	(single-slot change_for_revenue_component_type
;+		(comment "The type of revenue for which the change is being defined")
		(type INSTANCE)
;+		(allowed-classes Revenue_Component_Type)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot report_parameter_name
;+		(comment "The string that is passed as the parameter name")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot business_term_related_terms
;+		(comment "The Business Terms that are related to this Business Term")
		(type INSTANCE)
;+		(allowed-classes Business_Term)
;+		(inverse-slot business_term_related_terms)
		(create-accessor read-write))
	(multislot info_logical_contained_in_arch_states
;+		(comment "The architecture states that contain this logical information element")
		(type INSTANCE)
;+		(allowed-classes Architecture_State)
;+		(inverse-slot arch_state_information_logical)
		(create-accessor read-write))
	(single-slot rc_revenue_component_type
;+		(comment "The type of the revenue component (e.g. commission, product sales, services)")
		(type INSTANCE)
;+		(allowed-classes Revenue_Component_Type)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot realised_by_skill
;+		(comment "Relationship to the instances of the Skill Class that realise this Skill Type")
		(type INSTANCE)
;+		(allowed-classes Skill)
;+		(inverse-slot is_type_of_skill)
		(create-accessor read-write))
	(single-slot pwt_screenshot_file_path
;+		(comment "Provides the path to the image file containing a screenshot of the Presentation Widget Temlate")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot physbusproc_to_appinfoview_from_physbusproc
;+		(comment "The Physical Business Process that uses the information provided by an  application")
		(type INSTANCE)
;+		(allowed-classes Physical_Process_Type)
;+		(cardinality 1 1)
;+		(inverse-slot physbusproc_uses_appinforeps)
		(create-accessor read-write))
	(single-slot implements_data_representation
;+		(comment "The logical Data Representation that this Physical Data Object implements")
		(type INSTANCE)
;+		(allowed-classes Data_Representation)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot software_from_tech_prod_role
;+		(comment "Slot to capture where a software component comes from, i.e. which Technology Product")
		(type INSTANCE)
;+		(allowed-classes Technology_Product_Role)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot end_date_iso_8601
;+		(comment "The date until which this architecture is relevant to the enterprise in ISO 8601 format (yyyy-mm-dd)")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot sti_implication_for_trend
;+		(comment "The strategic trend that may lead to this implication")
		(type INSTANCE)
;+		(allowed-classes Strategic_Trend)
;+		(cardinality 1 1)
;+		(inverse-slot strategic_trend_implications)
		(create-accessor read-write))
	(single-slot system_ea_reference_prefix
;+		(comment "Defines a prefix string to be added to the beginning of the auto-generated ea reference")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot physbusproc_uses_appinforeps
;+		(comment "The information provided by applications that the actor uses to perform the business process")
		(type INSTANCE)
;+		(allowed-classes PHYSBUSPROC_TO_APPINFOREP_RELATION)
;+		(inverse-slot physbusproc_to_appinfoview_from_physbusproc)
		(create-accessor read-write))
	(multislot supports_business_process_appfunimpl
;+		(comment "The Business Processes, Activities or Tasks that are supported by the Application Function Implementation.")
		(type INSTANCE)
;+		(allowed-classes APP_FUNIMPL_TO_BUS_RELATION)
;+		(inverse-slot appfunimpl_to_physbus_from_appfunimpl)
		(create-accessor read-write))
	(single-slot business_term_examples
;+		(comment "One or more examples of ways in which the Business Term is typically used")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot role_for_application_provider
;+		(comment "The Application Provider that provides the Application Service")
		(type INSTANCE)
;+		(allowed-classes Application_Provider)
;+		(cardinality 1 1)
;+		(inverse-slot provides_application_services)
		(create-accessor read-write))
	(multislot objective_supported_by_strategic_plan
;+		(comment "Slot to manage the set of Strategic Plans that support an objective (Business Objective, Application Architecture Objective, Information Architecture Objective and Technology Architecture Objectives)")
		(type INSTANCE)
;+		(allowed-classes Strategic_Plan)
;+		(inverse-slot strategic_plan_supports_objective)
		(create-accessor read-write))
	(multislot afi_data_map_source
;+		(comment "Defines the source object(s) or attribute(s) in the mapping")
		(type INSTANCE)
;+		(allowed-classes Data_Representation_Type Information_Representation_Type)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(multislot ara_realised_by_app_reference_implementations
;+		(comment "The Application Reference Implementations that realise this Application Reference Architecture")
		(type INSTANCE)
;+		(allowed-classes Application_Reference_Implementation)
;+		(inverse-slot ari_realises_app_reference_architectures)
		(create-accessor read-write))
	(single-slot vsg_value_stream
;+		(comment "The parent Value Stream or Value Stage that contains this Value Stage")
		(type INSTANCE)
;+		(allowed-classes Value_Stream Value_Stage)
;+		(cardinality 1 1)
;+		(inverse-slot vs_value_stages)
		(create-accessor read-write))
	(single-slot strategic_plan_valid_from_date_iso_8601
;+		(comment "The date from which this plan is valid in the enterprise in ISO 8601 format (yyyy-mm-dd)")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot information_view_stakeholders
;+		(comment "DEPRECTAED: USE \\\\\"stakeholders\\\\\" SLOT\\n\\nCaptures the list of Actors playing roles (e.g. Information Steward, Information Owner) that are stakeholders of this Information View")
		(type INSTANCE)
;+		(allowed-classes ACTOR_TO_ROLE_RELATION)
		(create-accessor read-write))
	(single-slot implements_product_feature
;+		(comment "Defines the product feature that is implemented")
		(type INSTANCE)
;+		(allowed-classes Product_Feature)
;+		(cardinality 1 1)
;+		(inverse-slot feature_delivered_by)
		(create-accessor read-write))
	(single-slot busproctype2infoview_deletes_dataobj
;+		(comment "Defines whether the business process type deletes the data object when interacting with an information view")
		(type SYMBOL)
		(allowed-values Yes No Unknown)
		(default Unknown)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot ss_application_elements
;+		(comment "The set of Application elements for the Security Solution")
		(type INSTANCE)
;+		(allowed-classes Application_Provider_Type)
		(create-accessor read-write))
	(single-slot application_function_implementation_provided_by
;+		(comment "the Application Provider that provides this application function implementation")
		(type INSTANCE)
;+		(allowed-classes Application_Provider)
;+		(cardinality 0 1)
;+		(inverse-slot provides_application_function_implementations)
		(create-accessor read-write))
	(single-slot architecture_containing_tcf_relations
;+		(comment "The technology component architecture that contains this TCU-TO-TFU relation.")
		(type INSTANCE)
;+		(allowed-classes Technology_Component_Architecture)
;+		(cardinality 0 1)
;+		(inverse-slot invoked_functions_relations)
		(create-accessor read-write))
	(single-slot is_data_set_api_precached
;+		(comment "Slot to specify whether this Report API should be pre-cached")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot inverse_of_technology_deployment_usages
;+		(comment "The Technology Deployment Architecture in which this Technology Deployment Usage is contained")
		(type INSTANCE)
;+		(allowed-classes Technology_Deployment_Architecture)
;+		(cardinality 0 1)
;+		(inverse-slot technology_deployment_usages)
		(create-accessor read-write))
	(multislot system_secured_read_elements
;+		(comment "The set of elements within the repository that have been assigned this security classification for READ access")
		(type INSTANCE)
;+		(allowed-classes %3AESSENTIAL-CLASS %3AESSENTIAL-SLOT EA_Relation EA_Class %3AEA_Graph_Relation EA_Security)
;+		(inverse-slot system_security_read_classification)
		(create-accessor read-write))
	(single-slot change_for_bus_env_factor
;+		(comment "The business environment factor for which the change is being defined")
		(type INSTANCE)
;+		(allowed-classes Business_Environment_Factor)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot contained_application_provider_dependencies
;+		(comment "The Application Providers and the dependencies between them that make up a STATIC Application Provider Architecture")
		(type INSTANCE)
;+		(allowed-classes)
		(create-accessor read-write))
	(single-slot interpreted_as_business_event
;+		(comment "Slot to hold the (optionally) Business Event that a System Event is interpreted as.")
		(type INSTANCE)
;+		(allowed-classes Business_Event)
;+		(cardinality 0 1)
;+		(inverse-slot interpreted_by_system_events)
		(create-accessor read-write))
	(multislot afi_maps_info_data
;+		(comment "Defines the set of information and data mapping(s) that an Application Function Implementation performs.")
		(type INSTANCE)
;+		(allowed-classes AFI_DATA_MAPPING_RELATION)
;+		(inverse-slot afi_performing_mapping)
		(create-accessor read-write))
	(multislot contained_technology_deployment_instances
;+		(comment "The set of Technology Deployment Instances in this Group")
		(type INSTANCE)
;+		(allowed-classes Technology_Node)
		(create-accessor read-write))
	(single-slot bpru_usage_of_business_process
;+		(comment "The Business Process that is being used as part of a Business Reference Architecure Model")
		(type INSTANCE)
;+		(allowed-classes Business_Process_Type)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot budgetary_elements
;+		(comment "The budgetary elements that are associated with a budget")
		(type INSTANCE)
;+		(allowed-classes Budgetary_Element)
;+		(inverse-slot budgetary_element_of_budget)
		(create-accessor read-write))
	(single-slot pfi_feature_implementation_for_product
;+		(comment "The product to which this feature implementation belongs")
		(type INSTANCE)
;+		(allowed-classes Product)
;+		(cardinality 1 1)
;+		(inverse-slot product_feature_implementations)
		(create-accessor read-write))
	(multislot inf_principle_inf_implications
;+		(comment "Commentary describing the information implications of the information principle")
		(type STRING)
		(create-accessor read-write))
	(multislot license_approval
;+		(comment "Relationship from a License instance that defines the approvals that have been granted for this license.")
		(type INSTANCE)
;+		(allowed-classes License_Approval)
		(create-accessor read-write))
	(single-slot static_prod_type_arch_display_label
;+		(comment "The display label for this component in the static product type architecture model")
		(type STRING)
		(default "<component name>")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot sr_requirement_for_elements
;+		(comment "The elements for which this is a strategic requirement")
		(type INSTANCE)
;+		(allowed-classes EA_Relation %3AEA_Graph_Relation Business_Layer Application_Layer Information_Layer Technology_Layer)
;+		(inverse-slot ea_requirements)
		(create-accessor read-write))
	(single-slot system_essential_slot_priority_of_slot
;+		(comment "The slot that is defined as being a priority for instances of the class")
		(type INSTANCE)
;+		(allowed-classes %3AESSENTIAL-SLOT)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot feature_delivered_by
;+		(comment "Relationship to the Product Feature Implementations that deliver a Feature")
		(type INSTANCE)
;+		(allowed-classes Product_Feature_Implementation)
;+		(inverse-slot implements_product_feature)
		(create-accessor read-write))
	(multislot skills_of_actor
;+		(comment "The set of Actor-to-Skill relation instances that capture how the Actor can provide the particular Skill.")
		(type INSTANCE)
;+		(allowed-classes ACTOR_TO_SKILL_RELATION)
;+		(inverse-slot to_skill_actor_relation)
		(create-accessor read-write))
	(single-slot cc_cost_start_date
;+		(comment "The start date for the cost component")
		(type INSTANCE)
;+		(allowed-classes Time)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot data_object_is_abstract
;+		(comment "Defines whether this data object is ever instantiated as physical data")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default FALSE)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot phys_bp_supported_by_app_funimpl
;+		(comment "Specifies an Application Function Implementation that is supporting the Physical Business Process")
		(type INSTANCE)
;+		(allowed-classes APP_FUNIMPL_TO_BUS_RELATION)
;+		(inverse-slot appfunimpl_to_physbus_to_busproc)
		(create-accessor read-write))
	(single-slot technology_node_type
;+		(comment "Defines the nature of the technology node, e.g. Physical Server, Firewall, Virtual Server, VLAN, LAN, WAN, Cloud Region")
		(type INSTANCE)
;+		(allowed-classes Technology_Node_Type)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot control_assessed_element
		(type INSTANCE)
;+		(allowed-classes CONTROL_TO_ELEMENT_RELATION)
;+		(cardinality 0 1)
;+		(inverse-slot control_to_element_assessments)
		(create-accessor read-write))
	(multislot target_business_roles
;+		(comment "Captures the Business Roles that are the expected users of the Application Provider's implementation of the Application Service")
		(type INSTANCE)
;+		(allowed-classes Business_Role)
		(create-accessor read-write))
	(multislot from_earelation_elements
;+		(comment "The relationships that are tied to this architecture element")
		(type INSTANCE)
;+		(allowed-classes)
;+		(inverse-slot FROM)
		(create-accessor read-write))
	(single-slot idea_to_element_ea_element
;+		(comment "The EA element that is impacted by the Idea")
		(type INSTANCE)
;+		(allowed-classes EA_Relation EA_Class)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot report_menu_group_label
;+		(comment "Defines the label that should be displayed for the report menu group")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot risk_related_application
;+		(comment "The set of application elements that are related to the risk")
		(type INSTANCE)
;+		(allowed-classes Application_Layer)
		(create-accessor read-write))
	(single-slot software_component_architecture_layer
;+		(comment "Defines the logical Software Architecture Layer in which the Software Component should be placed")
		(type INSTANCE)
;+		(allowed-classes Software_Architecture_Layer)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3Arelation_in_business_model_architecture
;+		(comment "The Business Model Architecture in which this dependency is defined")
		(type INSTANCE)
;+		(allowed-classes Business_Model_Architecture)
;+		(cardinality 1 1)
;+		(inverse-slot business_model_architecture_dependencies)
		(create-accessor read-write))
	(single-slot ea_reference_auto_create_schema_for_class
;+		(comment "The meta-class for whoich this ea regference auto cretae schema is defined")
		(type INSTANCE)
;+		(allowed-classes %3AESSENTIAL-CLASS)
;+		(cardinality 0 1)
;+		(inverse-slot system_ea_reference_auto_create_schema)
		(create-accessor read-write))
	(multislot contained_technology_component_dependencies
;+		(comment "Model dependency between Technology Components in a Technology Component Architecture.\nThis models Components consuming the Functions provided by other Components. To model a Technology Component that has no dependencies from other components in the architecture create the FROM node of the relationship arc but omit the TO node. Optionally, the TECHNOLOGY PROTOCOL that is used to consume a Technology Function can be recorded.")
		(type INSTANCE)
;+		(allowed-classes)
		(create-accessor read-write))
	(single-slot supplier_technology_product
;+		(comment "The supplier of a Technology Product")
		(type INSTANCE)
;+		(allowed-classes Supplier)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot time_month
;+		(comment "Slot to manage the month 'value' of a Time instance")
		(type SYMBOL)
		(allowed-values 1 2 3 4 5 6 7 8 9 10 11 12)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot is_realised_by_roles
;+		(comment "The set of Business Roles that realise a Business Role Type.")
		(type INSTANCE)
;+		(allowed-classes Business_Role)
;+		(inverse-slot is_business_role_type)
		(create-accessor read-write))
	(multislot as_contained_in_roadmaps
;+		(comment "The Roadmaps that contain the Architecture State")
		(type INSTANCE)
;+		(allowed-classes Roadmap)
;+		(inverse-slot roadmap_architecture_states)
		(create-accessor read-write))
	(single-slot quality_objective_type
;+		(comment "Defines the objective for this Service Quality in terms of the values that are 'good'. e.g. Should the values of a Service Quality be maximised or minimised.")
		(type INSTANCE)
;+		(allowed-classes Service_Quality_Objective)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot act_to_role_to_role
;+		(comment "The Role that an actor is playing to do the process")
		(type INSTANCE)
;+		(allowed-classes Business_Role)
;+		(cardinality 1 1)
;+		(inverse-slot bus_role_played_by_actor)
		(create-accessor read-write))
	(single-slot dra_is_nullable
;+		(comment "Defines whether NULL is an allowed value for the Data Representation Attribute")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot lang_native_name
;+		(comment "The name of the language as written natively")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot usage_of_business_event_in_application_service
;+		(comment "Slot to define which Business Event is being used in an application service architecture usage.")
		(type INSTANCE)
;+		(allowed-classes Business_Event)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot usage_of_conceptual_business_event
;+		(comment "Slot to define which Conceptual Business Event is being used in a Conceptual Business Event usage.")
		(type INSTANCE)
;+		(allowed-classes Conceptual_Business_Event)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot cjp_emotions
;+		(comment "The emotional states of the Persona during the Customer Journey Phase")
		(type INSTANCE)
;+		(allowed-classes CUST_JOURNEY_PHASE_TO_EMOTION_RELATION)
;+		(inverse-slot cust_journey_phase_to_emotion_from_cust_journey_phase)
		(create-accessor read-write))
	(single-slot sqcm_service_quality
;+		(comment "The Service Quality for which a contextuual meaning is being defined")
		(type INSTANCE)
;+		(allowed-classes Service_Quality)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot application_service_status
;+		(comment "DEPRECATED")
		(type SYMBOL)
		(allowed-values Online For_Retirement)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot enumeration_sequence_number
;+		(comment "The sequence number for the enumeration value across all values")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot inf_principle_bus_implications
;+		(comment "Commentary describing the business implications of the information principle")
		(type STRING)
		(create-accessor read-write))
	(multislot supports_application_objectives
;+		(comment "")
		(type INSTANCE)
;+		(allowed-classes Application_Architecture_Objective)
;+		(inverse-slot supporting_application_principles)
		(create-accessor read-write))
	(single-slot indvact_reportsto_indvact_from_actor
;+		(comment "The subordinate Indivual Actor")
		(type INSTANCE)
;+		(allowed-classes Individual_Actor)
;+		(cardinality 1 1)
;+		(inverse-slot indvactor_managers)
		(create-accessor read-write))
	(multislot deployments_of_application_provider
;+		(comment "Slot holding the set of Application Deployments of an Application Provider")
		(type INSTANCE)
;+		(allowed-classes Application_Deployment)
;+		(inverse-slot application_provider_deployed)
		(create-accessor read-write))
	(single-slot defines_business_process
;+		(comment "")
		(type INSTANCE)
;+		(allowed-classes Business_Process)
;+		(cardinality 0 1)
;+		(inverse-slot defining_business_process_flow)
		(create-accessor read-write))
	(single-slot sal_skill
;+		(comment "The skill being defined at a specified level")
		(type INSTANCE)
;+		(allowed-classes Skill)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot indvactor_managers
;+		(comment "Captures the managers of this individual actor")
		(type INSTANCE)
;+		(allowed-classes ACTOR_REPORTSTO_ACTOR_RELATION)
;+		(inverse-slot indvact_reportsto_indvact_from_actor)
		(create-accessor read-write))
	(multislot issue_impact
;+		(comment "The relative impact of the issue")
		(type INSTANCE)
;+		(allowed-classes Requirement_Impact Service_Quality)
		(create-accessor read-write))
	(multislot doa_represented_by_attributes
;+		(comment "The set of Data Representation Attributes that are representations of an Data Object Attribute")
		(type INSTANCE)
;+		(allowed-classes Data_Representation_Attribute)
;+		(inverse-slot implemented_data_object_attribute)
		(create-accessor read-write))
	(multislot mf_managed_technology_elements
;+		(comment "Defines the scope of technology elements that are managed by this framework")
		(type INSTANCE)
;+		(allowed-classes Technology_Layer)
		(create-accessor read-write))
	(multislot tps_standard_usage
;+		(comment "Defines the types of application service for which his technology standard should be applied")
		(type INSTANCE)
;+		(allowed-classes Application_Service)
		(create-accessor read-write))
	(multislot occurs_after_business_tasks
;+		(comment "The business tasks that take place before this business task in a particular Business Activity. TO BE COMPLETED. NEEDS A RELATION CLASS.")
		(type STRING)
		(default "TO BE COMPLETED")
		(create-accessor read-write))
	(single-slot bmtu_used_role
;+		(comment "The conceptual Business Role Type or logical Business Role that is being used in a Business Model Architecture")
		(type INSTANCE)
;+		(allowed-classes Business_Role Business_Role_Type)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot data_obj_required_by_apps
;+		(comment "The Applications that requires this Data Object to deliver their functionality")
		(type INSTANCE)
;+		(allowed-classes APP_PRO_TO_DATAOBJ_REQ_RELATION)
;+		(inverse-slot app_pro_to_dataobj_req_to_dataobj)
		(create-accessor read-write))
	(single-slot app_pro_creates_data_rep
;+		(comment "Determines whether the Application Provider creates instances of the Data Representation")
		(type SYMBOL)
		(allowed-values Yes No Unknown)
		(default Unknown)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot contained_in_programme
;+		(comment "the programme that this project is part of")
		(type INSTANCE)
;+		(allowed-classes Programme)
;+		(cardinality 0 1)
;+		(inverse-slot projects_for_programme)
		(create-accessor read-write))
	(single-slot vcl_library_type
;+		(comment "The nature of the 3rd party library, e.g. Javascript, CSS")
		(type INSTANCE)
;+		(allowed-classes Viewer_Code_Library_Type)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot implements_application_function
;+		(comment "The Application Function(s) that is being implemented.")
		(type INSTANCE)
;+		(allowed-classes Application_Function)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot service_quality_value_uom
;+		(comment "The Unit Of Measure that applies to the specific Service Quality Value")
		(type INSTANCE)
;+		(allowed-classes Unit_Of_Measure)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot physical_data_product_type_scope
;+		(comment "Describes the logical product scope of the physical  data in terms of one or more Product Types")
		(type INSTANCE)
;+		(allowed-classes Product_Type)
		(create-accessor read-write))
	(multislot lifecycle_model_for_element
;+		(comment "The Lifecycle Model of the element in focus.")
		(type INSTANCE)
;+		(allowed-classes Lifecycle_Model)
;+		(inverse-slot lifecycle_model_subject)
		(create-accessor read-write))
	(multislot static_product_type_architecture_elements
;+		(comment "The usages of Product Types that are contained in this dependency model")
		(type INSTANCE)
;+		(allowed-classes Static_Product_Type_Architecture_Type)
;+		(inverse-slot ptu_used_in_static_product_type_architecture)
		(create-accessor read-write))
	(single-slot parent_data_object_standard_spec
;+		(comment "The Data Object Standard Specification that is the parent of this specification")
		(type INSTANCE)
;+		(allowed-classes Data_Object_Standard_Specification)
;+		(cardinality 0 1)
;+		(inverse-slot supporting_doa_standard_specs)
		(create-accessor read-write))
	(multislot pwt_category_colour_scheme
;+		(comment "Defines a sequence of colours to be used when styling widgets with categorised values (e.g. pie chart)")
		(type INSTANCE)
;+		(allowed-classes Widget_Theme_Colour)
		(cardinality 1 ?VARIABLE)
;+		(inverse-slot pwtc_theme)
		(create-accessor read-write))
	(multislot busprocttype_to_busprocfam_standard_prodtype_scope
;+		(comment "The product type scope for which the Business Process Type is a standard for the Business Process Family")
		(type INSTANCE)
;+		(allowed-classes Product_Type)
		(create-accessor read-write))
	(single-slot used_in_roadmap_model
;+		(comment "Slot holding the RoadMap Model in which this element is used.")
		(type INSTANCE)
;+		(allowed-classes Roadmap_Model)
;+		(cardinality 1 1)
;+		(inverse-slot contained_roadmap_model_elements)
		(create-accessor read-write))
	(multislot objective_supports_objective
;+		(comment "Slot to manage the set of objectives that are supported by an objective. Applies to Business Objectives, Application Architecture Objectives, Information Architecture Objectives and Technology Architecture Objectives.")
		(type INSTANCE)
;+		(allowed-classes Application_Architecture_Objective Business_Objective Information_Architecture_Objective Technology_Architecture_Objective)
;+		(inverse-slot objective_supported_by_objective)
		(create-accessor read-write))
	(single-slot cost_category
;+		(comment "The category that defines the nature of the overall cost, e.g. IT, Implementation")
		(type INSTANCE)
;+		(allowed-classes Cost_Category)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot business_tasks_used
;+		(comment "The set of business tasks that are used to define the steps of a Business Activity")
		(type INSTANCE)
;+		(allowed-classes Business_Activity_Flow_Type)
;+		(inverse-slot used_in_business_activity_flow)
		(create-accessor read-write))
	(multislot strategic_trend_implications
;+		(comment "The implications that may result from the strategic trend")
		(type INSTANCE)
;+		(allowed-classes Strategic_Trend_Implication)
;+		(inverse-slot sti_implication_for_trend)
		(create-accessor read-write))
	(single-slot ca_non_operation_periods
;+		(comment "A summary of the dates between which the Control was not in operation")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot application_reference_implementation_dependencies
;+		(comment "The dependencies that exist between elements used in the Application Reference Implemenation Model")
		(type INSTANCE)
;+		(allowed-classes %3AApplication-Ref-Impl-Model-Relation)
;+		(inverse-slot ari_relation_in_application_reference_implementation_model)
		(create-accessor read-write))
	(single-slot pm_overall_score
;+		(comment "Supports the capture of an overall score for the performance measure")
		(type FLOAT)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot menu_item_label
;+		(comment "Defines the label that should be displayed for the menu item")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot decision_context
;+		(comment "The context in which the decision was made, e.g. a Project, a Strategic Plan, a Principle")
		(type INSTANCE)
;+		(allowed-classes EA_Class EA_Relation)
		(create-accessor read-write))
	(single-slot is_member_of_business_role
;+		(comment "Business Role (e.g. a team or group) that a Business Role is a member of.")
		(type INSTANCE)
;+		(allowed-classes Business_Role)
;+		(cardinality 0 1)
;+		(inverse-slot contains_business_roles)
		(create-accessor read-write))
	(multislot mft_managed_class_scope
;+		(comment "Defines the meta-classes of the elements that are in scope for this framework type")
		(type INSTANCE)
;+		(allowed-classes %3AESSENTIAL-CLASS)
		(create-accessor read-write))
	(single-slot app_to_bus_to_busproc
;+		(comment "The Business Process that is supported by an Application (Group)")
		(type INSTANCE)
;+		(allowed-classes Business_Process_Type)
;+		(cardinality 1 1)
;+		(inverse-slot bp_supported_by_app_app)
		(create-accessor read-write))
	(multislot phys_bp_supported_by_app_pro
;+		(comment "Specifies an Application Provider that is supporting the Physical Business Process")
		(type INSTANCE)
;+		(allowed-classes APP_PRO_TO_PHYS_BUS_RELATION)
;+		(inverse-slot apppro_to_physbus_to_busproc)
		(create-accessor read-write))
	(single-slot data_object_attribute_standard_definition
;+		(comment "")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot bef_label
;+		(comment "A short label for the business environment factor")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot objective_supported_by_technology_principles
;+		(comment "")
		(type INSTANCE)
;+		(allowed-classes Technology_Architecture_Principle)
;+		(inverse-slot supports_technology_objectives)
		(create-accessor read-write))
	(multislot inforep_derived_from
;+		(comment "The source Data Representations or Information Representations from which an Information Representation is derived or gets source content. e.g. the cubes from which a report gathers source content.")
		(type INSTANCE)
;+		(allowed-classes Data_Representation Information_Representation)
		(create-accessor read-write))
	(multislot contained_project_dependency_components
		(type INSTANCE)
;+		(allowed-classes)
		(create-accessor read-write))
	(single-slot dmp_escalation_policy
;+		(comment "Describes the Data Management Responsibility to which thisresponsibility escalates issues or conflicts")
		(type INSTANCE)
;+		(allowed-classes Info_Data_Management_Policy)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot implements_business_process
;+		(comment "The Business Process that this Physical Process is an instance of.")
		(type INSTANCE)
;+		(allowed-classes Business_Process)
;+		(cardinality 1 1)
;+		(inverse-slot implemented_by_physical_business_processes)
		(create-accessor read-write))
	(single-slot rdu_regulation
;+		(comment "The regulation under which usage of the information or data elements are controlled")
		(type INSTANCE)
;+		(allowed-classes Regulation)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3ATECHNOLOGY_PROTOCOL
;+		(comment "The technology protocol that is used to operate this relationship between components. This slot is used from subclasses of the DIRECTED_BINARY relation.")
		(type INSTANCE)
;+		(allowed-classes Technology_Protocol_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot %3Arelation_commentary
;+		(comment "Multi-language comments or labels associated with the graphical relation")
		(type INSTANCE)
;+		(allowed-classes Commentary)
		(create-accessor read-write))
	(multislot cjp_supporting_phys_processes
;+		(comment "Physical processes or activities that are performed by the enterprise in support of the Customer Journey Phase")
		(type INSTANCE)
;+		(allowed-classes Physical_Process_Type)
		(create-accessor read-write))
	(single-slot %3Acontained_in_static_product_architecture
;+		(comment "The Static Product Architecture within which this dependency relationship is contained")
		(type INSTANCE)
;+		(allowed-classes Static_Product_Architecture)
;+		(cardinality 1 1)
;+		(inverse-slot static_product_dependencies)
		(create-accessor read-write))
	(multislot referenced_ea_instance
;+		(comment "Inverse slot maintaining the relationship back to the EA_Class instance that has the external reference link.")
		(type INSTANCE)
;+		(allowed-classes EA_Class)
;+		(inverse-slot external_reference_links)
		(create-accessor read-write))
	(multislot report_classification_contained_reports
;+		(comment "The set of reports associated with this report classification")
		(type INSTANCE)
;+		(allowed-classes Report)
		(create-accessor read-write))
	(single-slot relation_description
;+		(comment "The description of the EAS_Relationship instance.")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot idea_to_element_idea
;+		(comment "The Idea that is proposing a change to the EA element")
		(type INSTANCE)
;+		(allowed-classes Idea_Option)
;+		(cardinality 1 1)
;+		(inverse-slot idea_proposed_changes)
		(create-accessor read-write))
	(single-slot name_
;+		(comment "A descriptive name of the element in the model.\\n(NOTE: A unique, internal reference is managed separately by the system.)")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot related_information_concept
;+		(comment "Slot to hold the related Information Concepts that a Conceptual Business Event is associated with")
		(type INSTANCE)
;+		(allowed-classes Information_Concept)
		(create-accessor read-write))
	(multislot role_requires_expertise
;+		(comment "The subject matter expertise required by the role")
		(type INSTANCE)
;+		(allowed-classes Subject_Matter_Expertise)
		(create-accessor read-write))
	(multislot represented_by_attribute
;+		(comment "Slot containing the set of Information Representation Attributes that are representations of an Information View Attribute.")
		(type INSTANCE)
;+		(allowed-classes Information_Representation_Attribute)
;+		(inverse-slot is_a_representation_of_attribute)
		(create-accessor read-write))
	(single-slot system_author_id
;+		(comment "Used to identify the creator of the element")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot bus_logical_contained_in_arch_states
;+		(comment "The architecture states that contain this logical business element")
		(type INSTANCE)
;+		(allowed-classes Architecture_State)
;+		(inverse-slot arch_state_business_logical)
		(create-accessor read-write))
	(multislot controlled_elements
		(type INSTANCE)
;+		(allowed-classes CONTROL_TO_ELEMENT_RELATION)
;+		(inverse-slot control_to_element_control)
		(create-accessor read-write))
	(single-slot exception_to_policy
;+		(comment "Relationship to the policy for which this is an exception.")
		(type INSTANCE)
;+		(allowed-classes Policy)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot rc_weighting
;+		(comment "The relative weighting (from 1 - 10) for the criterion")
		(type SYMBOL)
		(allowed-values 1 2 3 4 5 6 7 8 9 10)
		(default 10)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot apr_maximum_number_of_users
;+		(comment "Defines the maximum number of users for the application when provide the service")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot enumeration_icon
;+		(comment "String containing the path to an image that is used in Views for an enumeration value. Contributed by Kevin Campbell 6/10/2010")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot exception_expiry_date_iso_8601
;+		(comment "The date on which this exception expires in ISO 8601 format (yyyy-mm-dd)")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ca_remediation_actions
;+		(comment "A summary of the recommended actions needed to remediate against the assessment findings")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot %3Alifecycle_strategic_plans
;+		(comment "The set of Strategic Plans that are defined in response to the change of Lifecycle Status.")
		(type INSTANCE)
;+		(allowed-classes Strategic_Plan)
		(create-accessor read-write))
	(single-slot technology_provider_lifecycle_status
;+		(comment "The internal usage/adoption status of the Technology Provider. For Technology Products this should be used to reflect the enterprise's view on the product lifecycle, e.g. Pilot, Production, Sunset etc.")
		(type INSTANCE)
;+		(allowed-classes Lifecycle_Status)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot technology_component_usages
;+		(comment "The Technology Components Usages that used in the architecture")
		(type INSTANCE)
;+		(allowed-classes Technology_Component_Architecture_Type)
;+		(inverse-slot inverse_of_technology_component_usages)
		(create-accessor read-write))
	(multislot apr_has_standard_specs
;+		(comment "Defines the standard specifications associated with this service when provided by the Application")
		(type INSTANCE)
;+		(allowed-classes Application_Provider_Standard_Specification)
;+		(inverse-slot aps_standard_app_provider_role)
		(create-accessor read-write))
	(single-slot TO
;+		(comment "Slot that holds a reference to the EAS_Class at the TO end of the relationship.")
		(type INSTANCE)
;+		(allowed-classes EA_Class)
;+		(cardinality 0 1)
;+		(inverse-slot to_earelation_elements)
		(create-accessor read-write))
	(multislot has_information_representations
;+		(comment "The information representations that instantiate this information view")
		(type INSTANCE)
;+		(allowed-classes Information_Representation)
;+		(inverse-slot implements_information_views)
		(create-accessor read-write))
	(multislot bmp_responsible_roles
;+		(comment "The roles that are responsible for adherence to this policy")
		(type INSTANCE)
;+		(allowed-classes Business_Role)
		(create-accessor read-write))
	(single-slot control_weighting
;+		(comment "A relative weighting score that applies to the Control")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot static_architecture_of_app_svc
;+		(comment "The Application Service that is defined by a Static Application Service Architecture")
		(type INSTANCE)
;+		(allowed-classes Application_Service)
;+		(cardinality 1 1)
;+		(inverse-slot app_service_static_model_architecture)
		(create-accessor read-write))
	(single-slot erl_date
;+		(comment "Captures an instance of Time to associate a date with the externally referenced content")
		(type INSTANCE)
;+		(allowed-classes Time)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot budget_quarter_iso_8601
;+		(comment "The start date for a quarter in ISO 8601 format (yyyy-mm-dd) for which a quarterly budgetary element is defined")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot vsg_exit_events
;+		(comment "Defines the business events that occur as a result of the value stage")
		(type INSTANCE)
;+		(allowed-classes Business_Event)
		(create-accessor read-write))
	(single-slot bm_business_domain
;+		(comment "The Business Domain to which this Business Model belongs")
		(type INSTANCE)
;+		(allowed-classes Business_Domain)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot cjp_channel
;+		(comment "The channel through which the persona associated with the parent Customer Journey engages with the enterprise for this Customer Journey Phase")
		(type INSTANCE)
;+		(allowed-classes CUST_JOURNEY_PHASE_TO_CHANNEL_RELATION)
;+		(cardinality 0 1)
;+		(inverse-slot cust_journey_phase_to_channel_from_cust_journey_phase)
		(create-accessor read-write))
	(multislot technology_node_attributes
;+		(comment "The set of Attribute Values that a Technology Node has")
		(type INSTANCE)
;+		(allowed-classes Attribute_Value)
		(create-accessor read-write))
	(single-slot pm_measure_date
;+		(comment "The date when performance was measured")
		(type INSTANCE)
;+		(allowed-classes Time)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot service_quality_correlations
;+		(comment "The quantitative correlations between this element and  Service Qualities")
		(type INSTANCE)
;+		(allowed-classes Service_Quality_Correlation_Dependency)
;+		(inverse-slot sq_correlation_from_element)
		(create-accessor read-write))
	(multislot data_standard_reference_implementations
;+		(comment "Reference implementations for how the Data Standard should be applied")
		(type INSTANCE)
;+		(allowed-classes Application_Provider)
		(create-accessor read-write))
	(single-slot external_instance_reference
;+		(comment "Slot to specify the instance ID of an element in an external [to Essential] repository")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot external_reference_url
;+		(comment "Slot to hold a URL that identifies an external [to Essential Architecture Manager] resource.")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot portal_is_enabled
;+		(comment "Defines whether the portal should be made available in Essential Viewer")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default TRUE)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot deployed_technology_instances
;+		(comment "Relation to the physical instances of this use of the specified Technology Provider")
		(type INSTANCE)
;+		(allowed-classes Technology_Instance)
;+		(inverse-slot instance_of_logical_tech_provider)
		(create-accessor read-write))
	(multislot mft_managed_information_scope
;+		(comment "Defines the scope of information/data elements that are controlled by this type of management framework")
		(type INSTANCE)
;+		(allowed-classes Information_Relationship Information_Layer)
		(create-accessor read-write))
	(multislot contained_information_views
;+		(comment "The sub Information Views from which an Information View can be composed")
		(type INSTANCE)
;+		(allowed-classes Information_View)
		(create-accessor read-write))
	(multislot obligation_applies_to
;+		(comment "The elements that this obligation specifically applies to")
		(type INSTANCE)
;+		(allowed-classes OBLIGATION_COMPONENT_RELATION)
;+		(inverse-slot obligation_component_from_obligation)
		(create-accessor read-write))
	(multislot related_information_concepts
;+		(comment "Information Concepts to which an Information Concept is related to.")
		(type INSTANCE)
;+		(allowed-classes Information_Concept)
;+		(inverse-slot related_from_information_concepts)
		(create-accessor read-write))
	(single-slot project_activity_label
;+		(comment "")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot service_quality_for_classes
;+		(comment "")
		(type INSTANCE)
;+		(allowed-classes %3AESSENTIAL-CLASS)
		(create-accessor read-write))
	(multislot strategic_plan_supports_objective
;+		(comment "Slot to manage the set of Objectives that are supported by a Strategic Plan")
		(type INSTANCE)
;+		(allowed-classes Information_Architecture_Objective Technology_Architecture_Objective Application_Architecture_Objective Business_Objective)
;+		(inverse-slot objective_supported_by_strategic_plan)
		(create-accessor read-write))
	(single-slot from_data_standard_relation
;+		(comment "The Data Standard from which the relationship starts")
		(type INSTANCE)
;+		(allowed-classes Info_Data_Standard)
;+		(cardinality 1 1)
;+		(inverse-slot data_standard_relationships)
		(create-accessor read-write))
	(multislot editor_component_for_specific_properties
;+		(comment "Any API resource properties that this Editor Component specifically supports")
		(type STRING)
		(create-accessor read-write))
	(single-slot status
;+		(comment "DEPRECATED")
		(type SYMBOL)
		(allowed-values Planned Active Complete Suspended)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot %3Aptu_to_ptu_info_views
;+		(comment "The information view or information view attributes that are required to make use of a dependent product type")
		(type INSTANCE)
;+		(allowed-classes Information_View_Type)
		(create-accessor read-write))
	(multislot td_motivates_objectives
;+		(comment "The set of objectives that are motivated by the driver")
		(type INSTANCE)
;+		(allowed-classes Technology_Architecture_Objective)
;+		(inverse-slot tao_motivated_by_driver)
		(create-accessor read-write))
	(multislot information_assumptions
;+		(comment "The information elements that are relevant to the assumption")
		(type INSTANCE)
;+		(allowed-classes Information_Layer)
		(create-accessor read-write))
	(multislot initiative_delivery_roadmaps
;+		(comment "The roadmap that defines the set of Strategic Plans that need to be completed to deliver the requirements of the Initiative")
		(type INSTANCE)
;+		(allowed-classes Roadmap)
		(create-accessor read-write))
	(multislot technology_node_outbound_connections
;+		(comment "Defines the outbound connections from this Technology Node to other Technology Nodes")
		(type INSTANCE)
;+		(allowed-classes TECH_NODE_TO_TECH_NODE_CONNECTION)
;+		(inverse-slot tech_node_to_tech_node_from_tech_node)
		(create-accessor read-write))
	(multislot inforep_used_by_app_pro
;+		(comment "The Application Providers that use this Information Representation")
		(type INSTANCE)
;+		(allowed-classes APP_PRO_TO_INFOREP_RELATION)
;+		(inverse-slot app_pro_to_inforep_to_inforep)
		(create-accessor read-write))
	(single-slot bmtu_used_technology
;+		(comment "The Technology Capability or Component that is being used in a Business Model Architecture")
		(type INSTANCE)
;+		(allowed-classes Technology_Capability Technology_Component)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot assessment_control
;+		(comment "DEPRECATED: Relationship to the Control against which the elements are being assessed\\n\\nSUPERCEDED BY: control_assessed_element")
		(type INSTANCE)
;+		(allowed-classes Control)
;+		(cardinality 0 1)
;+		(inverse-slot control_assessments)
		(create-accessor read-write))
	(multislot actor_based_at_site
;+		(comment "The site /primary sites at which the Actor is based. Note that this is in contrast to where the Actor plays Roles to perform Processes.")
		(type INSTANCE)
;+		(allowed-classes Site)
		(create-accessor read-write))
	(multislot ea_security_clearance_read
;+		(comment "The set of security clearance levels that are assigned to a system user for read access")
		(type INSTANCE)
;+		(allowed-classes EA_Content_Classification)
		(create-accessor read-write))
	(single-slot implemented_data_object_attribute
;+		(comment "The Data Object Attribute that this Data Representation Attribute implements")
		(type INSTANCE)
;+		(allowed-classes Data_Object_Attribute)
;+		(cardinality 0 1)
;+		(inverse-slot doa_represented_by_attributes)
		(create-accessor read-write))
	(multislot bmc_channel_scope
;+		(comment "The Channels or Channel Types that are supported by the Business Model Configuration")
		(type INSTANCE)
;+		(allowed-classes Channel)
		(create-accessor read-write))
	(multislot bmc_org_scope
;+		(comment "The Organisations that are supported by the Business Model Configuration")
		(type INSTANCE)
;+		(allowed-classes Group_Actor)
		(create-accessor read-write))
	(single-slot editor_section_label
;+		(comment "Defines the displayed label for the Editor Section")
		(type STRING)
		(default "Main")
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot task_information_passed
;+		(comment "The information (Information View) that is passed to the next task from the preceeding Business Task")
		(type INSTANCE)
;+		(allowed-classes Information_View_Usage)
		(create-accessor read-write))
	(multislot sd_business_elements
;+		(comment "The set of business elements that are part of the Security Deployment")
		(type INSTANCE)
;+		(allowed-classes Physical_Process_Type Actor)
		(create-accessor read-write))
	(multislot supplier_external_contacts
;+		(comment "The people or groups that act as contacts for the Supplier")
		(type INSTANCE)
;+		(allowed-classes ACTOR_TO_ROLE_RELATION)
		(create-accessor read-write))
	(single-slot system_ea_reference_instance_counter
;+		(comment "A unique number that is used in derived ea references where this instance forms part of teh relationship path")
		(type INTEGER)
		(default 0)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot information_view_operated_on_by_app_services
;+		(comment "The Application Services that process this Information View")
		(type INSTANCE)
;+		(allowed-classes APP_SVC_TO_INFOVIEW_RELATION)
;+		(inverse-slot app_svc_to_infoview_to_infoview)
		(create-accessor read-write))
	(single-slot change_for_cost_component_type
;+		(comment "The type of cost for which the change is being defined")
		(type INSTANCE)
;+		(allowed-classes Cost_Component_Type)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot cm_date
;+		(comment "The date for the milestone")
		(type INSTANCE)
;+		(allowed-classes Time)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot rr_required_utilisation
;+		(comment "The utilisation level required of the given resource )in FTEs)")
		(type FLOAT)
		(range 0.0 %3FVARIABLE)
		(default 1.0)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot used_in_business_model_architecture
;+		(comment "The Business Model Architecture in which the conceptual element is being used")
		(type INSTANCE)
;+		(allowed-classes Business_Model_Architecture)
;+		(cardinality 1 1)
;+		(inverse-slot business_model_architecture_elements)
		(create-accessor read-write))
	(single-slot gb_group_actor
;+		(comment "The Group Actor representing the Governance Body’s relationships to business processes, roles")
		(type INSTANCE)
;+		(allowed-classes Group_Actor)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot pm_target_measure_for_element
;+		(comment "The element for which this Performance Measure is defined as a target")
		(type INSTANCE)
;+		(allowed-classes EA_Class EA_Relation %3AEA_Graph_Relation)
;+		(cardinality 0 1)
;+		(inverse-slot target_performance_measures)
		(create-accessor read-write))
	(single-slot budget_allocated_to_element
;+		(comment "The element against which this Budget has been allocated")
		(type INSTANCE)
;+		(allowed-classes EA_Class EA_Relation %3AEA_Graph_Relation)
;+		(cardinality 0 1)
;+		(inverse-slot budgets_for_element)
		(create-accessor read-write))
	(single-slot scale_x
;+		(comment "The x-dimension scale attribute of an object in a graphical model")
		(type FLOAT)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot scale_y
;+		(comment "The y-dimension scale attribute of an object in a graphical model")
		(type FLOAT)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot business_model_architecture_elements
;+		(comment "The usages of conceptual enterprise elements that are contained in this business model architecture")
		(type INSTANCE)
;+		(allowed-classes Business_Model_Architecture_Types)
;+		(inverse-slot used_in_business_model_architecture)
		(create-accessor read-write))
	(multislot contained_technology_instance_instances
;+		(comment "The set of Technology Instances that are in the Technology Deployment Group.")
		(type INSTANCE)
;+		(allowed-classes Technology_Instance)
		(create-accessor read-write))
	(single-slot tps_standard_tech_provider_role
;+		(comment "The technology provider role that has been defined as a standard")
		(type INSTANCE)
;+		(allowed-classes Technology_Provider_Role)
;+		(cardinality 0 1)
;+		(inverse-slot tpr_has_standard_specs)
		(create-accessor read-write))
	(multislot related_technology_elements
;+		(comment "DEPRECATED: Technology EA elements that are related to this issue\\n\\nREPLACED BY: sr_requirement_for_elements")
		(type INSTANCE)
;+		(allowed-classes Technology_Capability Technology_Component Technology_Provider Technology_Instance)
;+		(inverse-slot known_technology_issues)
		(create-accessor read-write))
	(single-slot sqvms_z_value
;+		(comment "The Service Quality Value defined on the Z-Axis of the parent map")
		(type INSTANCE)
;+		(allowed-classes Service_Quality_Value)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot application_function_input_views
;+		(comment "Specify the Information Views that are being passed as inputs to this function.")
		(type INSTANCE)
;+		(allowed-classes Information_View)
		(create-accessor read-write))
	(single-slot business_process_supplier
;+		(comment "The Supplier of the business process. Used to identify outsourced business processes.")
		(type INSTANCE)
;+		(allowed-classes Supplier)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot process_steps_used
;+		(comment "The set of Business Processes and Business Activities that are used to define the steps in a Business Process.")
		(type INSTANCE)
;+		(allowed-classes Business_Process_Flow_Type)
;+		(inverse-slot used_in_process_flow)
		(create-accessor read-write))
	(multislot implemented_by_business_events
;+		(comment "Slot defining the set of Business Events that implement a Conceptual Business Event.")
		(type INSTANCE)
;+		(allowed-classes Business_Event)
;+		(inverse-slot type_of_event)
		(create-accessor read-write))
	(single-slot is_root
;+		(comment "Defines whether this element is the root element of a hierarchy")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default FALSE)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot system_cq_review_policy_instance_table_body_template_path
;+		(comment "The path to the content template that should be used to generate rows in the review dashboard instance table")
		(type STRING)
		(default "editors/enterprise/content-governance-dashboard/default-content-reviewer-instance-table-body-template.html")
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot actor_to_expertise_to_expertise
;+		(comment "The subject matter expertise that the actor possesses")
		(type INSTANCE)
;+		(allowed-classes Subject_Matter_Expertise)
;+		(cardinality 1 1)
;+		(inverse-slot sme_actors_with_expertise)
		(create-accessor read-write))
	(single-slot cj_persona
;+		(comment "The persona that engages with the enterprise for this Customer Journey")
		(type INSTANCE)
;+		(allowed-classes Persona)
;+		(cardinality 1 1)
;+		(inverse-slot persona_customer_journeys)
		(create-accessor read-write))
	(single-slot portal_sequence
;+		(comment "Describes the order in which the Portals should appear when more than one is available")
		(type INTEGER)
		(default 0)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot system_content_quality_review_completed_by_actor
;+		(comment "The actor that completed this Content Quality Review")
		(type INSTANCE)
;+		(allowed-classes Individual_Actor ACTOR_TO_ROLE_RELATION)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot realisation_of_technology_capability
;+		(comment "")
		(type INSTANCE)
;+		(allowed-classes Technology_Capability)
;+		(inverse-slot realised_by_technology_components)
		(create-accessor read-write))
	(single-slot application_function_impl_architecture
;+		(comment "Architecture defining the dynamic view of how the Function Implementation behaves when invoked.")
		(type INSTANCE)
;+		(allowed-classes Dynamic_Application_Provider_Architecture)
;+		(cardinality 0 1)
;+		(inverse-slot dynamic_architecture_of_application_function_impl)
		(create-accessor read-write))
	(single-slot known_technology_issues
		(type STRING)
;+		(cardinality 0 1)
;+		(inverse-slot related_technology_elements)
		(create-accessor read-write))
	(single-slot system_cq_review_policy_manager_instance_api_params
;+		(comment "The URL paramteres to be used when requesting to populate the Content Manager Dashboards for this class")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot element_style_label
;+		(comment "A label to be associated with the element")
		(type INSTANCE)
;+		(allowed-classes Commentary)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot meta_model_version_id
;+		(comment "The version identifier, typically a numerical string, that defines the version of the meta model.")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot technology_capability_function_types_offered
		(type INSTANCE)
;+		(allowed-classes Technology_Function_Type)
		(create-accessor read-write))
	(single-slot element_style_icon
;+		(comment "The filename of the icon that should be used to represent the element")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot contained_roadmap_model_elements
;+		(comment "The set of elements that are used to define a RoadMap model.")
		(type INSTANCE)
;+		(allowed-classes Roadmap_Model_Types)
;+		(inverse-slot used_in_roadmap_model)
		(create-accessor read-write))
	(single-slot application_deployment_role
;+		(comment "Defines the role of an application deployment")
		(type INSTANCE)
;+		(allowed-classes Deployment_Role)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot control_related_application
;+		(comment "DEPRECATED: The set of application elements that are related to the control\\n\\nSUPERCEDED BY: controlled_elements")
		(type INSTANCE)
;+		(allowed-classes Application_Layer)
		(create-accessor read-write))
	(single-slot rc_evaluation_factor
;+		(comment "Describes the factor that is being evaluated")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot ccr_currency
;+		(comment "The currency in which the cost for the EA element under contract is to be paid")
		(type INSTANCE)
;+		(allowed-classes Currency)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot belongs_to_business_domain_information
;+		(comment "The business domain to which an Information Concept belongs")
		(type INSTANCE)
;+		(allowed-classes Business_Domain)
;+		(cardinality 0 1)
;+		(inverse-slot business_domain_contains_information_concepts)
		(create-accessor read-write))
	(multislot %3ATECHNOLOGY_PRODUCT-PROTOCOL
		(type INSTANCE)
;+		(allowed-classes Technology_Protocol_Usage)
		(create-accessor read-write))
	(single-slot data_category
;+		(comment "Slot to capture the data category that a Data Subject belongs to, e.g. reference, master, transactional data")
		(type INSTANCE)
;+		(allowed-classes Data_Category)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot sqvms_y_value
;+		(comment "The Service Quality Value defined on the Y-Axis of the parent map")
		(type INSTANCE)
;+		(allowed-classes Service_Quality_Value)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot static_usage_of_app_provider
;+		(comment "usage of an application provider in a static application provider architecture model")
		(type INSTANCE)
;+		(allowed-classes Application_Provider)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot system_content_quality_review_status
;+		(comment "The current lifecycle status of the Content Quality Review")
		(type INSTANCE)
;+		(allowed-classes SYS_CONTENT_QUALITY_REVIEW_STATUS)
		(default [store_55_Class3])
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot gm_meeting_date_iso8601
;+		(comment "The date upon which the Governance Meeting is held")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot rc_revenue_start_date_iso_8601
;+		(comment "The start date for the revenue component in ISO 8601 format (yyyy-mm-dd)")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot bus_role_played_by_actor
;+		(comment "Specifies the list of actors the play this role in processes using link class/relation")
		(type INSTANCE)
;+		(allowed-classes ACTOR_TO_ROLE_RELATION)
;+		(inverse-slot act_to_role_to_role)
		(create-accessor read-write))
	(single-slot tech_node_to_tech_node_from_tech_node
;+		(comment "The Technology Node from which the connection is established")
		(type INSTANCE)
;+		(allowed-classes Technology_Node)
;+		(cardinality 1 1)
;+		(inverse-slot technology_node_outbound_connections)
		(create-accessor read-write))
	(single-slot report_screenshot_filename
;+		(comment "Slot to define the relative URL to a screenshot image for a Report instance. Typically, this is an png or jpeg file.")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot contract_signature_date_ISO8601
;+		(comment "The date when the Contract was signed")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot contains_content_classifications
;+		(comment "Relation to the set of security classifications that are contained in the group")
		(type INSTANCE)
;+		(allowed-classes EA_Content_Classification)
;+		(inverse-slot contained_in_content_classification_group)
		(create-accessor read-write))
	(single-slot contained_in_business_capability_chain
;+		(comment "The business capability chain in which this relation occurs")
		(type INSTANCE)
;+		(allowed-classes Business_Capability_Chain)
;+		(cardinality 0 1)
;+		(inverse-slot contained_business_capability_relations)
		(create-accessor read-write))
	(multislot data_object_att_standard_specs
;+		(comment "The set of Data Object Attribute Standard Specifications associated with the Data Standard")
		(type INSTANCE)
;+		(allowed-classes Data_Object_Attribute_Standard_Specification)
;+		(inverse-slot doass_parent_data_standard)
		(create-accessor read-write))
	(single-slot editor_section_parent
;+		(comment "Defines the parent Editor of the Editor Section")
		(type INSTANCE)
;+		(allowed-classes Editor)
;+		(cardinality 1 1)
;+		(inverse-slot editor_sections)
		(create-accessor read-write))
	(multislot vsg_entrance_conditions
;+		(comment "Defines the business conditions that must be met to initiate the value stage")
		(type INSTANCE)
;+		(allowed-classes Business_Condition)
		(create-accessor read-write))
	(single-slot milestone_architecture_state
;+		(comment "Slot defining the Architecture State that is being used to define a Roadmap_Milestone.")
		(type INSTANCE)
;+		(allowed-classes Architecture_State)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot erl_date_iso_8601
;+		(comment "Captures a date in ISO 8601 format (yyyy-mm-dd) to associate with the externally referenced content")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot dra_value_max_length
;+		(comment "Defines the maximum length allowed for values of the Data Representation Attribute")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot vs_value_stages
;+		(comment "The sequence of Value Stages that are undertaken as part of this Value Stream")
		(type INSTANCE)
;+		(allowed-classes Value_Stage)
;+		(inverse-slot vsg_value_stream)
		(create-accessor read-write))
	(single-slot need_priority
;+		(comment "The priority of the need")
		(type SYMBOL)
		(allowed-values High Medium Low)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot data_object_specialisations
;+		(comment "The Data Objects that are a specialisations of this Data Object")
		(type INSTANCE)
;+		(allowed-classes Data_Object)
;+		(inverse-slot data_object_generalisations)
		(create-accessor read-write))
	(single-slot software_architecture_label
;+		(comment "The label used for an element contained within a Software Architecture model")
		(type STRING)
		(default "a Software Component")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot min_number_of_users
;+		(comment "The minimum number of users that have access to the relations application in the context of the associated business process")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot deployment_of_information_representation
;+		(comment "The App Provider to Information Representation relation  that the Information Store is a deployment of.")
		(type INSTANCE)
;+		(allowed-classes Information_Representation)
;+		(cardinality 1 1)
;+		(inverse-slot implemented_with_information_stores)
		(create-accessor read-write))
	(single-slot ptu_used_in_static_product_type_architecture
;+		(comment "The static product type architecture that contains this element")
		(type INSTANCE)
;+		(allowed-classes Static_Product_Type_Architecture)
;+		(cardinality 0 1)
;+		(inverse-slot static_product_type_architecture_elements)
		(create-accessor read-write))
	(multislot product_consumers
;+		(comment "The set of consumers of the Product")
		(type INSTANCE)
;+		(allowed-classes Actor Business_Role)
		(create-accessor read-write))
	(multislot static_product_dependencies
;+		(comment "The relations representing dependencies between Products")
		(type INSTANCE)
;+		(allowed-classes %3APROD-DEPENDS-ON-PROD)
;+		(inverse-slot %3Acontained_in_static_product_architecture)
		(create-accessor read-write))
	(multislot bpf_contains_busproctypes
;+		(comment "The business processes, activities or tasks that belong to this business process family")
		(type INSTANCE)
;+		(allowed-classes Business_Process_Type)
;+		(inverse-slot busproctype_belongs_to_busprocfamily)
		(create-accessor read-write))
	(single-slot type_for_data_attribute
;+		(comment "Slot to specify the type of a data attribute.")
		(type INSTANCE)
;+		(allowed-classes Data_Object Primitive_Data_Object)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot sc_belongs_to_classification_scheme
;+		(comment "The Security Classification Scheme to which this classification belongs")
		(type INSTANCE)
;+		(allowed-classes Security_Classification_Scheme)
;+		(cardinality 1 1)
;+		(inverse-slot cs_security_classifications)
		(create-accessor read-write))
	(multislot sr_geo_scope
;+		(comment "The geeographic regions that are considered in scope for the requirement")
		(type INSTANCE)
;+		(allowed-classes Geographic_Region)
		(create-accessor read-write))
	(single-slot strategic_plan_comments
;+		(comment "Additional [to the Description] comments that made about a Strategic Plan")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot r2psr_portal_section
;+		(comment "The portal section in which the report will be displayed")
		(type INSTANCE)
;+		(allowed-classes Portal_Section)
;+		(cardinality 1 1)
;+		(inverse-slot portal_section_reports)
		(create-accessor read-write))
	(single-slot usage_of_information_representation
;+		(comment "The Information Representation that is being used.")
		(type INSTANCE)
;+		(allowed-classes Information_Representation)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot currency_code
;+		(comment "The ISO standard code for the currency (e.g. GBP, USD, EUR)")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot activity_performed_by_actor_role
;+		(comment "The Actor, taking on a Business Role, that performs this activity")
		(type INSTANCE)
;+		(allowed-classes ACTOR_TO_ROLE_RELATION Actor)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot ss_information_elements
;+		(comment "The set of Information elements that are part of the Security Solution")
		(type INSTANCE)
;+		(allowed-classes Information_Representation_Type Data_Representation_Type)
		(create-accessor read-write))
	(single-slot process_manager
;+		(comment "DEPRECATED. USE STAKEHOLDERS SLOT. The manager responsible for the execution of the Physical Process")
		(type INSTANCE)
;+		(allowed-classes Actor)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot implementing_technology_component
;+		(comment "A Technology Component that the Technology Provider asssociated with this role is implementing")
		(type INSTANCE)
;+		(allowed-classes Technology_Component)
;+		(cardinality 0 1)
;+		(inverse-slot realised_by_technology_products)
		(create-accessor read-write))
	(single-slot system_essential_class_content_quality_review_policy
;+		(comment "The policy that defines the frequency and responsibilities for reviewing the quality of instances of the class")
		(type INSTANCE)
;+		(allowed-classes SYS_CONTENT_QUALITY_REVIEW_POLICY)
;+		(cardinality 0 1)
;+		(inverse-slot system_cq_review_policy_for_essential_class)
		(create-accessor read-write))
	(multislot exception_resolution_plan
;+		(comment "Relationship to the Strategic Plan(s) that will bring the elements related to the exception back into line with the Policy or Standard.")
		(type INSTANCE)
;+		(allowed-classes Strategic_Plan)
		(create-accessor read-write))
	(multislot contained_technology_product_dependencies
;+		(comment "Models the dependencies between Technology Products in this architecture. Technology Products consume Technology Functions that are provided by other Technology Products in this architecture. This models the Technology Product that is providing the Function and which Technology Function this is implementing.")
		(type INSTANCE)
;+		(allowed-classes)
		(create-accessor read-write))
	(single-slot control_assessment_frequency
;+		(comment "The frequency in which the Control should be assessed")
		(type INSTANCE)
;+		(allowed-classes Control_Assessment_Frequency)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot app_func_impl_reads_data_from
;+		(comment "DEPRECATED - REPLACED BY 'uses_information_representation'")
		(type INSTANCE)
;+		(allowed-classes Information_Representation)
;+		(inverse-slot data_read_by_app_func_impls)
		(create-accessor read-write))
	(single-slot sp_implements_security_capability
;+		(comment "The security capability that this Security Policy implements")
		(type INSTANCE)
;+		(allowed-classes Security_Capability)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot app_cap_supporting_tech_caps
;+		(comment "The set of Technology Capabilities that support the Application Capability")
		(type INSTANCE)
;+		(allowed-classes Technology_Capability)
;+		(inverse-slot tech_cap_supports_app_caps)
		(create-accessor read-write))
	(single-slot project_manager
;+		(comment "DEPRECATED. USE THE STAKEHOLDERS SLOT. The individual responsible for the delivery of the project")
		(type INSTANCE)
;+		(allowed-classes Actor)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot milestone_supports_objectives
;+		(comment "The set of Objectives (Business, Application, Information or Technology Architecture) that are supported by reaching a Roadmap Milestone. These can reported on against the Objectives supported by the Strategic Plans associated with a transition on the Roadmap")
		(type INSTANCE)
;+		(allowed-classes Information_Architecture_Objective Technology_Architecture_Objective Application_Architecture_Objective Business_Objective)
		(create-accessor read-write))
	(multislot app_func_impl_updates_data_in
;+		(comment "DEPRECATED - REPLACED BY 'uses_information_representation'")
		(type INSTANCE)
;+		(allowed-classes Information_Representation)
;+		(inverse-slot data_updated_by_app_func_impls)
		(create-accessor read-write))
	(multislot brand_associated_products
;+		(comment "Products that are associated with the Brand")
		(type INSTANCE)
;+		(allowed-classes Product)
		(create-accessor read-write))
	(single-slot usage_of_application_provider
;+		(comment "The Application Provider that is being used.")
		(type INSTANCE)
;+		(allowed-classes Application_Provider)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot relevant_to_information_concepts
;+		(comment "")
		(type INSTANCE)
;+		(allowed-classes Information_Concept)
;+		(inverse-slot relevant_information_objectives)
		(create-accessor read-write))
	(single-slot rm_roadmap
;+		(comment "The Roadmap that the Roadmap Model defines")
		(type INSTANCE)
;+		(allowed-classes Roadmap)
;+		(cardinality 0 1)
;+		(inverse-slot roadmap_model)
		(create-accessor read-write))
	(multislot sr_target_cost_changes
;+		(comment "The relative changes to costs that are expected to occur, if the requirement is met")
		(type INSTANCE)
;+		(allowed-classes Cost_Component_Change)
		(create-accessor read-write))
	(multislot ad_has_inf_implications
;+		(comment "The of Information Drivers for which an application driver has implications.")
		(type INSTANCE)
;+		(allowed-classes Information_Driver)
		(create-accessor read-write))
	(single-slot assessment_date_iso_8601
;+		(comment "The date on which the assessment was performed in ISO 8601 format (yyyy-mm-dd)")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot tpd_unsupported_products
;+		(comment "The set of Technology Product (Roles) that CANNOT be used to resolve this dependency by implementing the specified Component")
		(type INSTANCE)
;+		(allowed-classes Technology_Provider_Role)
		(create-accessor read-write))
	(multislot job_required_certifications
;+		(comment "Skill Certifications that are required for the Job Position")
		(type INSTANCE)
;+		(allowed-classes Skill_Certification)
		(create-accessor read-write))
	(single-slot belongs_to_deployment_group
;+		(comment "The Application Deployment Group that an Application Deployment is a member of.")
		(type INSTANCE)
;+		(allowed-classes Application_Deployment_Group)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot report_is_enabled
;+		(comment "Defines whether the report should be made available in Essential Viewer")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default TRUE)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot bp_supported_by_app_app
;+		(comment "Specifies the Application (Group) that supports a business process")
		(type INSTANCE)
;+		(allowed-classes APP_APP_TO_BUS_RELATION)
;+		(inverse-slot app_to_bus_to_busproc)
		(create-accessor read-write))
	(multislot ca_strategic_plans_supported
;+		(comment "The set of Strategic Plans that a change activity is supporting through its execution and the outputs that it delivers.")
		(type INSTANCE)
;+		(allowed-classes Strategic_Plan)
;+		(inverse-slot strategic_plan_supported_by_projects)
		(create-accessor read-write))
	(single-slot owning_individual
;+		(comment "The actor in a given role who is responsible for the associated EA content")
		(type INSTANCE)
;+		(allowed-classes ACTOR_TO_ROLE_RELATION)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot role_is_external
;+		(comment "Defines whether the role is expected to be played by an external party")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default FALSE)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot act_to_role_from_actor
;+		(comment "The Actor who is playing a role to do the process")
		(type INSTANCE)
;+		(allowed-classes Actor)
;+		(cardinality 1 1)
;+		(inverse-slot actor_plays_role)
		(create-accessor read-write))
	(single-slot sti_earliest_impact_date_iso_8601
;+		(comment "The earliest date from when the impacts of the trend implication are expected to take effect")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot to_skill_job_relation
;+		(comment "The Skill or Skill At Level that is required for the Job Position")
		(type INSTANCE)
;+		(allowed-classes Skill Skill_At_Level)
;+		(cardinality 1 1)
;+		(inverse-slot skills_required_for_job_position)
		(create-accessor read-write))
	(single-slot rl_is_enabled
;+		(comment "Defines whether the report language is available in the Essential Viewer")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default TRUE)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot apu_to_apu_relation_inforeps
;+		(comment "The Information Representations that are exchanged between Application Providers")
		(type INSTANCE)
;+		(allowed-classes APP_PRO_TO_INFOREP_RELATION APP_PRO_TO_INFOREP_EXCHANGE_RELATION)
;+		(inverse-slot used_in_app_dependencies)
		(create-accessor read-write))
	(multislot physical_data_geo_region_scope
;+		(comment "Describes the geographic scope of the physical  data in terms of one or more Geographic Regions")
		(type INSTANCE)
;+		(allowed-classes Geographic_Region)
		(create-accessor read-write))
	(multislot obligation_to_regulations
;+		(comment "The regulations for which this compliance obligation  applies")
		(type INSTANCE)
;+		(allowed-classes Regulation)
		(cardinality 1 ?VARIABLE)
;+		(inverse-slot regulation_for_compliance_obligations)
		(create-accessor read-write))
	(multislot arch_state_business_relations
;+		(comment "Slot to capture the Business Relationship instances (e.g. Actor to Role relationships) that are in an Architecture State")
		(type INSTANCE)
;+		(allowed-classes Business_Relationship)
;+		(inverse-slot bus_relations_contained_in_arch_states)
		(create-accessor read-write))
	(single-slot editor_component_config_for_component
;+		(comment "The Editor Component for which this is the Editor Component Configurator")
		(type INSTANCE)
;+		(allowed-classes Editor_Component)
;+		(cardinality 1 1)
;+		(inverse-slot editor_component_configurator)
		(create-accessor read-write))
	(multislot instance_references_of_external_respository
;+		(comment "The unique instnce references that are defined for this external repository")
		(type INSTANCE)
;+		(allowed-classes External_Instance_Reference)
;+		(inverse-slot external_repository_reference)
		(create-accessor read-write))
	(single-slot bpt_business_criticality
;+		(comment "Defines the relative business criticality of the process, activity or task")
		(type INSTANCE)
;+		(allowed-classes Business_Criticality)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot inverse_of_contained_app_service_usages
;+		(comment "Relation back to the containing architecture")
		(type INSTANCE)
;+		(allowed-classes Static_Application_Service_Architecture)
;+		(cardinality 0 1)
;+		(inverse-slot contained_app_service_usages)
		(create-accessor read-write))
	(single-slot link_anchor_colour
;+		(comment "The default colour for links or anchors in Essential Viewer")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot regulated_data_usages
;+		(comment "Defines the uses of specific information or data that are subject to regulations")
		(type INSTANCE)
;+		(allowed-classes Regulated_Data_Usage)
;+		(inverse-slot rdu_permitted_use)
		(create-accessor read-write))
	(multislot need_related_technology
;+		(comment "DEPRECATED: The set of technology elements related to the need.\\n\\nREPLACED BY: sr_requirement_for_elements")
		(type INSTANCE)
;+		(allowed-classes Technology_Layer)
		(create-accessor read-write))
	(multislot tech_cap_supports_appfunimpl
;+		(comment "Specifies the Application Function Implementations that require this Technology Capability")
		(type INSTANCE)
;+		(allowed-classes APP_FUNCIMPL_TO_TECH_CAP_RELATION)
;+		(inverse-slot app_fun_impl_to_tech_TO_techcap)
		(create-accessor read-write))
	(multislot contained_technology_capability_usages
		(type INSTANCE)
;+		(allowed-classes Technology_Capability_Usage)
;+		(inverse-slot technology_capability_architecture_using_capability)
		(create-accessor read-write))
	(multislot app_funcImpl_architecture_relations
;+		(comment "The set of relations between the components in the architecture. There are 2 subtypes\n1. Requests from Application Providers to Application Function Implementations.\n2. \"Provided by\" relations between the Function Implementations and the Application Providers that provide that expose them.")
		(type INSTANCE)
;+		(allowed-classes %3AAFIA-RELATION)
;+		(inverse-slot contained_in_dynamic_application_architecture)
		(create-accessor read-write))
	(multislot data_object_stakeholders
;+		(comment "DEPRECATED. USE STAKEHOLDERS SLOT. Captures the list of Actors playing roles (e.g. Data Steward, Data Owner) that are stakeholders of this Data Object")
		(type INSTANCE)
;+		(allowed-classes ACTOR_TO_ROLE_RELATION)
		(create-accessor read-write))
	(multislot revenue_components
;+		(comment "The revenue components that make up the overall revenue")
		(type INSTANCE)
;+		(allowed-classes Revenue_Component)
		(cardinality 1 ?VARIABLE)
;+		(inverse-slot rc_revenue_component_of_revenue)
		(create-accessor read-write))
	(multislot report_menu_groups
;+		(comment "Defines groupings of links for the report menu")
		(type INSTANCE)
;+		(allowed-classes Report_Menu_Group)
		(cardinality 1 ?VARIABLE)
;+		(inverse-slot report_menu_parent_menus)
		(create-accessor read-write))
	(single-slot system_essential_slot_priority_for_class
;+		(comment "The class for which the slot is a priority")
		(type INSTANCE)
;+		(allowed-classes %3AESSENTIAL-CLASS)
;+		(cardinality 1 1)
;+		(inverse-slot system_essential_class_slot_priorities)
		(create-accessor read-write))
	(multislot job_requires_skills
;+		(comment "The skills that this job position requires")
		(type INSTANCE)
;+		(allowed-classes JOB_TO_SKILL_RELATION)
;+		(inverse-slot from_job_skill_relation)
		(create-accessor read-write))
	(multislot ca_impacted_elements
		(type INSTANCE)
;+		(allowed-classes %3AEA_Graph_Relation EA_Relation EA_Class)
;+		(inverse-slot impacting_change_activities)
		(create-accessor read-write))
	(single-slot relation_name
;+		(comment "The name of the relationship. A name-spaced naming convention scheme should be used to identify instances of EAS_Relationships")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot ctcr_contract
;+		(comment "The Contract for which this relationship is defining the Cost.")
		(type INSTANCE)
;+		(allowed-classes Contract)
;+		(cardinality 1 1)
;+		(inverse-slot contract_cost)
		(create-accessor read-write))
	(single-slot editor_component_execution_module_name
;+		(comment "Defines the name of the JavaScript Class that acts as the interface to the Editor Component logic")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot bmd_for_business_model
;+		(comment "The Business Model for which an overall direction of a type of enterprise element is being defined")
		(type INSTANCE)
;+		(allowed-classes Business_Model)
;+		(cardinality 1 1)
;+		(inverse-slot business_model_directives)
		(create-accessor read-write))
	(multislot budgets_for_element
;+		(comment "The budgets defined for this element")
		(type INSTANCE)
;+		(allowed-classes Budget)
;+		(inverse-slot budget_allocated_to_element)
		(create-accessor read-write))
	(single-slot deployment_of_application_provider_group
;+		(comment "The Application Provider that the Group a deployment of.")
		(type INSTANCE)
;+		(allowed-classes Application_Provider)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot taxonomy_display_label
;+		(comment "The string that is displayed as the label for the Taxonomy")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot bus_process_type_deletes_information
;+		(comment "DEPRECATED.\\nThe set of Information Representations that this process deletes data from")
		(type INSTANCE)
;+		(allowed-classes Information_View_Type)
;+		(inverse-slot information_deleted_by_bus_process_types)
		(create-accessor read-write))
	(single-slot system_ea_reference_counter_path
;+		(comment "Defines the relationship navigation path to the instances that should be used for the counter segment of an auto-populated ea_reference")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot actor_to_job_is_aspiration
;+		(comment "Defines whether the Job Position is aspirational for the Individual Actor (false by default)")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default FALSE)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot deployment_of_information_representation_group
;+		(comment "The Information Representation that the Information Group is a deployement of.")
		(type INSTANCE)
;+		(allowed-classes Information_Representation)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot product_concept_realised_by_type
;+		(comment "The Product Types that realise a Product Concept.")
		(type INSTANCE)
;+		(allowed-classes Product_Type)
;+		(inverse-slot product_type_realises_concept)
		(create-accessor read-write))
	(multislot supporting_business_capabilities
;+		(comment "Slot to define relationship to the Business Capabilities that support a Business Objective")
		(type INSTANCE)
;+		(allowed-classes Business_Capability)
;+		(inverse-slot business_objectives_for_business_capability)
		(create-accessor read-write))
	(single-slot inverse_of_application_function_input_views
;+		(comment "Reference to an Application Function that is using this Instance to have Information passed to it.")
		(type INSTANCE)
;+		(allowed-classes Application_Function)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot contract_unit_cost
;+		(comment "DEPRECATED: The equivalent of this property has been moved to the CONTRACT_COMPONENT_RELATION class")
		(type FLOAT)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot system_content_quality_status
;+		(comment "The current content quality status of this element")
		(type INSTANCE)
;+		(allowed-classes SYS_CONTENT_QUALITY_STATUS)
		(default [store_55_Class0])
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot pwt_height
;+		(comment "The default height of the widget template when rendered")
		(type INTEGER)
		(default 500)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot system_ea_reference_prefix_path
;+		(comment "Defines an instance navigation path (in dot notation) to the slot value used as the prefix string of the auto-generated ea reference")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot portal_parent_panel
;+		(comment "The parent panel for this section")
		(type INSTANCE)
;+		(allowed-classes Portal_Panel)
;+		(cardinality 1 1)
;+		(inverse-slot portal_panel_sections)
		(create-accessor read-write))
	(multislot implementation_of
		(type INSTANCE)
;+		(allowed-classes Technology_Composite)
;+		(inverse-slot implemented_by)
		(create-accessor read-write))
	(single-slot sld_skill_level
;+		(comment "The skill level for the characteristic")
		(type INSTANCE)
;+		(allowed-classes Skill_Level)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot ms_managed_tech_elements
;+		(comment "Defines the technology elements that contribute to the service")
		(type INSTANCE)
;+		(allowed-classes Technology_Layer)
;+		(inverse-slot tl_managed_by_services)
		(create-accessor read-write))
	(multislot sq_for_classes
;+		(comment "Defines any specific Essential classes to which this Service Quality applies (empty means 'any')")
		(type INSTANCE)
;+		(allowed-classes %3AESSENTIAL-CLASS)
		(create-accessor read-write))
	(single-slot dsa_data_label
;+		(comment "The label to be used having rertievded the data set from this API")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot rcs_comparator
;+		(comment "Defines the nature of the comparison to the defined value")
		(type SYMBOL)
		(allowed-values %3C %3C%3D %3D %3E %3E%3D %3D%3D)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot busproctype_deletes_infoview
;+		(comment "Defines whether the Business Process Type deletes the Information View")
		(type SYMBOL)
		(allowed-values Yes No Unknown)
		(default Unknown)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot arch_state_technology_physical
;+		(comment "Slot to group the set of architectures from the Technology Physical layer in an Architecture State")
		(type INSTANCE)
;+		(allowed-classes Technology_Physical)
;+		(inverse-slot tech_physical_contained_in_arch_states)
		(create-accessor read-write))
	(single-slot portal_panel_label
;+		(comment "The label used as a Title for this panel")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot ea_support_assumptions
;+		(comment "EA Support elements that are relevant to the assumption")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
		(create-accessor read-write))
	(single-slot pm_measure_date_iso_8601
;+		(comment "The date when performance was measured in ISO 8601 format (yyyy-mm-dd)")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot sld_dimension_type
;+		(comment "The specific characteristic of the skill level")
		(type INSTANCE)
;+		(allowed-classes Skill_Level_Dimension_Type)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot dra_technical_name
;+		(comment "Used to capture the technical name used for the Data Representation Attribute (e.g. table column name)")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ca_remediation_level
;+		(comment "The relative level of effort required to remediate non-complianace with the Control being assessed")
		(type INSTANCE)
;+		(allowed-classes Control_Remediation_Level)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot lcm_status_start_date_iso_8601
;+		(comment "Defines the start date from when the lifecycle status begins")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot editor_component_supported_slot_type
;+		(comment "The type of slot that the Editor Component can edit")
		(type INSTANCE)
;+		(allowed-classes Editor_Slot_Type)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot apppro_to_physbus_supported_products
;+		(comment "Defines any specific products that the application provider is supporting.")
		(type INSTANCE)
;+		(allowed-classes Product)
		(create-accessor read-write))
	(single-slot implication_to_element_to_ea_element
;+		(comment "The element that is impacted by the trend implication")
		(type INSTANCE)
;+		(allowed-classes EA_Relation EA_Class)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot usage_of_technology_function
		(type INSTANCE)
;+		(allowed-classes Technology_Function)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ca_net_present_value
;+		(comment "Defines the current value, in contrast to some future value the change activity will have when it has been completed, given the compounded target rate of return.")
		(type FLOAT)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot right_to_left_text
;+		(comment "Specifies whether the text direction for a given language is right to left.")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot act_to_obj_actor
;+		(comment "The actor who has been given the objective")
		(type INSTANCE)
;+		(allowed-classes Actor)
;+		(cardinality 1 1)
;+		(inverse-slot actor_assigned_objectives)
		(create-accessor read-write))
	(single-slot system_content_quality_escalation_to_actor_to_actor
;+		(comment "The actor to which the Content Quality Review is being escalated")
		(type INSTANCE)
;+		(allowed-classes Individual_Actor ACTOR_TO_ROLE_RELATION)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot inverse_of_delivers_app_func_impl
;+		(comment "Specifies the software component that delivers an Application Function Implementation")
		(type INSTANCE)
;+		(allowed-classes Software_Component)
;+		(cardinality 0 1)
;+		(inverse-slot delivers_app_func_impl)
		(create-accessor read-write))
	(single-slot system_ea_reference_counter
;+		(comment "Holds the counter of instances that have been created and had their ea_reference slots auto-populated")
		(type INTEGER)
		(default 0)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot constraint_related_application
;+		(comment "The set of application elements that are related to the constraint.")
		(type INSTANCE)
;+		(allowed-classes Application_Layer)
		(create-accessor read-write))
	(single-slot implemented_with_technology
;+		(comment "The technology architecture that an Application Provider is implemented with. This architecture is defined in terms of a Logical Design of Technology Components.")
		(type INSTANCE)
;+		(allowed-classes Technology_Composite)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot raising_external_business_role_type
;+		(comment "Slot to identify the type of external party that raises a business event")
		(type INSTANCE)
;+		(allowed-classes Business_Role_Type)
		(create-accessor read-write))
	(single-slot rc_revenue_start_date
;+		(comment "The start date for the revenue component")
		(type INSTANCE)
;+		(allowed-classes Time)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot contained_technology_capabilities_used
		(type INSTANCE)
;+		(allowed-classes Technology_Capability)
		(create-accessor read-write))
	(multislot information_store_geo_scope
;+		(comment "Defines the geographic scope of information within the Information Store")
		(type INSTANCE)
;+		(allowed-classes Geographic_Region)
		(create-accessor read-write))
	(single-slot bra_supporting_app_reference_architectures
;+		(comment "The Application Reference Architectures that support this Business Reference Architecture")
		(type INSTANCE)
;+		(allowed-classes)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot editor_included_head_content
;+		(comment "Optional HTML/Script content to be included in the header section of the Editor")
		(type STRING)
		(create-accessor read-write))
	(single-slot usage_of_information_store_group
;+		(comment "The Information Store Group that is being used.")
		(type INSTANCE)
;+		(allowed-classes Information_Store_Group)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot app_func_impl_deletes_data_from
;+		(comment "DEPRECATED - REPLACED BY 'uses_information_representation'")
		(type INSTANCE)
;+		(allowed-classes Information_Representation)
;+		(inverse-slot data_deleted_by_app_func_impls)
		(create-accessor read-write))
	(single-slot contract_ref
;+		(comment "A unique reference for the Contract")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot report_pdf_is_landscape
;+		(comment "Defines whether the generated report pdf has a landscape page layout")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default TRUE)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot bmc_architecture_elements
;+		(comment "The elements that comprise this Business Model Configuration Architecture")
		(type INSTANCE)
;+		(allowed-classes Business_Model_Configuration_Architecture_Type)
;+		(inverse-slot bmcat_used_in_business_model_config_architecture)
		(create-accessor read-write))
	(single-slot static_usage_of_product_type
;+		(comment "The product type that this is a usage of.")
		(type INSTANCE)
;+		(allowed-classes Product_Type)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot end_capability_name_label
;+		(comment "The display label for an end node of a capability chain")
		(type STRING)
		(default "End")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot sr_required_by_date_ISO8601
;+		(comment "The date by when this strategic requirement needs to be addressed")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot contained_in_dynamic_application_architecture
;+		(comment "Captures the dynamic architecture that contains the relation")
		(type INSTANCE)
;+		(allowed-classes Dynamic_Application_Provider_Architecture)
;+		(cardinality 1 1)
;+		(inverse-slot app_funcImpl_architecture_relations)
		(create-accessor read-write))
	(multislot job_performed_roles_at_levels
;+		(comment "The business roles at specific levels that are performed by a job")
		(type INSTANCE)
;+		(allowed-classes JOB_TO_ROLEATLEVEL_RELATION)
;+		(inverse-slot job_to_role_at_level_from_job)
		(create-accessor read-write))
	(multislot derived_from_data_attributes
;+		(comment "Slot to capture the set of Data Attributes that an Information View is derived from.")
		(type INSTANCE)
;+		(allowed-classes Data_Object_Attribute)
		(create-accessor read-write))
	(multislot skill_type_required_by_capability
;+		(comment "Inverse slot to the Business Capability instances that require this type of skill.")
		(type INSTANCE)
;+		(allowed-classes Business_Capability)
;+		(inverse-slot requires_skill_types)
		(create-accessor read-write))
	(single-slot time_quarter
;+		(comment "Slot to manage the quarter 'value' of a Time instance.")
		(type SYMBOL)
		(allowed-values Q1 Q2 Q3 Q4)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot inf_principle_app_implications
;+		(comment "Commentary describing the application implications of the information principle")
		(type STRING)
		(create-accessor read-write))
	(single-slot business_event_criteria
;+		(comment "Slot to capture the criteria for when this event is used, e.g. order value > 500")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot implemented_data_object
;+		(comment "The Data Object that this Data Representation implements")
		(type INSTANCE)
;+		(allowed-classes Data_Object)
;+		(inverse-slot implemented_by_data_reps)
		(create-accessor read-write))
	(single-slot infrep_att_value_type
;+		(comment "Defines the primitive type of the Information Representation Attribute")
		(type INSTANCE)
;+		(allowed-classes InfoData_Representation_Attribute_Type)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot cjp_index
;+		(comment "Defines the position of this Customer Journey Phase in the sequence of Customer Journey Phases that take place within a Customer Journey")
		(type INTEGER)
		(default 0)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot technology_instance_deployment_status
;+		(comment "The runtime status of this technology instance")
		(type INSTANCE)
;+		(allowed-classes Deployment_Status)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot member_of_technology_product_families
;+		(comment "Specifies the Technology Product Families to which the Technology Provider belongs.")
		(type INSTANCE)
;+		(allowed-classes Technology_Product_Family)
;+		(inverse-slot groups_technology_products)
		(create-accessor read-write))
	(single-slot static_usage_of_app_func_impl
;+		(comment "The application function implementation that this element is a usage of")
		(type INSTANCE)
;+		(allowed-classes Application_Function_Implementation)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot info_view_supporting_data_objects
;+		(comment "The Data Objects that comprise this Information View")
		(type INSTANCE)
;+		(allowed-classes Data_Object)
		(create-accessor read-write))
	(multislot principle_relevant_to_technology_capabilities
;+		(comment "")
		(type INSTANCE)
;+		(allowed-classes Technology_Capability)
;+		(inverse-slot relevant_technology_principles)
		(create-accessor read-write))
	(single-slot system_cq_review_policy_instance_manager_table_body_template_path
;+		(comment "The path to the HTML template that generates the rows in the Content Manager Dashboard")
		(type STRING)
		(default "editors/enterprise/content-governance-dashboard/default-content-reviewer-instance-manager-table-body-template.html")
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot risk_impacted_objectives
;+		(comment "The strategic objectives that may be impacted if the Risk was to occur")
		(type INSTANCE)
;+		(allowed-classes Application_Objective_Type Information_Objective_Type Technology_Objective_Type Business_Objective_Type)
		(create-accessor read-write))
	(multislot external_repository_instance_reference
;+		(comment "Holds a set of references to this instance that are used in external repositories")
		(type INSTANCE)
;+		(allowed-classes External_Instance_Reference)
;+		(inverse-slot referenced_instance)
		(create-accessor read-write))
	(single-slot technology_component_architecture
;+		(comment "")
		(type INSTANCE)
;+		(allowed-classes Technology_Component_Architecture)
;+		(cardinality 0 1)
;+		(inverse-slot describes_technology_composite)
		(create-accessor read-write))
	(single-slot parent_application_provider
;+		(comment "The application that comprises this application along")
		(type INSTANCE)
;+		(allowed-classes Composite_Application_Provider)
;+		(cardinality 0 1)
;+		(inverse-slot contained_application_providers)
		(create-accessor read-write))
	(single-slot technology_instance_of
		(type INSTANCE)
;+		(allowed-classes Technology_Provider)
;+		(cardinality 0 1)
;+		(inverse-slot technology_provider_instances)
		(create-accessor read-write))
	(multislot actor_business_scope
;+		(comment "Slot to define the scope of business capabilities that define what that Actor does at the conceptual level of abstraction. For Group Actors, defines the scope of capabilities that an organisation has.")
		(type INSTANCE)
;+		(allowed-classes Business_Capability)
		(create-accessor read-write))
	(multislot control_related_risk
;+		(comment "The set of risks that are mitigated by this control")
		(type INSTANCE)
;+		(allowed-classes Risk)
;+		(inverse-slot risk_related_control)
		(create-accessor read-write))
	(single-slot dependency_to_element
;+		(comment "The element to which the dependency is defined")
		(type INSTANCE)
;+		(allowed-classes EA_Relation EA_Class)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot role_for_classes
;+		(comment "The meta-classes for which an actor playing this role can be a stakeholder")
		(type INSTANCE)
;+		(allowed-classes %3AESSENTIAL-CLASS)
		(create-accessor read-write))
	(single-slot bmcr_to_element
;+		(comment "The enterprise element that is required for the Business Model Configuration")
		(type INSTANCE)
;+		(allowed-classes EA_Class EA_Relation)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot used_in_dynamic_application_service_architecture
;+		(comment "Slot referencing the dynamic application service architecture in which Application Service Architecture Types are used.")
		(type INSTANCE)
;+		(allowed-classes Dynamic_Application_Service_Architecture)
;+		(cardinality 0 1)
;+		(inverse-slot contained_application_function_components)
		(create-accessor read-write))
	(single-slot lifecycle_status_application_provider
;+		(comment "The Lifecycle Status of the Application Provider")
		(type INSTANCE)
;+		(allowed-classes Lifecycle_Status)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot data_object_generalisations
;+		(comment "The Data Objects that are a generalisation of this Data Object")
		(type INSTANCE)
;+		(allowed-classes Data_Object)
;+		(inverse-slot data_object_specialisations)
		(create-accessor read-write))
	(multislot operated_data_reps
;+		(comment "The Data Representations that are operated on by the Application Provider in the context of the Information Representation")
		(type INSTANCE)
;+		(allowed-classes APP_PRO_TO_INFOREP_TO_DATAREP_RELATION)
;+		(inverse-slot apppro_to_inforep_to_datarep_from_appro_to_inforep)
		(create-accessor read-write))
	(multislot uses_information_stores
;+		(comment "The Information Stores that are used by an Application Deployment")
		(type INSTANCE)
;+		(allowed-classes Information_Store)
		(create-accessor read-write))
	(multislot process_information_passed
;+		(comment "The information (Information View) that is passed to the next step (Business Process, Business Activity).")
		(type INSTANCE)
;+		(allowed-classes Information_View_Usage)
		(create-accessor read-write))
	(single-slot rcs_index
;+		(comment "An index for controlling the order in which criterion scores are presented. NOTE: a score with index 0 is used as the default score if no other scores evaluate to true")
		(type INTEGER)
		(default 0)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot usage_of_technology_protocol
		(type INSTANCE)
;+		(allowed-classes Technology_Protocol)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot contained_business_capability_relations
;+		(comment "The set of business capability relations contained in a business capability chain")
		(type INSTANCE)
;+		(allowed-classes BCU-OOCURS_BEFORE-BCU)
;+		(inverse-slot contained_in_business_capability_chain)
		(create-accessor read-write))
	(single-slot technology_instance_deployed_on_node
;+		(comment "The Technology Node that this instance is deployed to.")
		(type INSTANCE)
;+		(allowed-classes Technology_Node)
;+		(cardinality 0 1)
;+		(inverse-slot contained_technology_instances)
		(create-accessor read-write))
	(single-slot project_end_date
;+		(comment "DEPRECATED. the target end date for the project")
		(type INSTANCE)
;+		(allowed-classes Time)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot budget_start_date_iso_8601
;+		(comment "The start date in ISO 8601 format (yyyy-mm-dd) from which a budgetary element is defined")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot provides_application_function
;+		(comment "The Application Function that the Service is providing in a usage")
		(type INSTANCE)
;+		(allowed-classes Application_Function)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot editor_sections
;+		(comment "Defines one or more view sections contained within the Editor")
		(type INSTANCE)
;+		(allowed-classes Editor_Section)
		(cardinality 1 ?VARIABLE)
;+		(inverse-slot editor_section_parent)
		(create-accessor read-write))
	(single-slot report_menu_item_category
;+		(comment "Defines the category of the menu item, e.g. summary, analysis")
		(type INSTANCE)
;+		(allowed-classes Menu_Item_Category)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot rdu_legal_basis
;+		(comment "Defines the legal basis for the use of the regulated data")
		(type INSTANCE)
;+		(allowed-classes Regulated_Data_Usage_Legal_Basis)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot portal_panel_sections
;+		(comment "The optional sub-sections that can appear within this panel")
		(type INSTANCE)
;+		(allowed-classes Portal_Panel_Section)
;+		(inverse-slot portal_parent_panel)
		(create-accessor read-write))
	(multislot revenues_for_element
;+		(comment "Defines the revenues directly deiivered by this element")
		(type INSTANCE)
;+		(allowed-classes Revenue)
;+		(inverse-slot revenue_for_elements)
		(create-accessor read-write))
	(multislot relevant_technology_principles
		(type INSTANCE)
;+		(allowed-classes Technology_Architecture_Principle)
;+		(inverse-slot principle_relevant_to_technology_capabilities)
		(create-accessor read-write))
	(multislot ap_dynamic_architecture
;+		(comment "The defining dynamic architecture for a function implemented by an Applicatoin Provider.")
		(type SYMBOL)
;+		(allowed-parents Dynamic_Application_Provider_Architecture)
		(create-accessor read-write))
	(single-slot cjp_experience_rating
;+		(comment "The Customer Experience Rating for the Persona when undertaking the Customer Journey Phase")
		(type INSTANCE)
;+		(allowed-classes CUST_JOURNEY_PHASE_TO_EXPERIENCE_RELATION)
;+		(cardinality 0 1)
;+		(inverse-slot cust_journey_phase_to_experience_from_cust_journey_phase)
		(create-accessor read-write))
	(single-slot purchase_status
;+		(comment "Defines the current status of the element from a purchasing perspective")
		(type INSTANCE)
;+		(allowed-classes Purchase_Status)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot appsvc_to_bus_to_busproc
;+		(comment "The Business Process that is supported by an Application Service")
		(type INSTANCE)
;+		(allowed-classes Business_Process_Type)
;+		(cardinality 1 1)
;+		(inverse-slot bp_supported_by_app_svc)
		(create-accessor read-write))
	(single-slot indvact_reportsto_indvact_strength
;+		(comment "The strength of the reporting line between the actors")
		(type INSTANCE)
;+		(allowed-classes Actor_Reporting_Line_Strength)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot bus_env_factor_correlations
;+		(comment "The quantitative correlations between this element and  Business Environment Factors")
		(type INSTANCE)
;+		(allowed-classes Business_Environment_Correlation_Dependency)
;+		(inverse-slot bef_correlation_from_element)
		(create-accessor read-write))
	(multislot assessment_comments
;+		(comment "Slot to capture one or more comments about the assessment.")
		(type INSTANCE)
;+		(allowed-classes Commentary)
		(create-accessor read-write))
	(multislot control_supported_by_technology
;+		(comment "DEPRECATED: The technology elements that support the implementation of this control\\n\\nSUPERCEDED BY: control_implemented_by_solutions")
		(type INSTANCE)
;+		(allowed-classes Technology_Layer)
		(create-accessor read-write))
	(multislot portal_section_reports
;+		(comment "The reports for this portal section")
		(type INSTANCE)
;+		(allowed-classes REPORT_TO_PORTAL_SECTION_RELATION)
		(cardinality 1 ?VARIABLE)
;+		(inverse-slot r2psr_portal_section)
		(create-accessor read-write))
	(single-slot providing_application_provider_usage
;+		(comment "The usage of Application Provider that is providing the Application Function Implementation that is being used.")
		(type INSTANCE)
;+		(allowed-classes Dynamic_Application_Provider_Usage)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot taxonomy_term_index
;+		(comment "The sequencing order of the taxonomy term within its parent taxonomy")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot infrep_att_derivation_formula
;+		(comment "Captures the formula used to derive the attribute")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot pw_widget_id
;+		(comment "A unique id for the rendered WIdget")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot system_content_quality_escalation_to_actor_comms_datetimes_iso8601
;+		(comment "The dates and times when the actor to which the review is escalated has been contacted")
		(type STRING)
		(create-accessor read-write))
	(multislot risk_related_control
;+		(comment "Controls designed to eliminate or reduce the risk")
		(type INSTANCE)
;+		(allowed-classes Control)
;+		(inverse-slot control_related_risk)
		(create-accessor read-write))
	(single-slot busproctype_to_infoview_from_busproc
;+		(comment "The Business Process Type that is using the Information Object")
		(type INSTANCE)
;+		(allowed-classes Business_Process_Type)
;+		(cardinality 1 1)
;+		(inverse-slot busproctype_uses_infoviews)
		(create-accessor read-write))
	(single-slot report_classification_intro
;+		(comment "Provides an introduction for the set of reports associated with this report classification")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot arch_state_application_physical
;+		(comment "Slot to group the set of architectures from the Application Physical layer in an Architecture State")
		(type INSTANCE)
;+		(allowed-classes Application_Physical)
;+		(inverse-slot app_physical_contained_in_arch_states)
		(create-accessor read-write))
	(multislot sd_implements_solutions
;+		(comment "The set of Security Solutions that are being implemented by the Security Deployment")
		(type INSTANCE)
;+		(allowed-classes Security_Solution)
		(create-accessor read-write))
	(multislot strategic_plan_constraints
;+		(comment "Constraints that may impact the delivery of the strategic plans")
		(type INSTANCE)
;+		(allowed-classes Constraint)
		(create-accessor read-write))
	(multislot tpr_service_qualities
;+		(comment "Defines the service qualities (business, application, information or technology) that the Technology Provider exhibits when performing the given role")
		(type INSTANCE)
;+		(allowed-classes Service_Quality_Value)
		(create-accessor read-write))
	(single-slot app_pro_to_dataobj_req_from_app
;+		(comment "The APplication that requires the Data Object")
		(type INSTANCE)
;+		(allowed-classes Application_Provider)
;+		(cardinality 1 1)
;+		(inverse-slot ap_data_object_requirements)
		(create-accessor read-write))
	(single-slot actor_to_expertise_from_actor
;+		(comment "The individual actor that possesses the expertise")
		(type INSTANCE)
;+		(allowed-classes Individual_Actor)
;+		(cardinality 1 1)
;+		(inverse-slot indivactor_expertise)
		(create-accessor read-write))
	(single-slot description
;+		(comment "A meaningful description of the element and its purpose in the model.")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot io_owner
;+		(comment "Captures the individual or organisation that is accountable for meeting the objective")
		(type INSTANCE)
;+		(allowed-classes Actor)
		(create-accessor read-write))
	(single-slot app_pro_to_inforep_to_inforep
;+		(comment "The Information Representation that is used by the Application Provider")
		(type INSTANCE)
;+		(allowed-classes Information_Representation_Type)
;+		(cardinality 1 1)
;+		(inverse-slot inforep_used_by_app_pro)
		(create-accessor read-write))
	(single-slot correlation_from_percent
;+		(comment "The percentage value between 0.0 and 1.0 for the quantitative 'from' EA element being correlated")
		(type FLOAT)
		(range 0.0 1.0)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot bo_target_date_iso_8601
;+		(comment "Captures the target date for achieving the objective in ISO 8601 format (yyyy-mm-dd)")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot ca_remediation_plans
;+		(comment "The plans that have been defined to remediate against the assessment findings")
		(type INSTANCE)
;+		(allowed-classes Strategic_Plan)
		(create-accessor read-write))
	(single-slot to_skill_role_relation
;+		(comment "Slot to capture the 'TO' end of this Skill relation, which is to a Skill instance")
		(type INSTANCE)
;+		(allowed-classes Skill_At_Level)
;+		(cardinality 1 1)
;+		(inverse-slot skill_required_by_roles)
		(create-accessor read-write))
	(multislot budgetary_element_for_cost_component_types
;+		(comment "The types of cost for which this budgetary element has been allocated")
		(type INSTANCE)
;+		(allowed-classes Cost_Component_Type)
		(create-accessor read-write))
	(multislot operates_on_information_views
;+		(comment "The Information Views that are processed by this Application Service")
		(type INSTANCE)
;+		(allowed-classes APP_SVC_TO_INFOVIEW_RELATION)
;+		(inverse-slot app_svc_to_infoview_from_appsvc)
		(create-accessor read-write))
	(single-slot app_pro_reads_info_rep
;+		(comment "Determines whether the Application Provider reads the Information Representation")
		(type SYMBOL)
		(allowed-values Yes No Unknown)
		(default Unknown)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot io_measures
;+		(comment "Captures the Information Service Qualities Values that will measure success in meeting the Information Objective")
		(type INSTANCE)
;+		(allowed-classes Information_Service_Quality_Value)
		(create-accessor read-write))
	(single-slot afi_performing_mapping
;+		(comment "The Application Function Implementation or Application Provider that is performing - or provides the functionality to perform - the information / data mapping.")
		(type INSTANCE)
;+		(allowed-classes Application_Provider_Type)
;+		(cardinality 1 1)
;+		(inverse-slot afi_maps_info_data)
		(create-accessor read-write))
	(multislot to_earelation_elements
;+		(comment "Inverse slot of the TO slot of the EA_Relationship, enabling the list of relationships to be viewed on Business_Process_Type")
		(type INSTANCE)
;+		(allowed-classes APP_TO_BUS_RELATION)
;+		(inverse-slot TO)
		(create-accessor read-write))
	(multislot ss_business_elements
;+		(comment "The set of business elements that are part of the Security Solution")
		(type INSTANCE)
;+		(allowed-classes Business_Process_Type Business_Role)
		(create-accessor read-write))
	(multislot rpo_for_business_criticalities
;+		(comment "The relative Business Criticalities of the EA elements to which this Recovery Point Objective should be applied")
		(type INSTANCE)
;+		(allowed-classes Business_Criticality)
		(create-accessor read-write))
	(single-slot control_group
;+		(comment "The category for the control")
		(type INSTANCE)
;+		(allowed-classes Control_Group)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot contained_business_role_types
;+		(comment "The set of Business Role Types that are contained within a Business Role Type")
		(type INSTANCE)
;+		(allowed-classes Business_Role_Type)
;+		(inverse-slot member_of_business_role_types)
		(create-accessor read-write))
	(single-slot cc_cost_amount
;+		(comment "The amount of money being spent")
		(type FLOAT)
		(default 0.0)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot raising_external_business_role
;+		(comment "Slot to identify the external party role that raises a business event")
		(type INSTANCE)
;+		(allowed-classes Business_Role)
		(create-accessor read-write))
	(single-slot static_prod_arch_display_label
;+		(comment "The display label for this component in the static product architecture model")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot control_solution_business_elements
;+		(comment "The business elements that form part of this control solution")
		(type INSTANCE)
;+		(allowed-classes Business_Logical Business_Physical)
		(create-accessor read-write))
	(multislot invoked_functions_relations
;+		(comment "The TCU-TO-TFU relations in the architecture. These model the Functions that are invoked by Technology Components")
		(type INSTANCE)
;+		(allowed-classes %3ATCA-RELATION)
;+		(inverse-slot architecture_containing_tcf_relations)
		(create-accessor read-write))
	(multislot cache_report_instances
;+		(comment "The set of Instances for which this report should be cached. e.g. The set of summary reports for specific elements that are to be cached.")
		(type INSTANCE)
;+		(allowed-classes EA_Class EA_Relation %3AEA_Graph_Relation)
		(create-accessor read-write))
	(single-slot system_ea_reference_auto_create_schema
;+		(comment "Represents the rules to be applied when auto-populating the ea_reference slot of instances of this meta-class")
		(type INSTANCE)
;+		(allowed-classes EA_Reference_Auto_Create_Schema)
;+		(cardinality 0 1)
;+		(inverse-slot ea_reference_auto_create_schema_for_class)
		(create-accessor read-write))
	(multislot uses_provider
;+		(comment "The relations that are described in this static application provider architecture")
		(type INSTANCE)
;+		(allowed-classes %3AAPA-STATIC-RELATION)
;+		(inverse-slot contained_in_static_application_provider_architecture)
		(create-accessor read-write))
	(multislot bus_principle_app_implications
;+		(comment "Commentary describing the application implications of the business principle")
		(type STRING)
		(create-accessor read-write))
	(multislot belongs_to_business_domains
;+		(comment "The Business Domains to which this Business Capability belongs")
		(type INSTANCE)
;+		(allowed-classes Business_Domain)
;+		(inverse-slot business_domain_contains_bus_capabilities)
		(create-accessor read-write))
	(single-slot job_to_skill_focus_level
;+		(comment "The extent to which the Skill is the main focus for the Job Position")
		(type INSTANCE)
;+		(allowed-classes Skill_Focus_Level)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot vcl_included_html_path
;+		(comment "The path to the HTML fragment containing references/links to the files that comprise the 3rd party library")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot mft_managed_support_scope
;+		(comment "Defines the scope of business/IT management elements that are controlled by this type of management framework")
		(type INSTANCE)
;+		(allowed-classes EA_Support_Relationship EA_Support)
		(create-accessor read-write))
	(multislot supports_business_process_appsvc
;+		(comment "The Business Process, Tasks or Activities that are supported by the Application Service.")
		(type INSTANCE)
;+		(allowed-classes APP_SVC_TO_BUS_RELATION)
;+		(inverse-slot appsvc_to_bus_from_appsvc)
		(create-accessor read-write))
	(single-slot bus_responsibility_relation_category
;+		(comment "Defines the nature of the responsibility that the actor has for the element")
		(type INSTANCE)
;+		(allowed-classes Role_Responsibility_Category)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot app_pro_to_inforep_delivery_approach
;+		(comment "Describes how the application delivers the information representation (e.g. email, shared drive, paper document)")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot provided_application_function_implementation
;+		(comment "The Application Function Implementation that is being used.")
		(type INSTANCE)
;+		(allowed-classes Application_Function_Implementation)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot realised_by_application_services
;+		(comment "The Application Services that realise this Application Capability")
		(type INSTANCE)
;+		(allowed-classes Application_Service)
;+		(inverse-slot realises_application_capabilities)
		(create-accessor read-write))
	(single-slot issue_priority
;+		(comment "The relative priority of the issue")
		(type SYMBOL)
		(allowed-values High Medium Low)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot report_constant_short_name
;+		(comment "An abbreviated name given to the Report Constant")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot ce_editor_js_path
;+		(comment "The path to the xsl file that generates the framework logic for the editor")
		(type STRING)
		(default "editors/configurable/configurable_editor_js.xsl")
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot contract_applicable_regulations
;+		(comment "The regulations that apply to this contract")
		(type INSTANCE)
;+		(allowed-classes Regulation)
		(create-accessor read-write))
	(single-slot boms_standard_group_business_role
;+		(comment "Defines the logical Group Business Role that is the anchor point for the Business Operating Model standard")
		(type INSTANCE)
;+		(allowed-classes Group_Business_Role)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot portal_panel_sequence
;+		(comment "The order in which the panels should appear in the sidebar")
		(type INTEGER)
		(default 0)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot performance_measures
;+		(comment "The measures of performance that have been captured for the EA element")
		(type INSTANCE)
;+		(allowed-classes Performance_Measure)
;+		(inverse-slot pm_measured_element)
		(create-accessor read-write))
	(single-slot lifecycle_model_subject
;+		(comment "The subject of a Lifecycle Model. That is the element in the enterprise of which this is the Lifecycle Model.")
		(type INSTANCE)
;+		(allowed-classes EA_Class EA_Relation %3AEA_Graph_Relation)
;+		(cardinality 1 1)
;+		(inverse-slot lifecycle_model_for_element)
		(create-accessor read-write))
	(single-slot business_capability_id
;+		(comment "An identification number for the Business Capability that can also provide an indication of its granularity")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot mf_managed_business_elements
;+		(comment "Defines the scope of business elements that are managed by this framework")
		(type INSTANCE)
;+		(allowed-classes Business_Relationship Business_Layer)
		(create-accessor read-write))
	(single-slot system_last_modified_datetime_iso8601
;+		(comment "The date and time at which the element was most recently modified")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot ca_planned_changes
;+		(comment "The planned changes that the change activity will deliver")
		(type INSTANCE)
;+		(allowed-classes PLAN_TO_ELEMENT_RELATION)
;+		(inverse-slot plan_to_element_change_activity)
		(create-accessor read-write))
	(single-slot license_details
;+		(comment "Slot to hold the details of a license agreement.")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot costs_for_element
;+		(comment "Defines costs that are associated with the current element")
		(type INSTANCE)
;+		(allowed-classes Cost)
;+		(inverse-slot cost_for_elements)
		(create-accessor read-write))
	(multislot modal_report_for_classes
;+		(comment "The meta-classes for which this modal report is relevant")
		(type INSTANCE)
;+		(allowed-classes %3AESSENTIAL-CLASS)
		(create-accessor read-write))
	(single-slot is_a_representation_of_attribute
;+		(comment "Slot to relate an Information Representation Attribute to the Information View Attribute or Data Object Attribute that it is representing.")
		(type INSTANCE)
;+		(allowed-classes Information_View_Attribute Data_Object_Attribute)
;+		(cardinality 0 1)
;+		(inverse-slot represented_by_attribute)
		(create-accessor read-write))
	(single-slot roadmap_model
;+		(comment "A Roadmap Model that defiens the transitions between the contained Architecture States")
		(type INSTANCE)
;+		(allowed-classes Roadmap_Model)
;+		(cardinality 0 1)
;+		(inverse-slot rm_roadmap)
		(create-accessor read-write))
	(single-slot obligation_component_to_element
;+		(comment "The element that is impacted by the obligation")
		(type INSTANCE)
;+		(allowed-classes EA_Class)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot bm_business_goals_objectives
;+		(comment "The business goals and/or objectives that the business model is intended to meet")
		(type INSTANCE)
;+		(allowed-classes Business_Objective_Type)
		(create-accessor read-write))
	(single-slot ap_IT_contact
;+		(comment "DEPRECATED. USE STAKEHOLDERS SLOT. The IT contact for the Application Provider")
		(type INSTANCE)
;+		(allowed-classes Actor)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot risk_related_technology
;+		(comment "The set of technology elements that are related to the risk")
		(type INSTANCE)
;+		(allowed-classes Technology_Layer)
		(create-accessor read-write))
	(multislot bo_assigned_to
;+		(comment "Actors to whom this objective has been assigned")
		(type INSTANCE)
;+		(allowed-classes ACTOR_TO_OBJECTIVE_RELATION)
;+		(inverse-slot act_to_obj_objective)
		(create-accessor read-write))
	(multislot mapped_to_business_domain
;+		(comment "The business domain(s) to which an Application Capability belongs.")
		(type INSTANCE)
;+		(allowed-classes Business_Domain)
		(create-accessor read-write))
	(single-slot actor_to_job_job_title
;+		(comment "A job title given to the actor when performing the job")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot contract_start_date_ISO8601
;+		(comment "The date when the Contract comes into effect")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot defines_business_capability
;+		(comment "The Business Capability that a Business Capability Chain defines")
		(type INSTANCE)
;+		(allowed-classes Business_Capability)
;+		(cardinality 0 1)
;+		(inverse-slot defining_business_capability_chain)
		(create-accessor read-write))
	(multislot simple_editor_for_classes
;+		(comment "")
		(type INSTANCE)
;+		(allowed-classes %3AESSENTIAL-CLASS)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(single-slot %3Acontained_in_lifecycle_model
;+		(comment "Slot to capture the Lifecycle Model in which a relationship exists.")
		(type INSTANCE)
;+		(allowed-classes Lifecycle_Model)
;+		(cardinality 1 1)
;+		(inverse-slot contained_lifecycle_model_relations)
		(create-accessor read-write))
	(single-slot rdulb_consent_required
;+		(comment "Defines whether consent is required before information or data can be used with this legal basis")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default FALSE)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot reports_for_portal_panel
;+		(comment "The Reports which should be displayed in this panel")
		(type INSTANCE)
;+		(allowed-classes Report)
		(create-accessor read-write))
	(single-slot busproctype_updates_infoview
;+		(comment "Defines whether the Business Process Type updates the Information View")
		(type SYMBOL)
		(allowed-values Yes No Unknown)
		(default Unknown)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot business_process_used
;+		(comment "The business process that this is a usage of.")
		(type INSTANCE)
;+		(allowed-classes Business_Process)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot report_context_xsl_filename
;+		(comment "Defines the filename for the xsl document that surrounds a non-html report")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot rr_required_resource
;+		(comment "The individual role or Joib Positon for which resource is required")
		(type INSTANCE)
;+		(allowed-classes Individual_Business_Role Job_Position)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot contained_view_attributes
;+		(comment "The set of Information View Attributes from which this View is composed.")
		(type INSTANCE)
;+		(allowed-classes Information_View_Attribute)
		(create-accessor read-write))
	(single-slot attribute_value
;+		(comment "The value that this attribute has.")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot defined_by_data_subject
;+		(comment "Slot to capture the Data Subject that provides the semantic definition for a Data Subject")
		(type INSTANCE)
;+		(allowed-classes Data_Subject)
		(cardinality 1 ?VARIABLE)
;+		(inverse-slot realised_by_data_objects)
		(create-accessor read-write))
	(single-slot budget_year_iso_8601
;+		(comment "The year for which a budgetary element is defined in ISO 8601 format (yyyy)")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot crl_minimum
;+		(comment "A number representing the minimum representative score (e.g. effort, cost) for this level of remediation")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot ea_requirements
;+		(comment "The issues or needs associated with this element")
		(type INSTANCE)
;+		(allowed-classes Strategic_Requirement)
;+		(inverse-slot sr_requirement_for_elements)
		(create-accessor read-write))
	(multislot tech_principle_bus_implications
;+		(comment "Commentary describing the business implications of the technology principle")
		(type STRING)
		(create-accessor read-write))
	(single-slot software_interaction_tech_protocol
;+		(comment "Slot to define the technology protocol used to interact with a software component")
		(type INSTANCE)
;+		(allowed-classes Technology_Protocol)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot actor_has_jobs
;+		(comment "The Job Positions in which the Individual Actor has been placed")
		(type INSTANCE)
;+		(allowed-classes ACTOR_TO_JOB_RELATION)
;+		(inverse-slot actor_to_job_from_actor)
		(create-accessor read-write))
	(multislot business_implications
;+		(comment "Commentary describing the business implications of the business principle")
		(type STRING)
		(create-accessor read-write))
	(single-slot representation_label
;+		(comment "The label to be displayed for the information representation")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot roadmap_model_type_label
;+		(comment "A textual label for a Roadmap Model element as it appears on a roadmap diagram")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot technology_instance_attributes
;+		(comment "The set of Attribute Values for a technology instance. Each instance of an Attribute Value is, in effect, a usage of an Attribute Instance.")
		(type INSTANCE)
;+		(allowed-classes Attribute_Value)
;+		(inverse-slot inverse_of_technology_instance_attributes)
		(create-accessor read-write))
	(single-slot business_activity_used
;+		(comment "The business activity that this usage is an instance of.")
		(type INSTANCE)
;+		(allowed-classes Business_Activity)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot tpd_technology_component
;+		(comment "Defines the technology component that is required by the Technology Product")
		(type INSTANCE)
;+		(allowed-classes Technology_Component)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot physical_data_qualities
;+		(comment "Describes the Information Service Qualities (e.g. completeness, precision, granularity) associated physical data")
		(type INSTANCE)
;+		(allowed-classes Information_Service_Quality_Value)
		(create-accessor read-write))
	(single-slot system_cq_policy_assigned_role
;+		(comment "The individual role that is responsible for performing the content quality review")
		(type INSTANCE)
;+		(allowed-classes SYS_CONTENT_QUALITY_POLICY_TO_ROLE_RELATION)
;+		(cardinality 1 1)
;+		(inverse-slot system_cq_polcy_to_role_from_policy)
		(create-accessor read-write))
	(single-slot technology_provider_architecture
		(type INSTANCE)
;+		(allowed-classes Technology_Build_Architecture)
;+		(cardinality 0 1)
;+		(inverse-slot describes_technology_provider)
		(create-accessor read-write))
	(multislot need_related_application
;+		(comment "DEPRECATED: The set of application elements that are related to the need\\n\\nREPLACED BY: sr_requirement_for_elements")
		(type INSTANCE)
;+		(allowed-classes Application_Layer)
		(create-accessor read-write))
	(single-slot tmp_escalation_policy
;+		(comment "Describes the Technology Management Policy to which this policy escalates issues or conflicts")
		(type INSTANCE)
;+		(allowed-classes Technology_Management_Policy)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot supporting_business_principles
;+		(comment "")
		(type INSTANCE)
;+		(allowed-classes Business_Principle)
;+		(inverse-slot business_principle_supports_business_objectives)
		(create-accessor read-write))
	(single-slot user_count_range
;+		(comment "A numercial range for the number of users of the Application Provider")
		(type INSTANCE)
;+		(allowed-classes User_Count_Range)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot indvact_reportsto_indvact_in_org_context
;+		(comment "The organisational context(s) in which the Individual Actor reports to the Individual Actor")
		(type INSTANCE)
;+		(allowed-classes Group_Actor Change_Activity)
		(create-accessor read-write))
	(single-slot technology_instance_given_name
;+		(comment "The given name of a technology instance, e.g. the hostname of a physical device or the specified instance name of a software instance.")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot product_label
;+		(comment "The label to display for the product")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot comment_subject
		(type STRING)
;+		(cardinality 0 1)
;+		(inverse-slot commentary)
		(create-accessor read-write))
	(single-slot email
;+		(comment "Slot to capture the email address of an Actor")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot sc_classified_support_resources
;+		(comment "The management and supporting resources that fall under this Security Classification")
		(type INSTANCE)
;+		(allowed-classes EA_Support EA_Support_Relationship)
;+		(inverse-slot sl_security_classifications)
		(create-accessor read-write))
	(multislot app_conceptual_contained_in_arch_states
;+		(comment "The architectures states that contain this conceptual application element")
		(type INSTANCE)
;+		(allowed-classes Architecture_State)
;+		(inverse-slot arch_state_application_conceptual)
		(create-accessor read-write))
	(single-slot pw_function_name
;+		(comment "The base name used for functions that transforms the Data Set API data and render the Widget")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot occurs_after_business_activity
;+		(comment "Dependency on a Business Activity that takes place before this Business Activity in a Business Process. TO BE COMPLETED - NEEDS RELATION CLASS")
		(type STRING)
		(default "NOT COMPLETE")
		(create-accessor read-write))
	(single-slot csrs_contract_review_notice_days
;+		(comment "The number of days prior to contract renewal minimum notice that a contract for a Supplier with this relationship should be reviewed")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot rc_index
;+		(comment "An index for controlling the order in which report criterion are presented")
		(type INTEGER)
		(default 0)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot channel_type
;+		(comment "The parent type of the Channel")
		(type INSTANCE)
;+		(allowed-classes Channel_Type)
;+		(inverse-slot channel_type_channels)
		(create-accessor read-write))
	(multislot impacting_decisions
;+		(comment "Any Decisions that have been made with regards to this element")
		(type INSTANCE)
;+		(allowed-classes Decision)
;+		(inverse-slot decision_elements)
		(create-accessor read-write))
	(multislot cj_products
;+		(comment "Products for which a Persona undertakes the Customer Journey")
		(type INSTANCE)
;+		(allowed-classes Product)
		(create-accessor read-write))
	(multislot bp_supported_by_app_svc
;+		(comment "Specifies the Application Services that support a business process")
		(type INSTANCE)
;+		(allowed-classes APP_SVC_TO_BUS_RELATION)
;+		(inverse-slot appsvc_to_bus_to_busproc)
		(create-accessor read-write))
	(single-slot defines_business_activity
;+		(comment "Slot containing reference to a Business Activity that a Business Activity Flow is defining.")
		(type INSTANCE)
;+		(allowed-classes Business_Activity)
;+		(cardinality 1 1)
;+		(inverse-slot defining_activity_diagram)
		(create-accessor read-write))
	(multislot supports_business_process_appfun
;+		(comment "The Business Processes, Activities or Tasks that an Application Function supports")
		(type INSTANCE)
;+		(allowed-classes APP_FUN_TO_BUS_RELATION)
;+		(inverse-slot appfun_to_bus_from_appfun)
		(create-accessor read-write))
	(single-slot app_func_impl_name
;+		(comment "The given name of the Application Function Implementation, e.g. the name of the Application Provider sub-module (screen, transaction, function, etc.)")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot vs_outcome_events
;+		(comment "Defines the Business Events that occur as a result of the Value Stream being completed")
		(type INSTANCE)
;+		(allowed-classes Business_Event)
		(create-accessor read-write))
	(multislot contained_app_capabilities
;+		(comment "The set of Application Capabilities that are contained in an Application Capability. The containING capability is comprised of the contained capabilities, e.g. enabling a description of functional decomposition at this level of abstraction")
		(type INSTANCE)
;+		(allowed-classes Application_Capability)
;+		(inverse-slot contained_in_application_capability)
		(create-accessor read-write))
	(single-slot contained_in_static_application_provider_architecture
;+		(comment "The static application provider architecture that this relation is defined in")
		(type INSTANCE)
;+		(allowed-classes Static_Application_Provider_Architecture)
;+		(cardinality 0 1)
;+		(inverse-slot uses_provider)
		(create-accessor read-write))
	(single-slot business_process_arch_display_label
;+		(comment "Label displayed for components in business process diagrams")
		(type STRING)
		(default "<process_type_used>")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot strategic_plan_valid_to_date_iso_8601
;+		(comment "The date after which this plan is no longer valid in the enterprise in ISO 8601 format (yyyy-mm-dd)")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot architecture_of_business_model
;+		(comment "The business model that this architecture describes")
		(type INSTANCE)
;+		(allowed-classes Business_Model)
;+		(cardinality 1 1)
;+		(inverse-slot business_model_architecture)
		(create-accessor read-write))
	(multislot planning_action_classes
;+		(comment "Defines the classes of instances that can be assigned to this Planning Action")
		(type INSTANCE)
;+		(allowed-classes %3AESSENTIAL-CLASS)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(multislot al_security_classifications
;+		(comment "The security classifications assigned to this application element in the context of the enterprise")
		(type INSTANCE)
;+		(allowed-classes Security_Classification)
;+		(inverse-slot sc_classified_application_resource)
		(create-accessor read-write))
	(single-slot ra_start_date_iso_8601
;+		(comment "The date from when the resource allocation begins in ISO 8601 format (yyyy-mm-dd)")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot user_first_name
;+		(comment "The given name of the user")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot groups_technology_products
;+		(comment "The set of Technology Products that make up the product family.")
		(type INSTANCE)
;+		(allowed-classes Technology_Provider)
;+		(inverse-slot member_of_technology_product_families)
		(create-accessor read-write))
	(multislot mft_managed_technology_scope
;+		(comment "Defines the scope of technology elements that are controlled by this type of management framework")
		(type INSTANCE)
;+		(allowed-classes Technology_Layer)
		(create-accessor read-write))
	(multislot tao_motivated_by_driver
;+		(comment "The set of drivers that motivate the objective")
		(type INSTANCE)
;+		(allowed-classes Technology_Driver)
;+		(inverse-slot td_motivates_objectives)
		(create-accessor read-write))
	(single-slot usage_of_project_activity
		(type INSTANCE)
;+		(allowed-classes Project_Activity)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot extension_mime_type
;+		(comment "\\\"Multipurpose Internet Mail Extensions. A way of identifying files on the Internet according to their nature and format.")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ca_change_budget
;+		(comment "Used to capture the budget allocation for a change activity")
		(type INSTANCE)
;+		(allowed-classes Budget)
;+		(cardinality 0 1)
;+		(inverse-slot budget_for_change_activity)
		(create-accessor read-write))
	(single-slot essential_baseline_v6_gdpr2_6_IRCadded_Class1
;+		(comment "")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot vs_trigger_events
;+		(comment "Defines the business events that trigger the start of the Value Stream")
		(type INSTANCE)
;+		(allowed-classes Business_Event)
		(create-accessor read-write))
	(multislot bd_has_inf_implications
;+		(comment "The of Information Drivers for which an business driver has implications.")
		(type INSTANCE)
;+		(allowed-classes Information_Driver)
		(create-accessor read-write))
	(single-slot strategic_trend_confidence_percent
;+		(comment "The confidence in percenatage terms that the trend is valid")
		(type FLOAT)
		(range 0.0 1.0)
		(default 1.0)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot cust_journey_phase_to_emotion_from_cust_journey_phase
;+		(comment "The Customer Journey Phase that is related to the Emotion")
		(type INSTANCE)
;+		(allowed-classes Customer_Journey_Phase)
;+		(cardinality 1 1)
;+		(inverse-slot cjp_emotions)
		(create-accessor read-write))
	(single-slot product_is_external
;+		(comment "Defines whether the product is owned by a 3rd party actor")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default FALSE)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot editor_component_config_settings_path
;+		(comment "The path to the file containing the settings required to configure the associated Editor Component")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot pca_principle_assessed
;+		(comment "The principle against which an EA element is being assessed")
		(type INSTANCE)
;+		(allowed-classes Security_Principle Information_Architecture_Principle Business_Principle Application_Architecture_Principle Technology_Architecture_Principle)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot time_point
;+		(comment "The instance of Time represented by this timeline point")
		(type INSTANCE)
;+		(allowed-classes Time)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot amp_assigned_application_elements
;+		(comment "The application elements to which this policy applies")
		(type INSTANCE)
;+		(allowed-classes Application_Function Application_Deployment Application_Service Software_Component Application_Deployment_Group Application_Family Application_Provider_Type)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(multislot policy_controls
;+		(comment "The Controls that have been established to ensure compliance with the Policy")
		(type INSTANCE)
;+		(allowed-classes Control)
;+		(inverse-slot control_related_policy)
		(create-accessor read-write))
	(multislot commentary
;+		(comment "Defines a set of comments that can be associated with an instance. Uses the Commentary instances to enable multi-language translations of each comment.")
		(type INSTANCE)
;+		(allowed-classes Commentary)
;+		(inverse-slot comment_subject)
		(create-accessor read-write))
	(multislot supporting_data_representations
;+		(comment "The Data Representations that comprise this Information Representation")
		(type INSTANCE)
;+		(allowed-classes Data_Representation)
		(create-accessor read-write))
	(single-slot application_deployment_label
;+		(comment "A local name for an instance of an Application_Deployment that does not need to be fully-qualified or unique")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot service_delivery_provider
;+		(comment "The person or group responsible for service delivery")
		(type INSTANCE)
;+		(allowed-classes ACTOR_TO_ROLE_RELATION)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot information_deleted_by_bus_process_types
;+		(comment "DEPRECATED.\\nThe business process types that delete information aligned to this information view")
		(type INSTANCE)
;+		(allowed-classes Business_Process_Type)
;+		(inverse-slot bus_process_type_deletes_information)
		(create-accessor read-write))
	(multislot system_security_read_classification
;+		(comment "Defines the security classification that has been assigned to an element of the repository for READ access")
		(type INSTANCE)
;+		(allowed-classes EA_Content_Classification)
;+		(inverse-slot system_secured_read_elements)
;+		(associated-facet essential_baseline_v5_Class5)
		(create-accessor read-write))
	(single-slot pw_data_set_api
;+		(comment "Defines the API that provides the data set needed to populate the Presentation Widget")
		(type INSTANCE)
;+		(allowed-classes Data_Set_API)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot control_assessments
;+		(comment "DEPRECATED: One or more assessments of the operation of the Control\\n\\nSUPERCEDED BY: controlled_elements")
		(type INSTANCE)
;+		(allowed-classes Control_Assessment)
;+		(inverse-slot assessment_control)
		(create-accessor read-write))
	(multislot bmc_geo_scope
;+		(comment "The Geographic Regions or Locations that are supported by the Business Model Configuration")
		(type INSTANCE)
;+		(allowed-classes Geographic_Region Geographic_Location)
		(create-accessor read-write))
	(multislot report_criteria
;+		(comment "An optional list of criteria and associated scroing scheme that is to be evaluated by the Report")
		(type INSTANCE)
;+		(allowed-classes Report_Criterion)
;+		(inverse-slot rc_report)
		(create-accessor read-write))
	(multislot indivactor_expertise
;+		(comment "The expertise associated with the actor or job position")
		(type INSTANCE)
;+		(allowed-classes ACTOR_TO_EXPERTISE_RELATION)
;+		(inverse-slot actor_to_expertise_from_actor)
		(create-accessor read-write))
	(multislot ao_measures
;+		(comment "Captures the Application Service Qualities Values that will measure success in meeting the Application Objective")
		(type INSTANCE)
;+		(allowed-classes Application_Service_Quality_Value)
		(create-accessor read-write))
	(single-slot report_help_filename
;+		(comment "Slot to define the relative URL to the View Manual for a Report instance. Typically, this is an XSL file.")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot ap_interfaces
;+		(comment "Captures the list interfaces that are available for the Application Provider")
		(type INSTANCE)
;+		(allowed-classes Application_Provider_Interface)
		(create-accessor read-write))
	(single-slot application_function_arch_display_label
;+		(comment "A label for the Application Component Usages when they are displayed in an architecture.")
		(type STRING)
		(default "<component_used>")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot r2psr_report
;+		(comment "The report which will be shown in the portal section")
		(type INSTANCE)
;+		(allowed-classes Report)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot sr_ideas
;+		(comment "The list of ideas that have been generated to potentially address the requirement")
		(type INSTANCE)
;+		(allowed-classes Idea_Option)
;+		(inverse-slot idea_for_strategic_reqs)
		(create-accessor read-write))
	(multislot principle_rationale_synonyms
;+		(comment "Provides synonyms for the rationale of the principle")
		(type INSTANCE)
;+		(allowed-classes Synonym)
		(create-accessor read-write))
	(multislot control_related_technology
;+		(comment "DEPRECATED: The set of technology elements that are related to the control\\n\\nSUPERCEDED BY: controlled_elements")
		(type INSTANCE)
;+		(allowed-classes Technology_Layer)
		(create-accessor read-write))
	(multislot sr_target_service_quality_changes
;+		(comment "The relative changes that are expected to occur for service qualities, if the requirement is met")
		(type INSTANCE)
;+		(allowed-classes Service_Quality_Change)
		(create-accessor read-write))
	(single-slot dra_value_type
;+		(comment "Defines the primitive type of the Data Representation Attribute")
		(type INSTANCE)
;+		(allowed-classes InfoData_Representation_Attribute_Type)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot group_actor_applied_business_model_configurations
;+		(comment "The Business Model Configurations that have been applied in the design of the Group Actor, its processes prerformed and supporting technology")
		(type INSTANCE)
;+		(allowed-classes Business_Model_Configuration)
		(create-accessor read-write))
	(multislot bact_applicable_business_rule
;+		(comment "The set of business rules that apply to the step in a process flow definition.")
		(type INSTANCE)
;+		(allowed-classes Business_Rule)
		(create-accessor read-write))
	(multislot compliant_deployments
;+		(comment "The deployed physical data objects that comply with a Data Standard.")
		(type INSTANCE)
;+		(allowed-classes Physical_Data_Object)
		(create-accessor read-write))
	(multislot parent_physical_processes
;+		(comment "The physical processes in which this physical process is performed")
		(type INSTANCE)
;+		(allowed-classes Physical_Process)
;+		(inverse-slot contained_physical_sub_processes)
		(create-accessor read-write))
	(multislot implemented_with_information_stores
;+		(comment "The physical information stores that implement this information representation")
		(type INSTANCE)
;+		(allowed-classes Information_Store)
;+		(inverse-slot deployment_of_information_representation)
		(create-accessor read-write))
	(multislot tmp_responsible_roles
;+		(comment "The roles that are responsible for adherence to this policy")
		(type INSTANCE)
;+		(allowed-classes Business_Role)
		(create-accessor read-write))
	(single-slot deployment_of_technology_product
;+		(comment "The Technology Product that this group is a set of deployments of.")
		(type INSTANCE)
;+		(allowed-classes Technology_Provider)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot referenced_instance
;+		(comment "Relationship to the instance which is using an External Instance Reference")
		(type INSTANCE)
;+		(allowed-classes EA_Class EA_Relation %3AEA_Graph_Relation)
;+		(cardinality 0 1)
;+		(inverse-slot external_repository_instance_reference)
		(create-accessor read-write))
	(single-slot info_concept_info_domain
;+		(comment "The Information Domain to which this Information Concept belongs")
		(type INSTANCE)
;+		(allowed-classes Information_Domain)
;+		(cardinality 1 1)
;+		(inverse-slot info_domain_contained_info_concepts)
		(create-accessor read-write))
	(single-slot app_to_process_business_criticality
;+		(comment "Describes the business criticality of an application element to the business process type being supported")
		(type INSTANCE)
;+		(allowed-classes Business_Criticality)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot decision_comments
;+		(comment "Slot to manage one or more comments about the decision.")
		(type INSTANCE)
;+		(allowed-classes Commentary)
		(create-accessor read-write))
	(single-slot representation_it_contact
;+		(comment "The IT Contact for an Information Representation")
		(type INSTANCE)
;+		(allowed-classes Actor)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot tl_managed_by_services
;+		(comment "The managed services that are related to this Technology element")
		(type INSTANCE)
;+		(allowed-classes Managed_Service)
;+		(inverse-slot ms_managed_tech_elements)
		(create-accessor read-write))
	(single-slot app_pro_deletes_info_rep
;+		(comment "Determines whether the Application Provider deletes the Information Representation")
		(type SYMBOL)
		(allowed-values Yes No Unknown)
		(default Unknown)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot sti_business_environment_impacts
;+		(comment "The business environment impacts that occur if the implication is realised")
		(type INSTANCE)
;+		(allowed-classes Business_Environment_Factor_Change)
		(create-accessor read-write))
	(single-slot report_pdf_margin_right
;+		(comment "The size of the margin in pixels on the right of the generated report pdf")
		(type INTEGER)
		(range 0 %3FVARIABLE)
		(default 0)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot report_classification_sequence_number
;+		(comment "The number that indicates the ordering of the report classification")
		(type INTEGER)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot instance_of_logical_tech_provider
;+		(comment "Mapping to the use of a Technology Provider in a logical Technology Provider architecture. That is, what is this Technology_Instance being used for")
		(type INSTANCE)
;+		(allowed-classes Technology_Provider_Usage)
;+		(inverse-slot deployed_technology_instances)
		(create-accessor read-write))
	(single-slot ibral_individual_business_role
;+		(comment "The individual business role for which the level is being defined")
		(type INSTANCE)
;+		(allowed-classes Individual_Business_Role)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot strategic_plan_assumptions
;+		(comment "The assumptions being made in the context of the strategic plan")
		(type INSTANCE)
;+		(allowed-classes Assumption)
		(create-accessor read-write))
	(single-slot dynamic_architecture_of_app_fun
;+		(comment "The Application Function that is defined by a Dynamic Application Service Architecture")
		(type INSTANCE)
;+		(allowed-classes Application_Function)
;+		(cardinality 1 1)
;+		(inverse-slot application_function_architecture)
		(create-accessor read-write))
	(multislot contained_technology_instances
;+		(comment "The set of Technology Instances that are deployed to a Technology Deployment")
		(type INSTANCE)
;+		(allowed-classes Technology_Instance)
;+		(inverse-slot technology_instance_deployed_on_node)
		(create-accessor read-write))
	(single-slot license_model
;+		(comment "Relationship from a License instance that defines the licensing model of a license.")
		(type INSTANCE)
;+		(allowed-classes License_Model)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot sr_idea_submission_date_iso8601
;+		(comment "The date (in ISO 8601 format) by when ideas to address the Strategic Requirement should be submitted")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot static_architecture_of_app_provider
;+		(comment "")
		(type INSTANCE)
;+		(allowed-classes Application_Provider)
;+		(cardinality 0 1)
;+		(inverse-slot ap_static_architecture)
		(create-accessor read-write))
	(multislot arch_state_objectives
;+		(comment "The strategic objectives that are met by achieving the architecture state")
		(type INSTANCE)
;+		(allowed-classes Information_Architecture_Objective Business_Objective Application_Architecture_Objective Technology_Architecture_Objective)
		(create-accessor read-write))
	(multislot il_security_classifications
;+		(comment "The security classifications assigned to this information element in the context of the enterprise")
		(type INSTANCE)
;+		(allowed-classes Security_Classification)
;+		(inverse-slot sc_classified_information_resources)
		(create-accessor read-write))
	(single-slot usage_of_application_function
;+		(comment "The Application Function that this is a usage of.")
		(type INSTANCE)
;+		(allowed-classes Application_Function)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot comprised_of_business_activities
;+		(comment "The Business Activities that make up this Business Process.")
		(type INSTANCE)
;+		(allowed-classes Business_Activity)
		(create-accessor read-write))
	(multislot actor_assigned_objectives
;+		(comment "The objectives that have been assigned to the Actor, and for which the Actor is responsible for meeting.")
		(type INSTANCE)
;+		(allowed-classes ACTOR_TO_OBJECTIVE_RELATION)
;+		(inverse-slot act_to_obj_actor)
		(create-accessor read-write))
	(multislot ari_realises_app_reference_architectures
;+		(comment "The Application Reference Architectures that are realised by this Application Reference Implementation")
		(type INSTANCE)
;+		(allowed-classes Application_Reference_Architecture)
;+		(inverse-slot ara_realised_by_app_reference_implementations)
		(create-accessor read-write))
	(multislot business_principles
		(type INSTANCE)
;+		(allowed-classes Business_Principle)
;+		(inverse-slot business_principle_for_business_capabilities)
		(create-accessor read-write))
	(single-slot attribute_value_unit
;+		(comment "The unit by which the attribute value is measured. E.g. A cost attribute might have an attribute_value_unit of Pounds Sterling. A Memory attribute might have the MB unit")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot taxonomy_children
;+		(comment "Slot to hold the classifications that are children of this one in the hierarchy.")
		(type INSTANCE)
;+		(allowed-classes Taxonomy_Term)
;+		(inverse-slot taxonomy_parent)
		(create-accessor read-write))
	(multislot static_product_type_dependencies
;+		(comment "The relations representing dependencies on Product Types")
		(type INSTANCE)
;+		(allowed-classes %3APTU-DEPENDS_ON-PTU)
;+		(inverse-slot %3Acontained_in_static_product_type_architecture)
		(create-accessor read-write))
	(single-slot change_percentage
;+		(comment "A positive or negative percentage change that is occuring")
		(type FLOAT)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot strategic_lifecycle_status
;+		(comment "The internal usage/adoption status of the associated Technology Product when realising the associated Technology Components.")
		(type INSTANCE)
;+		(allowed-classes Lifecycle_Status)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot pwt_width
;+		(comment "The default width of the widget template when rendered")
		(type INTEGER)
		(default 500)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot exception_for_elements
;+		(comment "Relationship to the element(s) for which the exception is granted.")
		(type INSTANCE)
;+		(allowed-classes EA_Class %3AEA_Graph_Relation EA_Relation)
		(create-accessor read-write))
	(single-slot vcl_license
;+		(comment "The license that applies to the 3rd party library")
		(type INSTANCE)
;+		(allowed-classes License)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot td_has_tech_implications
;+		(comment "The set of Technology Drivers for which a information driver has implications.")
		(type INSTANCE)
;+		(allowed-classes Technology_Driver)
		(create-accessor read-write))
	(single-slot policy_rationale
;+		(comment "Describes the reasons why the Policy has been put in place")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot bd_has_app_implications
;+		(comment "The of Application Drivers for which an business driver has implications.")
		(type INSTANCE)
;+		(allowed-classes Application_Driver)
		(create-accessor read-write))
	(single-slot type_of_event
;+		(comment "Slot to hold the (optionally) related Conceptual Business Event that a Business Event is a type of.")
		(type INSTANCE)
;+		(allowed-classes Conceptual_Business_Event)
;+		(cardinality 0 1)
;+		(inverse-slot implemented_by_business_events)
		(create-accessor read-write))
	(single-slot actor_to_expertise_is_aspiration
;+		(comment "")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default FALSE)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot contained_sub_actors
;+		(comment "The set of actors that are members of this Actor, e.g. when an Actor represents a group or department, the sub-actors define the teams and members of that department.")
		(type INSTANCE)
;+		(allowed-classes Actor)
;+		(inverse-slot is_member_of_actor)
		(create-accessor read-write))
	(single-slot ca_innovation_changes
		(type STRING)
;+		(cardinality 0 1)
;+		(inverse-slot idea_to_element_change_activity)
		(create-accessor read-write))
	(multislot correlation_dependency_correlations
;+		(comment "The pairs of percentage values that represent the correlations between the elements")
		(type INSTANCE)
;+		(allowed-classes Correlation)
		(cardinality 1 ?VARIABLE)
;+		(inverse-slot correlation_for_dependency)
		(create-accessor read-write))
	(single-slot correlation_for_dependency
;+		(comment "The dependency against which this correlation is defined")
		(type INSTANCE)
;+		(allowed-classes Correlation_Dependency)
;+		(cardinality 1 1)
;+		(inverse-slot correlation_dependency_correlations)
		(create-accessor read-write))
	(single-slot total_instances_information_store
;+		(comment "The total number of instances of an Information Store that the Information Group represents.")
		(type INTEGER)
		(default 1)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot service_quality_value_score
;+		(comment "Defines an integer value for the Service Quality Value")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot tech_node_to_tech_node_to_tech_node
;+		(comment "The Technology Node to which the connection is established")
		(type INSTANCE)
;+		(allowed-classes Technology_Node)
;+		(cardinality 1 1)
;+		(inverse-slot technology_node_inbound_connections)
		(create-accessor read-write))
	(multislot bpf_contained_business_process_types
;+		(comment "DEPRECTAED: REPLACED BY DIRECT RELATIONSHIP\nThe business processes, activities or tasks that form this business process family")
		(type INSTANCE)
;+		(allowed-classes BUSPROCTYPE_IN_BUSPROCFAM_RELATION)
;+		(inverse-slot busprocttype_to_busprocfam_busprocfam)
		(create-accessor read-write))
	(multislot strategic_objectives
		(type INSTANCE)
;+		(allowed-classes Business_Objective)
;+		(inverse-slot objective_for_business_domains)
		(create-accessor read-write))
	(multislot supports_technology_objectives
;+		(comment "")
		(type INSTANCE)
;+		(allowed-classes Technology_Architecture_Objective)
;+		(inverse-slot objective_supported_by_technology_principles)
		(create-accessor read-write))
	(single-slot report_implementation_type
;+		(comment "Defines the implemenation approach used for the report")
		(type INSTANCE)
;+		(allowed-classes Report_Implementation_Type)
		(default [viewer3_devrep_14032012_003_Class10015])
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot system_ea_reference_auto_create_current_status_message
;+		(comment "Contains any messages related to the current status of this EA reference auto create schema, e.g. issues with duplicate prefixes, malformed paths etc")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot deployed_as_technology_node
;+		(comment "Slot holding references to the Technology Nodes that a Technology Provider has been deployed as. e.g. a server technology provider used to instantiate a Node")
		(type INSTANCE)
;+		(allowed-classes Technology_Node)
;+		(inverse-slot used_in_technology_build)
		(create-accessor read-write))
	(single-slot product_lifecycle_status
;+		(comment "The current lifecycle status of the Product")
		(type INSTANCE)
;+		(allowed-classes Product_Lifecycle_Status)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot system_slot_relationship_type
;+		(comment "Defines the natrue of the relationship defined by the slot")
		(type SYMBOL)
		(allowed-values SYS_CONTAINED_IN SYS_COMPOSED_OF)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot used_in_static_app_provider_architecture
;+		(comment "The static application provider architecture that this component is used in")
		(type INSTANCE)
;+		(allowed-classes Static_Application_Provider_Architecture)
;+		(cardinality 0 1)
;+		(inverse-slot static_app_provider_architecture_elements)
		(create-accessor read-write))
	(single-slot bmcr_required_from_date_ISO8601
;+		(comment "The date (in YYYY-MM-DD format) from when the enterprise element is required for the Business Model Configuration")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot info_domain_contained_info_concepts
;+		(comment "The Information Concepts that are categorised by this Information Domain")
		(type INSTANCE)
;+		(allowed-classes Information_Concept)
;+		(inverse-slot info_concept_info_domain)
		(create-accessor read-write))
	(single-slot data_attribute_label
;+		(comment "A short name for the data object attribute")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot ea_subject_to_regulations
;+		(comment "The Regulations that are relevant to this element")
		(type INSTANCE)
;+		(allowed-classes REGULATED_COMPONENT_RELATION)
;+		(inverse-slot regulated_component_to_element)
		(create-accessor read-write))
	(single-slot representation_namespace
;+		(comment "Defines a fully qualified namespace for the information representation")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot app_principle_bus_implications
;+		(comment "Commentary describing the business implications of the application principle")
		(type STRING)
		(create-accessor read-write))
	(single-slot crl_ref
;+		(comment "A unique reference for this  remediation level enumeration value")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot %3Aroadmap_strategic_plans
;+		(comment "The set of strategic plans that are in place to ensure that the transition to a new milestone is realised.")
		(type INSTANCE)
;+		(allowed-classes Strategic_Plan)
		(create-accessor read-write))
	(multislot product_type_produced_by_process
;+		(comment "The Business Processes that produce the product type.")
		(type INSTANCE)
;+		(allowed-classes Business_Process_Type)
		(create-accessor read-write))
	(single-slot technology_deployment_located_at
;+		(comment "The Site at which this physical deployment is located.")
		(type INSTANCE)
;+		(allowed-classes Site)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot deployed_information_store_instances
;+		(comment "The physical instances that have been deployed for this Information Store")
		(type INSTANCE)
;+		(allowed-classes Information_Store_Instance)
;+		(inverse-slot instance_of_information_store)
		(create-accessor read-write))
	(multislot bus_process_type_creates_information
;+		(comment "DEPRECATED.\\nthe set of Information Views that this process creates")
		(type INSTANCE)
;+		(allowed-classes Information_View_Type)
;+		(inverse-slot information_created_by_bus_process_types)
		(create-accessor read-write))
	(multislot lifecycle_status_org_scope
;+		(comment "Defines the organisational scope for the Lifecycle Status. e.g. to set the strategic standard for a Technology Product for a particular part of the organisation.")
		(type INSTANCE)
;+		(allowed-classes Actor)
		(create-accessor read-write))
	(single-slot tn_business_criticality
;+		(comment "Allows for the explicit capture of the relative business criticality of the Technology Node")
		(type INSTANCE)
;+		(allowed-classes Business_Criticality)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot contract_component_from_contract
;+		(comment "Slot that holds the Contract that is part of the relation.")
		(type INSTANCE)
;+		(allowed-classes Contract)
;+		(cardinality 1 1)
;+		(inverse-slot contract_for)
		(create-accessor read-write))
	(multislot realised_by_data_objects
;+		(comment "Slot to manage the set of Data Objects that realise a Data Subject")
		(type INSTANCE)
;+		(allowed-classes Data_Object)
;+		(inverse-slot defined_by_data_subject)
		(create-accessor read-write))
	(multislot project_technology_requirements
;+		(comment "DEPRECATED. The technology capabilities required by the solution that a project is implementing")
		(type INSTANCE)
;+		(allowed-classes Technology_Capability)
		(create-accessor read-write))
	(multislot performs_business_process
;+		(comment "The business process that this Business Role performs.")
		(type INSTANCE)
;+		(allowed-classes Business_Process_Type)
;+		(inverse-slot business_process_performed_by_business_role)
		(create-accessor read-write))
	(multislot ad_has_tech_implications
;+		(comment "The of Technology Drivers for which an application driver has implications.")
		(type INSTANCE)
;+		(allowed-classes Technology_Driver)
		(create-accessor read-write))
	(multislot sp_resources
;+		(comment "The resources against which the Security Policy is defined")
		(type INSTANCE)
;+		(allowed-classes Business_Role Business_Process_Type Site Information_View_Type Data_Object_Type Technology_Node Security_Classification Data_Representation_Type Information_Representation_Type)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(single-slot synonym_language
;+		(comment "A spoken or written human language in which the synonym is captured")
		(type INSTANCE)
;+		(allowed-classes Language)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot budget_for_change_activity
;+		(comment "The change activity against this budget has been allocated")
		(type INSTANCE)
;+		(allowed-classes Change_Activity)
;+		(cardinality 0 1)
;+		(inverse-slot ca_change_budget)
		(create-accessor read-write))
	(multislot need_related_business
;+		(comment "DEPRECATED: The set of business elements that are related to the need.\\n\\nREPLACED BY: sr_requirement_for_elements")
		(type INSTANCE)
;+		(allowed-classes Business_Layer)
		(create-accessor read-write))
	(single-slot buscap_to_parent_child_buscap
;+		(comment "The child Business Capability in the relationship")
		(type INSTANCE)
;+		(allowed-classes Business_Capability)
;+		(cardinality 1 1)
;+		(inverse-slot buscap_contextual_supports_buscap)
		(create-accessor read-write))
	(single-slot modal_report_js_name
;+		(comment "Provide a short, javascript compatible name for the modal report which is also used for the DOM element (DIV) containing the modal")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot control_index
;+		(comment "Allows for sequencing of controls")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot sc_classified_business_resources
;+		(comment "The business resources that fall under this Security Classification")
		(type INSTANCE)
;+		(allowed-classes Business_Layer Business_Relationship)
;+		(inverse-slot bl_security_classifications)
		(create-accessor read-write))
	(multislot pmc_measures_ea_classes
;+		(comment "The meta-classes to which this category of performance measure should be applied")
		(type INSTANCE)
;+		(allowed-classes %3AESSENTIAL-CLASS)
		(create-accessor read-write))
	(single-slot app_pro_updates_data_rep
;+		(comment "Determines whether the Application Provider updates instances of the Data Representation")
		(type SYMBOL)
		(allowed-values Yes No Unknown)
		(default Unknown)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot contained_sites
;+		(comment "Sites that are located within a Site.")
		(type INSTANCE)
;+		(allowed-classes Site)
		(create-accessor read-write))
	(single-slot buscap_to_parent_role
;+		(comment "The")
		(type INSTANCE)
;+		(allowed-classes Business_Capability_Role)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot provides_application_functions
;+		(comment "The Application Functions that this service provides.")
		(type INSTANCE)
;+		(allowed-classes Application_Function)
;+		(inverse-slot provided_by_application_service)
		(create-accessor read-write))
	(multislot contained_business_domains
;+		(comment "Instances of sub domains of a Business Domain.")
		(type INSTANCE)
;+		(allowed-classes Business_Domain)
		(create-accessor read-write))
	(multislot vsg_required_business_capabilities
;+		(comment "Defines the list of business capabilities required to deliver this Value Stage")
		(type INSTANCE)
;+		(allowed-classes Business_Capability)
		(create-accessor read-write))
	(single-slot cc_cost_component_of_cost
;+		(comment "The overall cost that this component is contained within")
		(type INSTANCE)
;+		(allowed-classes Cost)
;+		(cardinality 1 1)
;+		(inverse-slot cost_components)
		(create-accessor read-write))
	(multislot compliant_implementations
;+		(comment "Describes the Data_Representations that comply with the standard and can be used to implement the Data Object Standard")
		(type INSTANCE)
;+		(allowed-classes Data_Representation)
		(create-accessor read-write))
	(single-slot application_communication_method
;+		(comment "The communication style that is employed for this relation. Either synchronous or asynchronous.")
		(type SYMBOL)
		(allowed-values Synchronous Asynchronous)
		(default Synchronous)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot project_technology_architecture
;+		(comment "DEPRECATED. The architecture of the technology products used for the solution that a project is implementing")
		(type INSTANCE)
;+		(allowed-classes Technology_Provider)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot vsg_exit_conditions
;+		(comment "Defines the business conditions that must be met to complete the value stage")
		(type INSTANCE)
;+		(allowed-classes Business_Condition)
		(create-accessor read-write))
	(multislot br_responsibility_categories
;+		(comment "Defines the nature of the stakeholder relationships associated with this role")
		(type INSTANCE)
;+		(allowed-classes Role_Responsibility_Category)
		(create-accessor read-write))
	(multislot editor_component_for_specific_slots
;+		(comment "Any slots that this Editor Component specifically supports")
		(type INSTANCE)
;+		(allowed-classes %3AESSENTIAL-SLOT)
		(create-accessor read-write))
	(multislot product_supporting_products
;+		(comment "The products that support the delivery of this product")
		(type INSTANCE)
;+		(allowed-classes Product)
		(create-accessor read-write))
	(multislot objective_relevant_to_technology_capabilities
;+		(comment "")
		(type INSTANCE)
;+		(allowed-classes Technology_Capability)
;+		(inverse-slot capability_relevant_to_technology_objectives)
		(create-accessor read-write))
	(single-slot principle_ref
;+		(comment "A unique internal reference for the principle")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot planning_action_supporting_actions
;+		(comment "The list of planning actions that are additionally undertaken alongside this planning action")
		(type INSTANCE)
;+		(allowed-classes Planning_Action)
		(create-accessor read-write))
	(single-slot app_pro_creates_info_rep
;+		(comment "Determines whether the Application Provider creates the Information Representation")
		(type SYMBOL)
		(allowed-values Yes No Unknown)
		(default Unknown)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot system_content_quality_review_to_actor_previous_assignment
;+		(comment "The actor that was previously assigned to this Content Quality Review")
		(type INSTANCE)
;+		(allowed-classes SYS_CONTENT_QUALITY_REVIEW_TO_ACTOR_RELATION)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ccr_contract_unit_of_measure
;+		(comment "The unit of measure used when defining the scale of use of the EA element")
		(type INSTANCE)
;+		(allowed-classes License_Model)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot cc_cost_component_type
;+		(comment "The type of the cost component (e.g. hosting, wages, licensing)")
		(type INSTANCE)
;+		(allowed-classes Cost_Component_Type)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot sc_classified_information_resources
;+		(comment "The information and data resources that fall under this Security Classification")
		(type INSTANCE)
;+		(allowed-classes Information_Layer Information_Relationship)
;+		(inverse-slot il_security_classifications)
		(create-accessor read-write))
	(multislot ao_motivated_by_driver
;+		(comment "The set of drivers that motivate the objective")
		(type INSTANCE)
;+		(allowed-classes Application_Driver)
;+		(inverse-slot ad_motivated_objectives)
		(create-accessor read-write))
	(single-slot usage_of_technology_component
		(type INSTANCE)
;+		(allowed-classes Technology_Component)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot tech_product_role_label
;+		(comment "The display label to be used for a Technology Product Role")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot bp_supported_by_app_fun
;+		(comment "Specifies the Application Functions that support a business process")
		(type INSTANCE)
;+		(allowed-classes APP_FUN_TO_BUS_RELATION)
;+		(inverse-slot appfun_to_bus_to_busproc)
		(create-accessor read-write))
	(multislot portal_panels
;+		(comment "")
		(type INSTANCE)
;+		(allowed-classes Portal_Panel)
;+		(inverse-slot panel_for_portal)
		(create-accessor read-write))
	(single-slot control_solution_assessor
;+		(comment "The individual or organisation that undertook the assessment")
		(type INSTANCE)
;+		(allowed-classes Actor)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot plan_to_element_ea_element
;+		(comment "The EA element that is impacted by the plan")
		(type INSTANCE)
;+		(allowed-classes Business_Relationship Information_Relationship Technology_Layer %3AEA_Graph_Relation Information_Layer Application_Relationship Business_Layer Application_Layer Governance Obligation_Management Service_Delivery Security_Management)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supplier_url
;+		(comment "A URL to the suppliers website")
		(type STRING)
		(default "http://")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot value_stage_to_emotion_from_value_stage
;+		(comment "The Value Stage that is related to the Emotion")
		(type INSTANCE)
;+		(allowed-classes Value_Stage)
;+		(cardinality 1 1)
;+		(inverse-slot vsg_emotions)
		(create-accessor read-write))
	(single-slot contained_in_project
;+		(comment "the project that this project activity is part of")
		(type INSTANCE)
;+		(allowed-classes Project)
;+		(cardinality 0 1)
;+		(inverse-slot project_activities)
		(create-accessor read-write))
	(multislot sr_target_revenue_changes
;+		(comment "The relative changes to revenues that are expected to occur, if the requirement is met")
		(type INSTANCE)
;+		(allowed-classes Revenue_Component_Change)
		(create-accessor read-write))
	(single-slot panel_for_portal
;+		(comment "Parent Portal for this panel")
		(type INSTANCE)
;+		(allowed-classes Portal)
;+		(cardinality 1 1)
;+		(inverse-slot portal_panels)
		(create-accessor read-write))
	(multislot application_service_qualities_apr
;+		(comment "The service qualities associated with the Application Provider ability to provide the Application Service")
		(type INSTANCE)
;+		(allowed-classes Application_Service_Quality_Value)
		(create-accessor read-write))
	(multislot data_read_by_app_func_impls
;+		(comment "DEPRECATED.")
		(type INSTANCE)
;+		(allowed-classes Application_Function_Implementation)
;+		(inverse-slot app_func_impl_reads_data_from)
		(create-accessor read-write))
	(single-slot business_model_architecture
;+		(comment "The architecture that describes the dependencies between the conceptual elements required to deliver the Business Model")
		(type INSTANCE)
;+		(allowed-classes Business_Model_Architecture)
;+		(cardinality 0 1)
;+		(inverse-slot architecture_of_business_model)
		(create-accessor read-write))
	(single-slot instance_of_information_store
;+		(comment "The Information Store that has been deployed as this Instance")
		(type INSTANCE)
;+		(allowed-classes Information_Store)
;+		(cardinality 1 1)
;+		(inverse-slot deployed_information_store_instances)
		(create-accessor read-write))
	(multislot bo_motivated_by_driver
;+		(comment "The set of drivers that motivate the objective")
		(type INSTANCE)
;+		(allowed-classes Business_Driver)
;+		(inverse-slot bd_motivated_objectives)
		(create-accessor read-write))
	(single-slot progress_requires_approval
;+		(comment "Defines whether progression from this lifecycle status requires approval")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default FALSE)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot bmc_for_business_model
;+		(comment "The Business Model of which this is a context specific configuration")
		(type INSTANCE)
;+		(allowed-classes Business_Model)
;+		(cardinality 1 1)
;+		(inverse-slot business_model_configurations)
		(create-accessor read-write))
	(multislot skill_required_by_roles
;+		(comment "Relationship to the Business Role-to-Skill relation instances that capture the Roles that require an instance of a Skill")
		(type INSTANCE)
;+		(allowed-classes ROLE_TO_SKILL_RELATION)
;+		(inverse-slot to_skill_role_relation)
		(create-accessor read-write))
	(multislot contained_technology_capabilities
;+		(comment "The set of Technology Capabilities that are contained in a Capability.")
		(type INSTANCE)
;+		(allowed-classes Technology_Capability)
		(create-accessor read-write))
	(single-slot support_provider
;+		(comment "The person or group responsible for providing support")
		(type INSTANCE)
;+		(allowed-classes ACTOR_TO_ROLE_RELATION)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot capability_relevant_to_technology_objectives
		(type INSTANCE)
;+		(allowed-classes Technology_Architecture_Objective)
;+		(inverse-slot objective_relevant_to_technology_capabilities)
		(create-accessor read-write))
	(multislot app_cap_supports_bus_cap
;+		(comment "The set of Business Capabilities that the Application Capability supports.")
		(type INSTANCE)
;+		(allowed-classes Business_Capability)
;+		(inverse-slot bus_cap_supporting_app_caps)
		(create-accessor read-write))
	(single-slot business_model_architecture_type_label
;+		(comment "The display label to be used for the usage of the conceptual element")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot system_content_quality_last_reviewed_datetime_iso8601
;+		(comment "The date and time that the content quality of this element was reviewed")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot inverse_of_contained_techProd_components
;+		(comment "Reference to the architecture that this usage appears in")
		(type INSTANCE)
;+		(allowed-classes Technology_Product_Architecture)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot rdu_permitted_use
;+		(comment "The business capability or business process that defines the purpose for using the regulated data")
		(type INSTANCE)
;+		(allowed-classes Business_Capability Business_Process_Type)
;+		(cardinality 1 1)
;+		(inverse-slot regulated_data_usages)
		(create-accessor read-write))
	(multislot related_business_elements
;+		(comment "DEPRECATED: Business EA elements that are related to this issue\\n\\nREPLACED BY: sr_requirement_for_elements")
		(type INSTANCE)
;+		(allowed-classes Business_Capability Business_Process Physical_Process Actor)
;+		(inverse-slot known_business_issues)
		(create-accessor read-write))
	(single-slot appfun_to_bus_from_appfun
;+		(comment "The Application Function that is supporting a process")
		(type INSTANCE)
;+		(allowed-classes Application_Function)
;+		(cardinality 1 1)
;+		(inverse-slot supports_business_process_appfun)
		(create-accessor read-write))
	(single-slot sti_latest_impact_date_iso_8601
;+		(comment "The latest date from when the impacts of the trend implication are expected to take effect")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot app_fun_impl_to_tech_FROM_app
;+		(comment "The Application Function Implementation that requires a Technology Capability in an APP_FUNCIMP_TO_TECH_CAP_RELATION")
		(type INSTANCE)
;+		(allowed-classes Application_Function_Implementation)
;+		(cardinality 1 1)
;+		(inverse-slot app_fun_impl_requires_tech_cap)
		(create-accessor read-write))
	(multislot bus_physical_contained_in_arch_states
;+		(comment "The architecture states that contain this physical business element")
		(type INSTANCE)
;+		(allowed-classes Architecture_State)
;+		(inverse-slot arch_state_business_physical)
		(create-accessor read-write))
	(single-slot system_cq_polcy_to_role_from_policy
;+		(comment "The Content Quality Review or Escalation Policy to which the Individual Role is being assigned")
		(type INSTANCE)
;+		(allowed-classes SYS_CONTENT_QUALITY_REVIEW_POLICY SYS_CONTENT_QUALITY_ESCALATION_POLICY)
;+		(cardinality 1 1)
;+		(inverse-slot system_cq_policy_assigned_role)
		(create-accessor read-write))
	(single-slot supplier_relationship_status
;+		(comment "Defines the nature of the relationship between the enterprise and the Supplier")
		(type INSTANCE)
;+		(allowed-classes Supplier_Relationship_Status)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot strat_plan_meets_requirement
;+		(comment "The requirements that are being met by the Strategic Plan.")
		(type INSTANCE)
;+		(allowed-classes Strategic_Requirement)
;+		(inverse-slot resolved_by)
		(create-accessor read-write))
	(multislot ms_managed_app_elements
;+		(comment "Defines the application elements that contribute to the service")
		(type INSTANCE)
;+		(allowed-classes Application_Relationship Application_Layer)
;+		(inverse-slot al_managed_by_services)
		(create-accessor read-write))
	(multislot busprocttype_to_busprocfam_standard_geo_scope
;+		(comment "The geographic scope for which the Business Process Type is a standard for the Business Process Family")
		(type INSTANCE)
;+		(allowed-classes Geographic_Region)
		(create-accessor read-write))
	(multislot instance_of_product_type
;+		(comment "The Product Type(s) that a Product is an instance of.")
		(type INSTANCE)
;+		(allowed-classes Product_Type)
;+		(inverse-slot product_type_instances)
		(create-accessor read-write))
	(multislot tech_conceptual_contained_in_arch_states
;+		(comment "The architecture states that contain this conceptual technology element")
		(type INSTANCE)
;+		(allowed-classes Architecture_State)
;+		(inverse-slot arch_state_technology_conceptual)
		(create-accessor read-write))
	(single-slot business_principle_rationale
;+		(comment "")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot report_group_image_file
;+		(comment "The name of the image file associated with the report group")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot ap_IT_owner
;+		(comment "DEPRECATED. USE STAKEHOLDERS SLOT. The IT owner for this application provider")
		(type INSTANCE)
;+		(allowed-classes Actor)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ra_resource_consumer
;+		(comment "The element to which the resource has been allocated")
		(type INSTANCE)
;+		(allowed-classes Group_Actor Change_Activity)
;+		(cardinality 1 1)
;+		(inverse-slot allocated_resources)
		(create-accessor read-write))
	(single-slot system_content_quality_escalation_to_actor_from_review
;+		(comment "The Content Quality Review that is being escalated")
		(type INSTANCE)
;+		(allowed-classes SYS_CONTENT_QUALITY_REVIEW)
;+		(cardinality 1 1)
;+		(inverse-slot system_content_quality_review_escalations)
		(create-accessor read-write))
	(multislot persona_customer_journeys
;+		(comment "The Customer Journeys that are undertaken by this Persona")
		(type INSTANCE)
;+		(allowed-classes Customer_Journey)
;+		(inverse-slot cj_persona)
		(create-accessor read-write))
	(single-slot cc_cost_start_date_iso_8601
;+		(comment "The start date for the cost component in ISO 8601 format (yyyy-mm-dd)")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot control_related_policy
;+		(comment "Relationship to the Policies that is being implemented by this Control")
		(type INSTANCE)
;+		(allowed-classes Policy)
;+		(inverse-slot policy_controls)
		(create-accessor read-write))
	(single-slot ivs_standardised_info_view
;+		(comment "Select the information view that is being standardised")
		(type INSTANCE)
;+		(allowed-classes Information_View)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot tpr_has_standard_specs
;+		(comment "The standard specifications that have been defined for the use of the Technology Provider in this role")
		(type INSTANCE)
;+		(allowed-classes Technology_Provider_Standard_Specification)
;+		(inverse-slot tps_standard_tech_provider_role)
		(create-accessor read-write))
	(single-slot app_pro_data_acquisition_method
;+		(comment "Describes the mechanism used by the Application to acquire the data")
		(type INSTANCE)
;+		(allowed-classes Data_Acquisition_Method)
		(default [essential_baseline_v2.0_Class20000])
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot technology_node_inbound_connections
;+		(comment "Defines the inbound connections to this Technology Node from other Technology Nodes")
		(type INSTANCE)
;+		(allowed-classes TECH_NODE_TO_TECH_NODE_CONNECTION)
;+		(inverse-slot tech_node_to_tech_node_to_tech_node)
		(create-accessor read-write))
	(multislot application_reference_implementation_elements
;+		(comment "The elements that comprise the Application Reference Implementation Model")
		(type INSTANCE)
;+		(allowed-classes Application_Reference_Implementation_Type)
;+		(inverse-slot arimt_used_in_application_reference_implementation)
		(create-accessor read-write))
	(single-slot system_content_lifecycle_status
;+		(comment "Defines the lifecycle status of an EA element in support of content approval")
		(type INSTANCE)
;+		(allowed-classes SYS_CONTENT_APPROVAL_STATUS)
		(default [essential_baseline_6.5.4_Class67])
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot busproctype_creates_infoview
;+		(comment "Defines whether the Business Process Type creates the Information View")
		(type SYMBOL)
		(allowed-values Yes No Unknown)
		(default Unknown)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot inverse_of_contained_physical_sub_processes
;+		(comment "The physical process aggregations that in which a Physical Process appears.")
		(type INSTANCE)
;+		(allowed-classes Physical_Process)
		(create-accessor read-write))
	(multislot business_domain_contains_bus_capabilities
;+		(comment "The Business Capabilities that belong to this Business Domain")
		(type INSTANCE)
;+		(allowed-classes Business_Capability)
;+		(inverse-slot belongs_to_business_domains)
		(create-accessor read-write))
	(multislot risk_related_support
;+		(comment "The set of EA Support elements that are related to the risk")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
		(create-accessor read-write))
	(multislot bt_applicable_business_rule
;+		(comment "The set of business rules that apply to the step in a business activity flow definition.")
		(type INSTANCE)
;+		(allowed-classes Business_Rule)
		(create-accessor read-write))
	(multislot business_reference_architecture_elements
;+		(comment "The usages of Business Processes that comprise the Business Reference Architecure")
		(type INSTANCE)
;+		(allowed-classes Business_Reference_Architecture_Type)
;+		(inverse-slot bramt_used_in_business_reference_architecture)
		(create-accessor read-write))
	(single-slot obligation_component_from_obligation
;+		(comment "The obligation that is impacting the element")
		(type INSTANCE)
;+		(allowed-classes Compliance_Obligation Contractual_Obligation)
;+		(cardinality 1 1)
;+		(inverse-slot obligation_applies_to)
		(create-accessor read-write))
	(multislot sc_classified_application_resource
;+		(comment "The application resources that fall under this Security Classification")
		(type INSTANCE)
;+		(allowed-classes Application_Layer Application_Relationship)
;+		(inverse-slot al_security_classifications)
		(create-accessor read-write))
	(single-slot bmc_label
;+		(comment "The display label for the Business Model Configuration")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot pmc_defines_instances_of_performance_measure_class
;+		(comment "The sub class of Performance Measure that is defined by the Performance Measure Category")
		(type INSTANCE)
;+		(allowed-classes %3AESSENTIAL-CLASS)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot start_date_iso_8601
;+		(comment "The date from which this architecture is relevant to the enterprise in ISO 8601 format (yyyy-mm-dd)")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3Acontained_in_static_product_type_architecture
;+		(comment "The Static Product Type Architecture within which this dependency relationship is contained")
		(type INSTANCE)
;+		(allowed-classes Static_Product_Type_Architecture)
;+		(cardinality 1 1)
;+		(inverse-slot static_product_type_dependencies)
		(create-accessor read-write))
	(single-slot rcs_criterion
;+		(comment "The criterion against which this score is assessed")
		(type INSTANCE)
;+		(allowed-classes Report_Criterion)
;+		(cardinality 1 1)
;+		(inverse-slot rc_scores)
		(create-accessor read-write))
	(multislot rdu_consent_information_stores
;+		(comment "The information stores that are used to persist records of consent that has been given")
		(type INSTANCE)
;+		(allowed-classes Information_Store Information_Representation)
		(create-accessor read-write))
	(single-slot application_deployment_technical_arch
;+		(comment "Specify the logical technical provider architecture that is being used to deploy this Application")
		(type INSTANCE)
;+		(allowed-classes Technology_Provider)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot exception_granted_date_iso_8601
;+		(comment "The date on which the exception was granted in ISO 8601 format (yyyy-mm-dd)")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot budget_end_date
;+		(comment "The end date up to which a budgetary element is defined")
		(type INSTANCE)
;+		(allowed-classes Gregorian)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot cost_responsible_group
;+		(comment "The actor or role that is responsible for paying the Cost")
		(type INSTANCE)
;+		(allowed-classes Business_Role Actor)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot data_attribute_cardinality
;+		(comment "Slot to capture the cardinality of a data attribute (based on UML-style Cardinality notation).")
		(type INSTANCE)
;+		(allowed-classes Data_Attribute_Cardinality)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot data_standard_relationships
;+		(comment "The set of relationships between that a Data Standard has with other Data Standards")
		(type INSTANCE)
;+		(allowed-classes Info_Data_Standard_Relationship)
;+		(inverse-slot from_data_standard_relation)
		(create-accessor read-write))
	(single-slot system_cq_review_policy_notice_period
;+		(comment "The number of days notice that content reviewers should be given prior to being notified that an instance requires review")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot editor_is_external
;+		(comment "Defines whether the Editor is delivered by the Essential Viewer platform")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default FALSE)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot pm_measured_element
;+		(comment "The element for which performance is being measured")
		(type INSTANCE)
;+		(allowed-classes EA_Class EA_Relation)
;+		(cardinality 1 1)
;+		(inverse-slot performance_measures)
		(create-accessor read-write))
	(multislot contained_activity_relations
;+		(comment "The set of relations between the Tasks that comprise a Business Activity. These relations define the flow of preceeding task to next task.")
		(type INSTANCE)
;+		(allowed-classes %3ABA-DIAGRAM-RELATION)
;+		(inverse-slot contained_in_activity_flow)
		(create-accessor read-write))
	(multislot ibral_required_skill_at_levels
;+		(comment "The skills at specific levels that are required for the role at this level")
		(type INSTANCE)
;+		(allowed-classes ROLE_TO_SKILL_RELATION)
;+		(inverse-slot from_role_skill_relation)
		(create-accessor read-write))
	(single-slot pws_style_values
;+		(comment "A string representation of a JSON object representing the css style property values")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot strategic_plan_valid_to_date
;+		(comment "The date after which this plan is no longer valid in the enterprise")
		(type INSTANCE)
;+		(allowed-classes Time)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot system_cq_escalation_policy_interval
;+		(comment "The number of days after the associated interval of the associated Content Review Policy or previous Escalation Policy, when this Escalation Policy should be enacted")
		(type INTEGER)
		(range 1 %3FVARIABLE)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot bmbu_used_business_capability
;+		(comment "The Business Capability that is being used in a Business Model Architecture")
		(type INSTANCE)
;+		(allowed-classes Business_Capability Business_Process_Type)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot FROM
;+		(comment "The slot that holds a reference to the EAS_Class on the FROM side of the relationship")
		(type INSTANCE)
;+		(allowed-classes EA_Class)
;+		(cardinality 0 1)
;+		(inverse-slot from_earelation_elements)
		(create-accessor read-write))
	(single-slot system_content_quality_review_completion_datetime_iso8601
;+		(comment "The date and time when this Content Quality Review was completed")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot automates_business_process_appfun
;+		(comment "The Business Processes, Tasks or Activities that are automated by an Application Function")
		(type INSTANCE)
;+		(allowed-classes Business_Process_Type)
		(create-accessor read-write))
	(multislot uses_information_representation
;+		(comment "Describes the set of Information Representations that are used (created, read, updated, deleted)")
		(type INSTANCE)
;+		(allowed-classes APP_PRO_TO_INFOREP_RELATION)
;+		(inverse-slot app_pro_to_inforep_from_app)
		(create-accessor read-write))
	(multislot static_app_provider_architecture_elements
;+		(comment "")
		(type INSTANCE)
;+		(allowed-classes Static_Application_Provider_Architecture_Type)
;+		(inverse-slot used_in_static_app_provider_architecture)
		(create-accessor read-write))
	(single-slot ccr_contracted_units
;+		(comment "The quantity of a given unit of measure of the EA element available for use under the Contract")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot rc_revenue_component_of_revenue
;+		(comment "The overall revenue whithin which this component is contained")
		(type INSTANCE)
;+		(allowed-classes Revenue)
;+		(cardinality 1 1)
;+		(inverse-slot revenue_components)
		(create-accessor read-write))
	(multislot contains_operating_model_categories
;+		(comment "The sub-categories of this Operating Model Category")
		(type INSTANCE)
;+		(allowed-classes Operating_Model_Category)
;+		(inverse-slot contained_in_operating_model_category)
		(create-accessor read-write))
	(single-slot programme_manager
;+		(comment "DEPRECATED. USE STAKEHOLDER SLOT. \nThe individual responsible for the delivery of the programme")
		(type INSTANCE)
;+		(allowed-classes Actor)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass %3AESSENTIAL-CLASS "Meta-meta class for all Essential meta classes. Adds additional attributes on these meta classes for managing i18n and system security"
	(is-a %3ASTANDARD-CLASS)
	(role concrete)
	(multislot system_security_edit_classification
;+		(comment "Defines the security classification that has been assigned to an element of the repository for EDIT access")
		(type INSTANCE)
;+		(allowed-classes EA_Content_Classification)
		(create-accessor read-write))
	(multislot system_essential_class_slot_priorities
;+		(comment "The list of Slots that should be populated in instances of the Class and their relative priority")
		(type INSTANCE)
;+		(allowed-classes SYS_CLASS_SLOT_PRIORITY)
		(create-accessor read-write))
	(multislot system_security_read_classification
;+		(comment "Defines the security classification that has been assigned to an element of the repository for READ access")
		(type INSTANCE)
;+		(allowed-classes EA_Content_Classification)
		(create-accessor read-write))
	(multislot %3ADIRECT-TYPE
		(type SYMBOL)
;+		(allowed-parents %3ACLASS)
		(create-accessor read-write))
	(single-slot system_essential_class_content_quality_review_policy
;+		(comment "The policy that defines the frequency and responsibilities for reviewing the quality of instances of the class")
		(type INSTANCE)
;+		(allowed-classes SYS_CONTENT_QUALITY_REVIEW_POLICY)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot system_ea_reference_auto_create_schema
;+		(comment "Represents the rules to be applied when auto-populating the ea_reference slot of instances of this meta-class")
		(type INSTANCE)
;+		(allowed-classes EA_Reference_Auto_Create_Schema)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot essential_id
;+		(comment "Internal IDs used to track classes and slots in the Essential Intelligence Platform, beyond the Class name and Slot name.")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot synonyms
;+		(comment "Alternative names by which this element is known")
		(type INSTANCE)
;+		(allowed-classes Synonym)
		(create-accessor read-write)))

(defclass %3AESSENTIAL-SLOT "Defintion of the facets for all Essential slots (as used in Essential Classes). Adds additional attributes on these slots for managing i18n and system security"
	(is-a %3ASTANDARD-SLOT)
	(role concrete)
	(multislot system_security_edit_classification
;+		(comment "Defines the security classification that has been assigned to an element of the repository for EDIT access")
		(type INSTANCE)
;+		(allowed-classes EA_Content_Classification)
		(create-accessor read-write))
	(multislot system_security_read_classification
;+		(comment "Defines the security classification that has been assigned to an element of the repository for READ access")
		(type INSTANCE)
;+		(allowed-classes EA_Content_Classification)
		(create-accessor read-write))
	(multislot %3ADIRECT-TYPE
;+		(comment "")
		(type SYMBOL)
;+		(allowed-parents %3ASLOT)
		(create-accessor read-write))
	(single-slot essential_id
;+		(comment "Internal IDs used to track classes and slots in the Essential Intelligence Platform, beyond the Class name and Slot name.")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot synonyms
;+		(comment "Alternative names by which this element is known")
		(type INSTANCE)
;+		(allowed-classes Synonym)
		(create-accessor read-write))
	(single-slot system_slot_relationship_type
;+		(comment "Defines the natrue of the relationship defined by the slot")
		(type SYMBOL)
		(allowed-values SYS_CONTAINED_IN SYS_COMPOSED_OF)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass EA_System "Superclass of all classes that are used by the Essential System and not part of the user ontology or knowledge base."
	(is-a USER)
	(role abstract)
	(single-slot system_is_published
;+		(comment "Slot to control whether an instance is ready to be published in Essential Viewer, or not. Defaults to true.")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default TRUE)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass EA_Security "Class for the base definition of all classes to manage system security for the Essential system."
	(is-a EA_System)
	(role abstract)
	(single-slot description
;+		(comment "A meaningful description of the element and its purpose in the model.")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot name_
;+		(comment "A descriptive name of the element in the model.\\n(NOTE: A unique, internal reference is managed separately by the system.)")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot ea_security_display_label
;+		(comment "Slot to hold the name that should be displayed in any user interfaces. Should be the display slot for security instances")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass EA_Content_Classification "Class to manage the definition of security classifications. These classifications can be applied to any content (e.g. Classes, Slots and Instances) in the repository to control access to those elements via relevant user clearance levels"
	(is-a EA_Security)
	(role concrete)
	(multislot system_secured_read_elements
;+		(comment "The set of elements within the repository that have been assigned this security classification for READ access")
		(type INSTANCE)
;+		(allowed-classes %3AESSENTIAL-CLASS %3AESSENTIAL-SLOT EA_Relation EA_Class %3AEA_Graph_Relation EA_Security)
		(create-accessor read-write))
	(multislot system_security_edit_classification
;+		(comment "Defines the security classification that has been assigned to an element of the repository for EDIT access")
		(type INSTANCE)
;+		(allowed-classes EA_Content_Classification)
		(create-accessor read-write))
	(single-slot contained_in_content_classification_group
;+		(comment "Relation to the classification group to which a security classification belongs")
		(type INSTANCE)
;+		(allowed-classes EA_Content_Classification_Group)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot system_security_read_classification
;+		(comment "Defines the security classification that has been assigned to an element of the repository for READ access")
		(type INSTANCE)
;+		(allowed-classes EA_Content_Classification)
		(create-accessor read-write))
	(single-slot security_classification_index
;+		(comment "Numerical index to control the hierarchy / sequence of classifications within a group.")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot system_secured_edit_elements
;+		(comment "The set of elements within the repository that have been assigned this security classification for EDIT access")
		(type INSTANCE)
;+		(allowed-classes %3AESSENTIAL-CLASS %3AESSENTIAL-SLOT %3AEA_Graph_Relation EA_Relation EA_Class EA_Security)
		(create-accessor read-write)))

(defclass EA_Content_Classification_Group "Defines classification groups in which individual security classifications can be managed and sequenced. Allows users to define their own security classification schemes."
	(is-a EA_Security)
	(role concrete)
	(multislot contains_content_classifications
;+		(comment "Relation to the set of security classifications that are contained in the group")
		(type INSTANCE)
;+		(allowed-classes EA_Content_Classification)
		(create-accessor read-write)))

(defclass EA_User "The basic user database for the open source Essential Viewer, which can be used where a user profile manager is not available."
	(is-a EA_Security)
	(role concrete)
	(single-slot user_first_name
;+		(comment "The given name of the user")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot email
;+		(comment "Slot to capture the email address of an Actor")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ea_security_user_id
;+		(comment "The username for a user of the system")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot ea_security_clearance_read
;+		(comment "The set of security clearance levels that are assigned to a system user for read access")
		(type INSTANCE)
;+		(allowed-classes EA_Content_Classification)
		(create-accessor read-write))
	(multislot ea_security_clearance_edit
;+		(comment "The set of security clearance levels that are assigned to a system user for edit access")
		(type INSTANCE)
;+		(allowed-classes EA_Content_Classification)
		(create-accessor read-write))
	(single-slot user_last_name
;+		(comment "The surname of the user")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass EA_Default_Classification "Class to maintain the default classifications for read and edit which, if set, apply to any element (class or instance) that is not classified by any alternative classification. The default classification is set by classifying this class. e.g. select this class in the security read classification slot for an EA Content Classification."
	(is-a EA_Security)
	(role abstract))

(defclass EA_System_ID_Management "Class to manage the assignment of internal system IDs in the Essential EIP, to those elements that do not already have this facility. e.g. Class and Slot"
	(is-a EA_System)
	(role concrete)
	(single-slot ea_last_class_id
;+		(comment "The last ID that was used to identify a Class in the repository")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ea_last_slot_id
;+		(comment "The last ID that was used to identify a Slot in the repository")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass EA_System_UI "Classes managing content concerned with EIP user interfaces"
	(is-a EA_System)
	(role abstract))

(defclass EA_UI_Group "Class to manage the set of Groups that are used to define the groupings of slots on user interface forms in EIP. Although the form for each class is unique to that class, these groups serve as templates that can be used consistently across all classes."
	(is-a EA_System_UI)
	(role concrete)
	(single-slot description
;+		(comment "A meaningful description of the element and its purpose in the model.")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot name_
;+		(comment "A descriptive name of the element in the model.\\n(NOTE: A unique, internal reference is managed separately by the system.)")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot synonyms
;+		(comment "Alternative names by which this element is known")
		(type INSTANCE)
;+		(allowed-classes Synonym)
		(create-accessor read-write)))

(defclass EA_Graph_Management "Class to manage the attributes of an instance in a new graphical model. Designed to be applied to Usage classes as this only allows single coordinates and dimensions for an instance to be tracked."
	(is-a EA_System)
	(role concrete)
	(single-slot scale_x
;+		(comment "The x-dimension scale attribute of an object in a graphical model")
		(type FLOAT)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot scale_y
;+		(comment "The y-dimension scale attribute of an object in a graphical model")
		(type FLOAT)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot coord_x
;+		(comment "The x-coordinate attribute of an object in a graphical model")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot coord_y
;+		(comment "The y-coordinate attribute of an object in a graphical model")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass EA_Class "The base class of all the meta classes in the Essential Meta Model, all of which inherit the attributes (slots) defined here. NOTE: Relationship classes (or reified relations) have a separate base class."
	(is-a USER EA_Graph_Management)
	(role abstract)
	(multislot system_content_quality_reviews
;+		(comment "The content quality reviews that have been undertaken against this element")
		(type INSTANCE)
;+		(allowed-classes SYS_CONTENT_QUALITY_REVIEW)
		(create-accessor read-write))
	(multislot commentary
;+		(comment "Defines a set of comments that can be associated with an instance. Uses the Commentary instances to enable multi-language translations of each comment.")
		(type INSTANCE)
;+		(allowed-classes Commentary)
		(create-accessor read-write))
	(single-slot system_content_visibility
;+		(comment "Defines the visibility of an EA element, e.g. individual, specific group, everyone")
		(type INSTANCE)
;+		(allowed-classes SYS_CONTENT_VISIBILITY)
		(default [essential_baseline_6.5.4_Class68])
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot name_
;+		(comment "A descriptive name of the element in the model.\\n(NOTE: A unique, internal reference is managed separately by the system.)")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot system_content_quality_last_reviewer_id
;+		(comment "The id of the person that most recently reviewed the content quality of this element")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ea_reference
;+		(comment "A human readable, unique and universal reference for the element")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot element_classified_by
;+		(comment "Slot to capture the classification(s) that apply to an element in the ontology. Add this slot to any class that is to be managed by a Taxonomy.")
		(type INSTANCE)
;+		(allowed-classes Taxonomy_Term)
		(create-accessor read-write))
	(multislot system_security_read_classification
;+		(comment "Defines the security classification that has been assigned to an element of the repository for READ access")
		(type INSTANCE)
;+		(allowed-classes EA_Content_Classification)
		(create-accessor read-write))
	(multislot impacting_change_activities
;+		(comment "Change activities that impact this element")
		(type INSTANCE)
;+		(allowed-classes Change_Activity)
		(create-accessor read-write))
	(multislot impacting_decisions
;+		(comment "Any Decisions that have been made with regards to this element")
		(type INSTANCE)
;+		(allowed-classes Decision)
		(create-accessor read-write))
	(single-slot short_name
;+		(comment "An abbreviatted short name for the EA element")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot system_last_modified_author_id
;+		(comment "The id of the user that most recently modified the instance")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot system_author_id
;+		(comment "Used to identify the creator of the element")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot performance_measures
;+		(comment "The measures of performance that have been captured for the EA element")
		(type INSTANCE)
;+		(allowed-classes Performance_Measure)
		(create-accessor read-write))
	(multislot ea_requirements
;+		(comment "The issues or needs associated with this element")
		(type INSTANCE)
;+		(allowed-classes Strategic_Requirement)
		(create-accessor read-write))
	(single-slot description
;+		(comment "A meaningful description of the element and its purpose in the model.")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot budgets_for_element
;+		(comment "The budgets defined for this element")
		(type INSTANCE)
;+		(allowed-classes Budget)
		(create-accessor read-write))
	(single-slot system_last_modified_datetime_iso8601
;+		(comment "The date and time at which the element was most recently modified")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot target_performance_measures
;+		(comment "The Performance Measures that are defined as targets for this element")
		(type INSTANCE)
;+		(allowed-classes Performance_Measure)
		(create-accessor read-write))
	(multislot costs_for_element
;+		(comment "Defines costs that are associated with the current element")
		(type INSTANCE)
;+		(allowed-classes Cost)
		(create-accessor read-write))
	(single-slot system_content_quality_last_reviewed_datetime_iso8601
;+		(comment "The date and time that the content quality of this element was reviewed")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot system_content_quality_status
;+		(comment "The current content quality status of this element")
		(type INSTANCE)
;+		(allowed-classes SYS_CONTENT_QUALITY_STATUS)
		(default [store_55_Class0])
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot system_security_edit_classification
;+		(comment "Defines the security classification that has been assigned to an element of the repository for EDIT access")
		(type INSTANCE)
;+		(allowed-classes EA_Content_Classification)
		(create-accessor read-write))
	(multislot ea_subject_to_regulations
;+		(comment "The Regulations that are relevant to this element")
		(type INSTANCE)
;+		(allowed-classes REGULATED_COMPONENT_RELATION)
		(create-accessor read-write))
	(multislot revenues_for_element
;+		(comment "Defines the revenues directly deiivered by this element")
		(type INSTANCE)
;+		(allowed-classes Revenue)
		(create-accessor read-write))
	(multislot ea_scope
;+		(comment "Supports the arbitrary scoping of an EA element by other EA elements, e.g. Org, Geo, Brand etc.")
		(type INSTANCE)
;+		(allowed-classes EA_Class)
		(create-accessor read-write))
	(single-slot system_content_lifecycle_status
;+		(comment "Defines the lifecycle status of an EA element in support of content approval")
		(type INSTANCE)
;+		(allowed-classes SYS_CONTENT_APPROVAL_STATUS)
		(default [essential_baseline_6.5.4_Class67])
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot system_creation_datetime_iso8601
;+		(comment "The date and time at which this element was created")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot stakeholders
;+		(comment "Define the stakeholders for the element. Specific stakeholders are defined in terms of an ACTOR_TO_ROLE_RELATION. Alternatively, the type of relevant stakeholders can be defined in terms of a Business_Role.")
		(type INSTANCE)
;+		(allowed-classes ACTOR_TO_ROLE_RELATION Business_Role)
		(create-accessor read-write))
	(multislot external_reference_links
;+		(comment "Slot to manage the set of external reference links to an EA_Class instance. Normally, create a new instance.")
		(type INSTANCE)
;+		(allowed-classes External_Reference_Link)
		(create-accessor read-write))
	(multislot external_repository_instance_reference
;+		(comment "Holds a set of references to this instance that are used in external repositories")
		(type INSTANCE)
;+		(allowed-classes External_Instance_Reference)
		(create-accessor read-write))
	(single-slot system_ea_reference_instance_counter
;+		(comment "A unique number that is used in derived ea references where this instance forms part of teh relationship path")
		(type INTEGER)
		(default 0)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot element_styling_classes
;+		(comment "Slot to define styling classes that are to be applied to an element, e.g. in Essential Viewer")
		(type INSTANCE)
;+		(allowed-classes Element_Style)
		(create-accessor read-write))
	(multislot lifecycle_model_for_element
;+		(comment "The Lifecycle Model of the element in focus.")
		(type INSTANCE)
;+		(allowed-classes Lifecycle_Model)
		(create-accessor read-write))
	(single-slot ea_notes
;+		(comment "Abitrary notes that have been made against the element")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot synonyms
;+		(comment "Alternative names by which this element is known")
		(type INSTANCE)
;+		(allowed-classes Synonym)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Business_Layer "Base class for Business Architecture constructs. All the meta classes for the Business Layer are sub-classes of this."
	(is-a EA_Class)
	(role abstract)
	(multislot bl_security_classifications
;+		(comment "The security classifications assigned to this business element in the context of the enterprise")
		(type INSTANCE)
;+		(allowed-classes Security_Classification)
		(create-accessor read-write))
	(multislot bl_managed_by_services
;+		(comment "The managed services that are related to this Business element")
		(type INSTANCE)
;+		(allowed-classes Managed_Service)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Business_Layer)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Business_Conceptual "The Conceptual view of the Business Layer of the meta model. A set of meta-classes that help to describe the capabilities or requirements of the business - the WHAT."
	(is-a Business_Layer)
	(role abstract)
	(multislot bus_conceptual_contained_in_arch_states
;+		(comment "The architecture states that contain this conceptual business element")
		(type INSTANCE)
;+		(allowed-classes Architecture_State)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Business_Conceptual)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Business_Principle "High level rules that govern the manner in which business capabilities are delivered by the enterprise"
	(is-a Business_Conceptual)
	(role concrete)
	(multislot principle_inf_implications_synonyms
;+		(comment "Defines synonyms for the information implications of the principle")
		(type INSTANCE)
;+		(allowed-classes Synonym)
		(create-accessor read-write))
	(multislot principle_bus_implications_synonyms
;+		(comment "Allows for language translations of the business implications of a principle")
		(type INSTANCE)
;+		(allowed-classes Synonym)
		(create-accessor read-write))
	(single-slot business_principle_rationale
;+		(comment "")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot principle_ref
;+		(comment "A unique internal reference for the principle")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot bus_principle_app_implications
;+		(comment "Commentary describing the application implications of the business principle")
		(type STRING)
		(create-accessor read-write))
	(multislot principle_rationale_synonyms
;+		(comment "Provides synonyms for the rationale of the principle")
		(type INSTANCE)
;+		(allowed-classes Synonym)
		(create-accessor read-write))
	(multislot principle_realisation_policies
;+		(comment "The set of policies that are in place to realise a Pricinple in concrete terms")
		(type INSTANCE)
;+		(allowed-classes Policy)
		(create-accessor read-write))
	(multislot business_principle_for_business_capabilities
;+		(comment "")
		(type INSTANCE)
;+		(allowed-classes Business_Capability)
		(create-accessor read-write))
	(multislot bus_principle_inf_implications
;+		(comment "Commentary describing the information implications of the business principle")
		(type STRING)
		(create-accessor read-write))
	(multislot principle_app_implications_synonyms
;+		(comment "Captures synonyms for the application implications of the principle")
		(type INSTANCE)
;+		(allowed-classes Synonym)
		(create-accessor read-write))
	(multislot bus_principle_tech_implications
;+		(comment "Commentary describing the technology implications of the business principle")
		(type STRING)
		(create-accessor read-write))
	(multislot business_implications
;+		(comment "Commentary describing the business implications of the business principle")
		(type STRING)
		(create-accessor read-write))
	(multislot business_principle_supports_business_objectives
;+		(comment "")
		(type INSTANCE)
;+		(allowed-classes Business_Objective)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Business_Principle)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot principle_tech_implications_synonyms
;+		(comment "Captures synonyms for the technology implications of the principle")
		(type INSTANCE)
;+		(allowed-classes Synonym)
		(create-accessor read-write)))

(defclass Business_Domain "Business Domain meta class from the Conceptual view of the Business Architecture. This is the top level (and least specific) construct in the Business Architecture. It provides a means of categorising business related elements independent of the context in which it is applied"
	(is-a Business_Conceptual)
	(role concrete)
	(multislot strategic_objectives
		(type INSTANCE)
;+		(allowed-classes Business_Objective)
		(create-accessor read-write))
	(multislot business_domain_contains_bus_capabilities
;+		(comment "The Business Capabilities that belong to this Business Domain")
		(type INSTANCE)
;+		(allowed-classes Business_Capability)
		(create-accessor read-write))
	(multislot business_domain_contains_information_concepts
;+		(comment "The Information Concepts that are related to this Business Domain")
		(type INSTANCE)
;+		(allowed-classes Information_Concept)
		(create-accessor read-write))
	(single-slot sequence_number
;+		(comment "An integer that defines the sequence step at which this relationship occurs within the dynamic view of an architecture.")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot contained_business_domains
;+		(comment "Instances of sub domains of a Business Domain.")
		(type INSTANCE)
;+		(allowed-classes Business_Domain)
		(create-accessor read-write))
	(multislot domain_of_business_capabilities
;+		(comment "DEPRECATED: Use business_domain_contains_bus_capabilities to allow a Business Capabilty to beloing to mutiple Business Domains")
		(type INSTANCE)
;+		(allowed-classes Business_Capability)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Business_Domain)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Business_Capability "Models the capabilities of a business or enterprise. Capabilities belong to business domains and represent the services that a business offers or requires or Business Process \\\\\\\\\"areas\\\\\\\\\""
	(is-a Business_Conceptual)
	(role concrete)
	(multislot known_business_issues
;+		(comment "Known issues for this business layer element")
		(type INSTANCE)
;+		(allowed-classes Issue)
		(create-accessor read-write))
	(multislot buscap_contextual_supports_buscap
;+		(comment "Contextualised relationships to parent Business Capabilities")
		(type INSTANCE)
;+		(allowed-classes BUSCAP_TO_PARENTBUSCAP_RELATION)
		(create-accessor read-write))
	(single-slot belongs_to_business_domain
;+		(comment "DEPRECATED: migrated to belongs_to_business_domains slot to support multiple cacrdinality\\n\\nThe instance of the business domain that a business capability belongs to.")
		(type INSTANCE)
;+		(allowed-classes Business_Domain)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot defining_business_capability_chain
;+		(comment "The flow of Business Capabilities (Business Capability Chain) that defines this Business Capability")
		(type INSTANCE)
;+		(allowed-classes Business_Capability_Chain)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot business_differentiation_level
;+		(comment "Defines the relative degree to which this element provides differentiation for the enterprise against its competitors")
		(type INSTANCE)
;+		(allowed-classes Business_Differentiation_Level)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot business_principles
		(type INSTANCE)
;+		(allowed-classes Business_Principle)
		(create-accessor read-write))
	(multislot belongs_to_business_domains
;+		(comment "The Business Domains to which this Business Capability belongs")
		(type INSTANCE)
;+		(allowed-classes Business_Domain)
		(create-accessor read-write))
	(multislot realised_by_business_processes
;+		(comment "The business processes that realise a business capability")
		(type INSTANCE)
;+		(allowed-classes Business_Process)
		(create-accessor read-write))
	(multislot supports_business_capabilities
		(type INSTANCE)
;+		(allowed-classes Business_Capability)
		(create-accessor read-write))
	(multislot bus_env_factor_weighted_dependencies
;+		(comment "The weighted dependencies on Business Environment Factors")
		(type INSTANCE)
;+		(allowed-classes Business_Environment_Weighted_Dependency)
		(create-accessor read-write))
	(multislot contained_business_capabilities
;+		(comment "A business capability can be composed of sub-business capabilities.")
		(type INSTANCE)
;+		(allowed-classes Business_Capability)
		(create-accessor read-write))
	(single-slot business_capability_id
;+		(comment "An identification number for the Business Capability that can also provide an indication of its granularity")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot regulated_data_usages
;+		(comment "Defines the uses of specific information or data that are subject to regulations")
		(type INSTANCE)
;+		(allowed-classes Regulated_Data_Usage)
		(create-accessor read-write))
	(multislot bus_cap_supporting_app_caps
;+		(comment "The set of Application Capabilities that support the Business Capability")
		(type INSTANCE)
;+		(allowed-classes Application_Capability)
		(create-accessor read-write))
	(multislot business_objectives_for_business_capability
;+		(comment "Slot to define the relationship to the Business Objectives that this Business Capability supports")
		(type INSTANCE)
;+		(allowed-classes Business_Objective)
		(create-accessor read-write))
	(single-slot business_capability_purpose
;+		(comment "Describes the nature/purpose of the Business Capability e.g. using the IBM BCM modelling approach")
		(type INSTANCE)
;+		(allowed-classes Business_Capability_Purpose)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot business_capability_level
;+		(comment "Defines the granularity of the business capability (0 = coarse grained, 5 = fine grained)")
		(type SYMBOL)
		(allowed-values 0 1 2 3 4 5)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot is_root
;+		(comment "Defines whether this element is the root element of a hierarchy")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default FALSE)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Business_Capability)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot requires_skill_types
;+		(comment "Slot to capture the set of Skill Types that have been identified as required if this capability is to be realised.")
		(type INSTANCE)
;+		(allowed-classes Skill_Type)
		(create-accessor read-write))
	(single-slot business_capability_index
;+		(comment "An index number that allows for ordering of business capabilties")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot business_capability_requires_information
;+		(comment "The Information Concepts that are required to deliver the Business Capability")
		(type INSTANCE)
;+		(allowed-classes Information_Concept)
		(create-accessor read-write)))

(defclass Business_Role_Type "Business Role Types are used to define a taxonomy for Business Roles."
	(is-a Business_Conceptual)
	(role concrete)
	(multislot provides_business_capabilities
;+		(comment "The set of business capabilities that are provided by a role type")
		(type INSTANCE)
;+		(allowed-classes Business_Capability)
		(create-accessor read-write))
	(multislot is_realised_by_roles
;+		(comment "The set of Business Roles that realise a Business Role Type.")
		(type INSTANCE)
;+		(allowed-classes Business_Role)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Business_Role_Type)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Conceptual_Business_Event "Class of conceptual-level elements describing types or classes of Business Events"
	(is-a Business_Conceptual)
	(role concrete)
	(multislot related_information_concept
;+		(comment "Slot to hold the related Information Concepts that a Conceptual Business Event is associated with")
		(type INSTANCE)
;+		(allowed-classes Information_Concept)
		(create-accessor read-write))
	(multislot implemented_by_business_events
;+		(comment "Slot defining the set of Business Events that implement a Conceptual Business Event.")
		(type INSTANCE)
;+		(allowed-classes Business_Event)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Conceptual_Business_Event)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Time_Based_Conceptual_Business_Event "Class to represent Conceptual Events that are raised by schedules or are timed events"
	(is-a Conceptual_Business_Event)
	(role concrete)
	(single-slot raising_conceptual_event_time_basis
;+		(comment "A string slot to hold the time-based information about the raising of a business event")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Time_Based_Conceptual_Business_Event)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass External_Conceptual_Business_Event "Class to represent Conceptual Events that are raised by parties external to the enterprise."
	(is-a Conceptual_Business_Event)
	(role concrete)
	(multislot raising_external_business_role_type
;+		(comment "Slot to identify the type of external party that raises a business event")
		(type INSTANCE)
;+		(allowed-classes Business_Role_Type)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes External_Conceptual_Business_Event)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Conceptual_Business_Model "A model that describes relationships between conceptual business elements"
	(is-a Business_Conceptual)
	(role abstract)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Conceptual_Business_Model)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Business_Capability_Chain "An architecture that defines the flow of high level Business Capabilities (e.g. Value Chain, Demand Chan)"
	(is-a Conceptual_Business_Model)
	(role concrete)
	(multislot contained_business_capability_relations
;+		(comment "The set of business capability relations contained in a business capability chain")
		(type INSTANCE)
;+		(allowed-classes BCU-OOCURS_BEFORE-BCU)
		(create-accessor read-write))
	(multislot chain_steps_used
;+		(comment "The set of Business Capabilities that are used to define the steps in a Business Capability Chain.")
		(type INSTANCE)
;+		(allowed-classes Business_Capability_Chain_Type)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Business_Capability_Chain)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot defines_business_capability
;+		(comment "The Business Capability that a Business Capability Chain defines")
		(type INSTANCE)
;+		(allowed-classes Business_Capability)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Business_Capability_Chain_Type "Super class of the usages that appear in Business Capability Chain Diagram (Business Capability Chains). Also a convenience super class to support use of the Protege Graph Widget."
	(is-a Conceptual_Business_Model)
	(role abstract)
	(single-slot used_in_business_capability_chain
;+		(comment "The Business Capability Chain in which this element is contained")
		(type INSTANCE)
;+		(allowed-classes Business_Capability_Chain)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot business_capability_chain_type_label
;+		(comment "The display label to be used in a Business Capability Chain diagram")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Business_Capability_Chain_Type)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Business_Capability_Usage "The usage of a Business Capability as a step in the flow of a Business Capability Chain"
	(is-a Business_Capability_Chain_Type)
	(role concrete)
	(single-slot business_capability_used
;+		(comment "The Business Capability that this Business Capability Usage represents")
		(type INSTANCE)
;+		(allowed-classes Business_Capability)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Business_Capability_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Start_Business_Capability_Chain "The starting point for a Business Capability Chain"
	(is-a Business_Capability_Chain_Type)
	(role concrete)
	(single-slot business_capability_chain_type_label
;+		(comment "The display label to be used in a Business Capability Chain diagram")
		(type STRING)
		(default "Start")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Start_Business_Capability_Chain)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass End_Business_Capability_Chain "The end point for a Business Capability Chain"
	(is-a Business_Capability_Chain_Type)
	(role concrete)
	(single-slot business_capability_chain_type_label
;+		(comment "The display label to be used in a Business Capability Chain diagram")
		(type STRING)
		(default "End")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes End_Business_Capability_Chain)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Conceptual_Business_Event_Usage "Usage of Conceptual Business Events in Business Capability Chains. These can either be initiating events or raised events in the chain."
	(is-a Business_Capability_Chain_Type)
	(role abstract)
	(single-slot usage_of_conceptual_business_event
;+		(comment "Slot to define which Conceptual Business Event is being used in a Conceptual Business Event usage.")
		(type INSTANCE)
;+		(allowed-classes Conceptual_Business_Event)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Conceptual_Business_Event_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Initiating_Conceptual_Business_Event_Usage "Usage of Conceptual Business Event as an event that initiates a Business Capability Chain."
	(is-a Conceptual_Business_Event_Usage)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Initiating_Conceptual_Business_Event_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Raised_Conceptual_Business_Event_Usage "Usage of Conceptual Business Event as an event that is raised by a Business Capability Chain."
	(is-a Conceptual_Business_Event_Usage)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Raised_Conceptual_Business_Event_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Business_Model_Architecture "An architecture model that describes the configuration of conceptual elements that are required to deliver a Business Model"
	(is-a Conceptual_Business_Model)
	(role concrete)
	(multislot business_model_architecture_elements
;+		(comment "The usages of conceptual enterprise elements that are contained in this business model architecture")
		(type INSTANCE)
;+		(allowed-classes Business_Model_Architecture_Types)
		(create-accessor read-write))
	(single-slot architecture_of_business_model
;+		(comment "The business model that this architecture describes")
		(type INSTANCE)
;+		(allowed-classes Business_Model)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Conceptual_Business_Model)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot business_model_architecture_dependencies
;+		(comment "The relations representing dependencies between the conceptual elements that comprise the Business Model Architecture")
		(type INSTANCE)
;+		(allowed-classes %3ABM-DIAGRAM-RELATION)
		(create-accessor read-write)))

(defclass Business_Model_Architecture_Types "Super class of the usages that appear in a Business Model Architecture"
	(is-a Conceptual_Business_Model)
	(role abstract)
	(single-slot used_in_business_model_architecture
;+		(comment "The Business Model Architecture in which the conceptual element is being used")
		(type INSTANCE)
;+		(allowed-classes Business_Model_Architecture)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot bmat_operating_model_category
;+		(comment "Defines the approach to be taken to operating the given element in the contex of a Business Model")
		(type INSTANCE)
;+		(allowed-classes Operating_Model_Category)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot business_model_architecture_type_label
;+		(comment "The display label to be used for the usage of the conceptual element")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Conceptual_Business_Model)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Business_Model_Business_Usage "The usage of a Business Capability in the context of a Business Model Architecture"
	(is-a Business_Model_Architecture_Types)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Conceptual_Business_Model)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot bmbu_used_business_capability
;+		(comment "The Business Capability that is being used in a Business Model Architecture")
		(type INSTANCE)
;+		(allowed-classes Business_Capability Business_Process_Type)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass Business_Model_Information_Usage "The usage of Information in the context of a Business Model Architecture"
	(is-a Business_Model_Architecture_Types)
	(role concrete)
	(single-slot bmiu_used_information
;+		(comment "The Information Concept/View that is being used in a Business Model Architecture")
		(type INSTANCE)
;+		(allowed-classes Information_View Information_Concept)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Conceptual_Business_Model)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Business_Model_Application_Usage "The usage of an Application Capability in the context of a Business Model Architecture"
	(is-a Business_Model_Architecture_Types)
	(role concrete)
	(single-slot bmau_used_application
;+		(comment "The Application Capability or Service that is being used in a Business Model Architecture")
		(type INSTANCE)
;+		(allowed-classes Application_Capability Application_Service)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Conceptual_Business_Model)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Business_Model_Technology_Usage "The usage of a Technology Capability in the context of a Business Model Architecture"
	(is-a Business_Model_Architecture_Types)
	(role concrete)
	(single-slot bmtu_used_technology
;+		(comment "The Technology Capability or Component that is being used in a Business Model Architecture")
		(type INSTANCE)
;+		(allowed-classes Technology_Capability Technology_Component)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Conceptual_Business_Model)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Business_Model_Role_Usage "The usage of a conceptual Business Role Type or logical Business Role in the context of a Business Model Architecture"
	(is-a Business_Model_Architecture_Types)
	(role concrete)
	(single-slot bmtu_used_role
;+		(comment "The conceptual Business Role Type or logical Business Role that is being used in a Business Model Architecture")
		(type INSTANCE)
;+		(allowed-classes Business_Role Business_Role_Type)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Conceptual_Business_Model)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Product_Concept "Class to define conceptual level representations of Products. Used to define fundamentally WHAT a type of product is, e.g. a motor manufacturer might have a 'Vehicle' concept defined to cover all the types of vehicle that they manufacture, such as car, truck etc., whereas a service organisation would define the classes of service that they provide."
	(is-a Business_Conceptual)
	(role concrete)
	(multislot product_concept_information_held
;+		(comment "The Information Concepts that are held about a Product Concept")
		(type INSTANCE)
;+		(allowed-classes Information_Concept)
		(create-accessor read-write))
	(multislot product_concept_realised_by_type
;+		(comment "The Product Types that realise a Product Concept.")
		(type INSTANCE)
;+		(allowed-classes Product_Type)
		(create-accessor read-write))
	(multislot product_concept_supported_by_capability
;+		(comment "The Business Capability(ies) that supports the production of a Product Concept.")
		(type INSTANCE)
;+		(allowed-classes Business_Capability)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Product_Concept)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Business_Driver "Class to manage business drivers (internatl and external influences) which motivate the organisation to its business objectives."
	(is-a Business_Conceptual)
	(role concrete)
	(multislot bd_motivated_objectives
;+		(comment "The set of objectives that are motivated by the driver")
		(type INSTANCE)
;+		(allowed-classes Business_Objective)
		(create-accessor read-write))
	(multislot bd_has_app_implications
;+		(comment "The of Application Drivers for which an business driver has implications.")
		(type INSTANCE)
;+		(allowed-classes Application_Driver)
		(create-accessor read-write))
	(multislot bd_has_inf_implications
;+		(comment "The of Information Drivers for which an business driver has implications.")
		(type INSTANCE)
;+		(allowed-classes Information_Driver)
		(create-accessor read-write))
	(multislot bd_has_bus_implications
;+		(comment "The of Business Drivers for which an business driver has implications.")
		(type INSTANCE)
;+		(allowed-classes Business_Driver)
		(create-accessor read-write))
	(multislot bd_has_tech_implications
;+		(comment "The of Technology Drivers for which an business driver has implications.")
		(type INSTANCE)
;+		(allowed-classes Technology_Driver)
		(create-accessor read-write)))

(defclass Skill_Type "Conceptual class that is used to provide a taxonomy and semantic grounding for business skill instances. Instances of Skill_Type should be readily understood without any specialist knowledge."
	(is-a Business_Conceptual)
	(role concrete)
	(multislot realised_by_skill
;+		(comment "Relationship to the instances of the Skill Class that realise this Skill Type")
		(type INSTANCE)
;+		(allowed-classes Skill)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Business_Conceptual)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot skill_type_required_by_capability
;+		(comment "Inverse slot to the Business Capability instances that require this type of skill.")
		(type INSTANCE)
;+		(allowed-classes Business_Capability)
		(create-accessor read-write)))

(defclass Value_Stream "An an end to end collection of activities that delivers an outcome for a customer"
	(is-a Business_Conceptual)
	(role concrete)
	(multislot vs_outcome_conditions
;+		(comment "Defines the Business Conditions that must be met in order to complete the Value Stream")
		(type INSTANCE)
;+		(allowed-classes Business_Condition)
		(create-accessor read-write))
	(multislot vs_trigger_business_roles
;+		(comment "Defines the business roles or business role types that can trigger the Value Stream")
		(type INSTANCE)
;+		(allowed-classes Business_Role_Type Business_Role)
		(create-accessor read-write))
	(multislot vs_outcome_events
;+		(comment "Defines the Business Events that occur as a result of the Value Stream being completed")
		(type INSTANCE)
;+		(allowed-classes Business_Event)
		(create-accessor read-write))
	(multislot vs_product_types
;+		(comment "Defines the types of Product to which the Value Stream is applied")
		(type INSTANCE)
;+		(allowed-classes Product_Type)
		(create-accessor read-write))
	(multislot vs_value_stages
;+		(comment "The sequence of Value Stages that are undertaken as part of this Value Stream")
		(type INSTANCE)
;+		(allowed-classes Value_Stage)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Business_Conceptual)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot vs_trigger_conditions
;+		(comment "Defines the business conditions that need to be met to begin the Value Stream")
		(type INSTANCE)
;+		(allowed-classes Business_Condition)
		(create-accessor read-write))
	(multislot vs_trigger_events
;+		(comment "Defines the business events that trigger the start of the Value Stream")
		(type INSTANCE)
;+		(allowed-classes Business_Event)
		(create-accessor read-write)))

(defclass Value_Stage "An activity that, as part of a Value Stream, contributes to the delivery of an outcome for a customer"
	(is-a Business_Conceptual)
	(role concrete)
	(multislot vsg_entrance_conditions
;+		(comment "Defines the business conditions that must be met to initiate the value stage")
		(type INSTANCE)
;+		(allowed-classes Business_Condition)
		(create-accessor read-write))
	(multislot vsg_entrance_events
;+		(comment "Defines the busines events that trigger the value stage")
		(type INSTANCE)
;+		(allowed-classes Business_Event)
		(create-accessor read-write))
	(multislot vs_value_stages
;+		(comment "The sequence of Value Stages that are undertaken as part of this Value Stream")
		(type INSTANCE)
;+		(allowed-classes Value_Stage)
		(create-accessor read-write))
	(single-slot vsg_index
;+		(comment "Defines the position of this Value Stage in the sequence of Values Stages that take place within its parent Value Stream")
		(type INTEGER)
		(default 0)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot vsg_exit_events
;+		(comment "Defines the business events that occur as a result of the value stage")
		(type INSTANCE)
;+		(allowed-classes Business_Event)
		(create-accessor read-write))
	(multislot vsg_participants
;+		(comment "Defines the business role types or business roles that participate in the value stage")
		(type INSTANCE)
;+		(allowed-classes Business_Role Business_Role_Type)
		(create-accessor read-write))
	(multislot vsg_required_business_capabilities
;+		(comment "Defines the list of business capabilities required to deliver this Value Stage")
		(type INSTANCE)
;+		(allowed-classes Business_Capability)
		(create-accessor read-write))
	(single-slot vsg_label
;+		(comment "DEPRECATED: The name of the Value Stage\\n\\nNOTE: Use vsg_display_label slot")
		(type INSTANCE)
;+		(allowed-classes Label)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot vsg_emotions
;+		(comment "The emotions felt by participants in the value stage")
		(type INSTANCE)
;+		(allowed-classes VALUE_STAGE_TO_EMOTION_RELATION)
		(create-accessor read-write))
	(single-slot vsg_display_label
;+		(comment "The short label for the Value Stage")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot vsg_value_stream
;+		(comment "The parent Value Stream or Value Stage that contains this Value Stage")
		(type INSTANCE)
;+		(allowed-classes Value_Stream Value_Stage)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Business_Conceptual)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot vs_supporting_bus_processes
;+		(comment "Defines the business processes that support the execution of the Value Stage")
		(type INSTANCE)
;+		(allowed-classes Business_Process_Type)
		(create-accessor read-write))
	(multislot vsg_exit_conditions
;+		(comment "Defines the business conditions that must be met to complete the value stage")
		(type INSTANCE)
;+		(allowed-classes Business_Condition)
		(create-accessor read-write)))

(defclass Business_Objective_Type ""
	(is-a Business_Conceptual)
	(role abstract)
	(multislot bo_assigned_to
;+		(comment "Actors to whom this objective has been assigned")
		(type INSTANCE)
;+		(allowed-classes ACTOR_TO_OBJECTIVE_RELATION)
		(create-accessor read-write))
	(multislot bo_owners
;+		(comment "Captures the individuals or organisations that are accountable for meeting the objective")
		(type INSTANCE)
;+		(allowed-classes Actor)
		(create-accessor read-write))
	(multislot bo_motivated_by_driver
;+		(comment "The set of drivers that motivate the objective")
		(type INSTANCE)
;+		(allowed-classes Business_Driver)
		(create-accessor read-write))
	(multislot objective_for_business_domains
;+		(comment "")
		(type INSTANCE)
;+		(allowed-classes Business_Domain)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Business_Conceptual)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot bo_id
;+		(comment "Identifier for the objective")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Business_Objective "A strategic business goal for an enterprise"
	(is-a Business_Objective_Type)
	(role concrete)
	(multislot bo_measures
;+		(comment "DEPRECATED. TARGETS SHOULD BE CAPTURED VIA BO_ASSIGNED_TO. Captures the Business Service Quality Values that will measure success in meeting the Business Objective")
		(type INSTANCE)
;+		(allowed-classes Business_Service_Quality_Value)
		(create-accessor read-write))
	(single-slot bo_target_date_iso_8601
;+		(comment "Captures the target date for achieving the objective in ISO 8601 format (yyyy-mm-dd)")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot objective_supported_by_objective
;+		(comment "Slot to manage the set of objectives that support an objective. Applies to Business Objectives, Application Architecture Objectives, Information Architecture Objectives and Technology Architecture Objectives")
		(type INSTANCE)
;+		(allowed-classes Information_Architecture_Objective Technology_Architecture_Objective Application_Architecture_Objective Business_Objective)
		(create-accessor read-write))
	(multislot supporting_business_principles
;+		(comment "")
		(type INSTANCE)
;+		(allowed-classes Business_Principle)
		(create-accessor read-write))
	(multislot objective_supports_goals
;+		(comment "The strategic goals that are supported by this objective")
		(type INSTANCE)
;+		(allowed-classes Business_Goal Application_Architecture_Goal Information_Architecture_Goal Technology_Architecture_Goal)
		(create-accessor read-write))
	(multislot objective_supports_objective
;+		(comment "Slot to manage the set of objectives that are supported by an objective. Applies to Business Objectives, Application Architecture Objectives, Information Architecture Objectives and Technology Architecture Objectives.")
		(type INSTANCE)
;+		(allowed-classes Application_Architecture_Objective Business_Objective Information_Architecture_Objective Technology_Architecture_Objective)
		(create-accessor read-write))
	(multislot supporting_business_capabilities
;+		(comment "Slot to define relationship to the Business Capabilities that support a Business Objective")
		(type INSTANCE)
;+		(allowed-classes Business_Capability)
		(create-accessor read-write))
	(multislot bo_performance_measures
;+		(comment "Defines the service qualities used to measure performance against the objective")
		(type INSTANCE)
;+		(allowed-classes OBJ_TO_SVC_QUALITY_RELATION)
		(create-accessor read-write))
	(multislot objective_supported_by_strategic_plan
;+		(comment "Slot to manage the set of Strategic Plans that support an objective (Business Objective, Application Architecture Objective, Information Architecture Objective and Technology Architecture Objectives)")
		(type INSTANCE)
;+		(allowed-classes Strategic_Plan)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Business_Objective)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot bo_target_date
;+		(comment "Captures the target date for achieving the objective")
		(type INSTANCE)
;+		(allowed-classes Time)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Business_Goal "Defines a high level business aspiration"
	(is-a Business_Objective_Type)
	(role concrete)
	(multislot goal_supported_by_objectives
;+		(comment "The objectives that help to meet the goal")
		(type INSTANCE)
;+		(allowed-classes Business_Objective Information_Architecture_Objective Application_Architecture_Objective Technology_Architecture_Objective)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Business_Conceptual)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Business_Model "A conceptual view of a way of working that creates, delivers and captures business value for the enterprise"
	(is-a Business_Conceptual)
	(role concrete)
	(single-slot bm_business_domain
;+		(comment "The Business Domain to which this Business Model belongs")
		(type INSTANCE)
;+		(allowed-classes Business_Domain)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot business_model_architecture
;+		(comment "The architecture that describes the dependencies between the conceptual elements required to deliver the Business Model")
		(type INSTANCE)
;+		(allowed-classes Business_Model_Architecture)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot business_model_directives
;+		(comment "Defines a list of statements describing the overall mode of operation for the different types of elements that comprise the Business Model")
		(type INSTANCE)
;+		(allowed-classes Business_Model_Directive)
		(create-accessor read-write))
	(multislot bm_business_goals_objectives
;+		(comment "The business goals and/or objectives that the business model is intended to meet")
		(type INSTANCE)
;+		(allowed-classes Business_Objective_Type)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Business_Conceptual)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot business_model_configurations
;+		(comment "Defines the configurations of enterprise elements that are required to deliver the business model in specific contexts")
		(type INSTANCE)
;+		(allowed-classes Business_Model_Configuration)
		(create-accessor read-write)))

(defclass Business_Model_Directive "Defines a high-level description for how a Business Model intends to operate a given type of enterprise element"
	(is-a Business_Conceptual)
	(role concrete)
	(single-slot bmd_for_operating_model_category
;+		(comment "The operating model category for which the overall direction is being defined")
		(type INSTANCE)
;+		(allowed-classes Operating_Model_Category)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot bmd_for_business_model
;+		(comment "The Business Model for which an overall direction of a type of enterprise element is being defined")
		(type INSTANCE)
;+		(allowed-classes Business_Model)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot bmd_directive_statements
;+		(comment "The statements describing the directives for the adoption of the operating model category with the element type")
		(type INSTANCE)
;+		(allowed-classes Commentary)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(single-slot bmd_of_class
;+		(comment "The type of enterprise element for which the overall direction is being defined")
		(type INSTANCE)
;+		(allowed-classes %3AESSENTIAL-CLASS)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Business_Conceptual)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Business_Logical "The Logical view of the Business Layer of the meta model. A set of meta-classes that help to describes the logical design of the business - the HOW."
	(is-a Business_Layer)
	(role abstract)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Business_Logical)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot bus_logical_contained_in_arch_states
;+		(comment "The architecture states that contain this logical business element")
		(type INSTANCE)
;+		(allowed-classes Architecture_State)
		(create-accessor read-write)))

(defclass Business_Role "Used to represent the logical design of the organisation in terms of the roles that are required. Group Business Roles represent a collection of responsibilities that are taken on by organisations.  Individual Bus Role are responsibilities that you would expect to be taken on by an individual or individuals"
	(is-a Business_Logical)
	(role abstract)
	(multislot br_responsibility_categories
;+		(comment "Defines the nature of the stakeholder relationships associated with this role")
		(type INSTANCE)
;+		(allowed-classes Role_Responsibility_Category)
		(create-accessor read-write))
	(multislot performs_business_process
;+		(comment "The business process that this Business Role performs.")
		(type INSTANCE)
;+		(allowed-classes Business_Process_Type)
		(create-accessor read-write))
	(multislot reports_to
;+		(comment "The Business Roles that this role reports to")
		(type INSTANCE)
;+		(allowed-classes Business_Role)
		(create-accessor read-write))
	(multislot operates_at_site_categories
;+		(comment "The site categories where this Business Role operates.")
		(type INSTANCE)
;+		(allowed-classes Site_Category)
		(create-accessor read-write))
	(multislot reporting_business_roles
;+		(comment "The Business Roles that report to this Business Role")
		(type INSTANCE)
;+		(allowed-classes Business_Role)
		(create-accessor read-write))
	(single-slot role_is_external
;+		(comment "Defines whether the role is expected to be played by an external party")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default FALSE)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot owns_business_process
;+		(comment "The Business Processes that this Business Role owns.")
		(type INSTANCE)
;+		(allowed-classes Business_Process_Type)
		(create-accessor read-write))
	(multislot role_for_classes
;+		(comment "The meta-classes for which an actor playing this role can be a stakeholder")
		(type INSTANCE)
;+		(allowed-classes %3AESSENTIAL-CLASS)
		(create-accessor read-write))
	(single-slot is_member_of_business_role
;+		(comment "Business Role (e.g. a team or group) that a Business Role is a member of.")
		(type INSTANCE)
;+		(allowed-classes Business_Role)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot bus_role_played_by_actor
;+		(comment "Specifies the list of actors the play this role in processes using link class/relation")
		(type INSTANCE)
;+		(allowed-classes ACTOR_TO_ROLE_RELATION)
		(create-accessor read-write))
	(single-slot is_business_role_type
;+		(comment "Slot from a Business Role to the Business Role Type, that the Role is an instance/type of.")
		(type INSTANCE)
;+		(allowed-classes Business_Role_Type)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot external_to_enterprise
;+		(comment "Determines whether an actor or role is internal or external to the organisation being modelled")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default FALSE)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Business_Role)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot role_requires_skills
;+		(comment "The set of Skill instances that are required by an instance of a Business Role, captured by a relationship class allowing qualities to be defined about the required Skills.")
		(type INSTANCE)
;+		(allowed-classes ROLE_TO_SKILL_RELATION)
		(create-accessor read-write)))

(defclass Individual_Business_Role "A Business Role that is taken on by an individual person"
	(is-a Business_Role)
	(role concrete)
	(single-slot role_skill_level
;+		(comment "The overall skill level of the role")
		(type INSTANCE)
;+		(allowed-classes Skill_Level)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot role_requires_expertise
;+		(comment "The subject matter expertise required by the role")
		(type INSTANCE)
;+		(allowed-classes Subject_Matter_Expertise)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Individual_Business_Role)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Group_Business_Role "A Business Role that is taken on by an organisation or team"
	(is-a Business_Role)
	(role concrete)
	(multislot contains_business_roles
;+		(comment "The business roles that comprise this business role")
		(type INSTANCE)
;+		(allowed-classes Business_Role)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Group_Business_Role)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Business_Process_Type "Super class of Business Process, Business Activity and Business Task. Can be used to generically refer to Business Process work constructs. e.g. Used for mapping relationships from Application constructs"
	(is-a Business_Logical)
	(role abstract)
	(multislot business_process_owned_by_business_role
;+		(comment "The business role that owns the given business process type")
		(type INSTANCE)
;+		(allowed-classes Business_Role)
		(create-accessor read-write))
	(multislot bus_process_type_reads_information
;+		(comment "DEPRECATED.\\nThe set of Information Representations that this process reads data from")
		(type INSTANCE)
;+		(allowed-classes Information_View_Type)
		(create-accessor read-write))
	(single-slot lifecycle_status_business
;+		(comment "The lifecycle status for this Business Process Type")
		(type INSTANCE)
;+		(allowed-classes Lifecycle_Status)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot standardisation_level
;+		(comment "Defines the standardisation level of the business process, activity or task")
		(type INSTANCE)
;+		(allowed-classes Standardisation_Level)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot busproctype_uses_infoviews
;+		(comment "The Information Views that are used to perform the Business Process Type")
		(type INSTANCE)
;+		(allowed-classes BUSPROCTYPE_TO_INFOVIEW_RELATION)
		(create-accessor read-write))
	(single-slot bpt_business_criticality
;+		(comment "Defines the relative business criticality of the process, activity or task")
		(type INSTANCE)
;+		(allowed-classes Business_Criticality)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot business_process_performed_by_business_role
;+		(comment "The business roles that perform this business process type")
		(type INSTANCE)
;+		(allowed-classes Business_Role)
		(create-accessor read-write))
	(multislot bp_supported_by_app_app
;+		(comment "Specifies the Application (Group) that supports a business process")
		(type INSTANCE)
;+		(allowed-classes APP_APP_TO_BUS_RELATION)
		(create-accessor read-write))
	(multislot bus_process_type_updates_information
;+		(comment "DEPRECATED.\\nThe set of Information Representations that this process updates")
		(type INSTANCE)
;+		(allowed-classes Information_View_Type)
		(create-accessor read-write))
	(multislot bp_supported_by_app_svc
;+		(comment "Specifies the Application Services that support a business process")
		(type INSTANCE)
;+		(allowed-classes APP_SVC_TO_BUS_RELATION)
		(create-accessor read-write))
	(multislot bp_supported_by_app_fun
;+		(comment "Specifies the Application Functions that support a business process")
		(type INSTANCE)
;+		(allowed-classes APP_FUN_TO_BUS_RELATION)
		(create-accessor read-write))
	(single-slot busproctype_in_busprocfamily
;+		(comment "DEPRECATED: REPLACED BY DIRECT RELATIONSHIP\\nThe Business Process Family to which the Business Process Type belongs")
		(type INSTANCE)
;+		(allowed-classes Business_Process_Family)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot bus_process_type_deletes_information
;+		(comment "DEPRECATED.\\nThe set of Information Representations that this process deletes data from")
		(type INSTANCE)
;+		(allowed-classes Information_View_Type)
		(create-accessor read-write))
	(multislot busproctype_belongs_to_busprocfamily
;+		(comment "The Business Process Family to which the Business Process Type belongs")
		(type INSTANCE)
;+		(allowed-classes Business_Process_Family)
		(create-accessor read-write))
	(multislot bus_process_type_creates_information
;+		(comment "DEPRECATED.\\nthe set of Information Views that this process creates")
		(type INSTANCE)
;+		(allowed-classes Information_View_Type)
		(create-accessor read-write))
	(single-slot business_process_id
;+		(comment "An identification number for the Business ProcessType that can also provide an indication of its granularity")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Business_Process_Type)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Business_Process "Business Processes implement the Business Capabilities, and consist of Business Activities. Processes are performed by Business Roles.\\nBusiness Processes represent specifications or designs of how processes should be performed."
	(is-a Business_Process_Type)
	(role concrete)
	(multislot known_business_issues
;+		(comment "Known issues for this business layer element")
		(type INSTANCE)
;+		(allowed-classes Issue)
		(create-accessor read-write))
	(multislot regulated_data_usages
;+		(comment "Defines the uses of specific information or data that are subject to regulations")
		(type INSTANCE)
;+		(allowed-classes Regulated_Data_Usage)
		(create-accessor read-write))
	(single-slot business_process_supplier
;+		(comment "The Supplier of the business process. Used to identify outsourced business processes.")
		(type INSTANCE)
;+		(allowed-classes Supplier)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot realises_business_capability
;+		(comment "The business capability that this process realises.")
		(type INSTANCE)
;+		(allowed-classes Business_Capability)
		(create-accessor read-write))
	(multislot bp_sub_business_processes
;+		(comment "Captures business processes/activities that are performed as part of the business process. Note: this is an alternative to defining a Business Process Flow")
		(type INSTANCE)
;+		(allowed-classes Business_Activity Business_Process)
		(create-accessor read-write))
	(multislot implemented_by_physical_business_processes
;+		(comment "The physical business processes that implement a logical business process")
		(type INSTANCE)
;+		(allowed-classes Physical_Process)
		(create-accessor read-write))
	(single-slot defining_business_process_flow
;+		(comment "The flow-relations, sub-processes and Business Activities that make up this Business Process")
		(type INSTANCE)
;+		(allowed-classes Business_Process_Flow)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Business_Process)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Business_Activity "An Elementary Business Process. These are processes that are performed by a single person (or system), in a single place at a single time.\\nBusiness Activities represent specifications or designs of how activities should be performed."
	(is-a Business_Process_Type)
	(role concrete)
	(multislot ba_sub_business_tasks
;+		(comment "Captures business tasks that are performed as part of the business activity. Note: this is an alternative to defining a Business Activity Flow")
		(type INSTANCE)
;+		(allowed-classes Business_Task)
		(create-accessor read-write))
	(multislot activity_implemented_by_physical
;+		(comment "Slot to define the set of Physical Activities that implement a Business Activity")
		(type INSTANCE)
;+		(allowed-classes Physical_Activity)
		(create-accessor read-write))
	(single-slot defining_activity_diagram
;+		(comment "The set of Business Tasks (and flow relations) that make up this Business Activity.")
		(type INSTANCE)
;+		(allowed-classes Business_Activity_Flow)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot activity_implements_business_capabilty
;+		(comment "The business capability that this Business Activity implements")
		(type INSTANCE)
;+		(allowed-classes Business_Capability)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Business_Activity)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Business_Task "A Business Task represents a step in a Business Activity."
	(is-a Business_Process_Type)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Business_Task)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Business_Event "Class of elements describing events that occur in the business."
	(is-a Business_Logical)
	(role concrete)
	(multislot interpreted_by_system_events
;+		(comment "Slot defining the set of System Events that are interpreted as a Business Event.")
		(type INSTANCE)
;+		(allowed-classes System_Event)
		(create-accessor read-write))
	(single-slot type_of_event
;+		(comment "Slot to hold the (optionally) related Conceptual Business Event that a Business Event is a type of.")
		(type INSTANCE)
;+		(allowed-classes Conceptual_Business_Event)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Business_Event)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot related_information_view
;+		(comment "Slot to hold the related Information Views that a Business Event is associated with.")
		(type INSTANCE)
;+		(allowed-classes Information_View)
		(create-accessor read-write)))

(defclass Time_Based_Business_Event "Class to represent Business Events that are raised by schedules or are timed events"
	(is-a Business_Event)
	(role concrete)
	(single-slot raising_event_time_basis
;+		(comment "A string slot to hold the time-based information about the raising of a business event")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Time_Based_Business_Event)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass External_Business_Event "Class to represent Business Events that are raised by parties external to the enterprise."
	(is-a Business_Event)
	(role concrete)
	(multislot raising_external_business_role
;+		(comment "Slot to identify the external party role that raises a business event")
		(type INSTANCE)
;+		(allowed-classes Business_Role)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes External_Business_Event)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Site_Category "A type of site at which Business Roles operate, e.g. a factory, an office, a warehouse."
	(is-a Business_Logical)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Site_Category)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Logical_Business_Model "A model that describes relationships between logical business elements"
	(is-a Business_Logical)
	(role abstract)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Logical_Business_Model)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Business_Process_Flow "An architecture that defines the flow of sub-Business Processes and Business Activities that makes up a Business Process"
	(is-a Logical_Business_Model)
	(role concrete)
	(single-slot name_
;+		(comment "A descriptive name of the element in the model.\\n(NOTE: A unique, internal reference is managed separately by the system.)")
		(type STRING)
		(default "<process_flow>::<business_process>")
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot process_steps_used
;+		(comment "The set of Business Processes and Business Activities that are used to define the steps in a Business Process.")
		(type INSTANCE)
;+		(allowed-classes Business_Process_Flow_Type)
		(create-accessor read-write))
	(single-slot defines_business_process
;+		(comment "")
		(type INSTANCE)
;+		(allowed-classes Business_Process)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot contained_process_relations
;+		(comment "The set of relations that define the flow of a business process, in terms of which step occurs before which step(s).")
		(type INSTANCE)
;+		(allowed-classes %3ABP-DIAGRAM-RELATION)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Business_Process_Flow)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Business_Process_Flow_Type "Super class of the usages that appear in Business Process Flow Diagram (Business Process Flows). Convenience super class to support use of the Protege Graph Widget."
	(is-a Logical_Business_Model)
	(role abstract)
	(single-slot used_in_process_flow
;+		(comment "The process flow in which this component is used")
		(type INSTANCE)
;+		(allowed-classes Business_Process_Flow)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot business_process_arch_display_label
;+		(comment "Label displayed for components in business process diagrams")
		(type STRING)
		(default "<process_type_used>")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Business_Process_Flow_Type)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Business_Process_Usage "The usage of a Business Process as a step in the flow of another Business Process"
	(is-a Business_Process_Flow_Type)
	(role concrete)
	(multislot bp_applicable_business_rules
;+		(comment "The set of business rules that apply to the step in a process flow definition.")
		(type INSTANCE)
;+		(allowed-classes Business_Rule)
		(create-accessor read-write))
	(single-slot name_
;+		(comment "A descriptive name of the element in the model.\\n(NOTE: A unique, internal reference is managed separately by the system.)")
		(type STRING)
		(default "<process_flow>::<business_process>")
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot business_process_used
;+		(comment "The business process that this is a usage of.")
		(type INSTANCE)
;+		(allowed-classes Business_Process)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot business_process_arch_display_label
;+		(comment "Label displayed for components in business process diagrams")
		(type STRING)
		(default "<process_used>")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Business_Process_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Business_Activity_Usage "An instance of a business activity used as a step in a Business Process. A business activity is an Elementary Business Process, performed by one 'person', in one place, at one time."
	(is-a Business_Process_Flow_Type)
	(role concrete)
	(multislot bact_applicable_business_rule
;+		(comment "The set of business rules that apply to the step in a process flow definition.")
		(type INSTANCE)
;+		(allowed-classes Business_Rule)
		(create-accessor read-write))
	(single-slot name_
;+		(comment "A descriptive name of the element in the model.\\n(NOTE: A unique, internal reference is managed separately by the system.)")
		(type STRING)
		(default "<process_flow>::<activity>")
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot business_process_arch_display_label
;+		(comment "Label displayed for components in business process diagrams")
		(type STRING)
		(default "<activity_used>")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Business_Activity_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot business_activity_used
;+		(comment "The business activity that this usage is an instance of.")
		(type INSTANCE)
;+		(allowed-classes Business_Activity)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass Start_Process_Flow "The starting point for a business process flow"
	(is-a Business_Process_Flow_Type)
	(role concrete)
	(single-slot name_
;+		(comment "A descriptive name of the element in the model.\\n(NOTE: A unique, internal reference is managed separately by the system.)")
		(type STRING)
		(default "Start")
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot business_process_arch_display_label
;+		(comment "Label displayed for components in business process diagrams")
		(type STRING)
		(default "Start")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Start_Process_Flow)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass End_Process_Flow "The end point for a business process flow"
	(is-a Business_Process_Flow_Type)
	(role concrete)
	(single-slot name_
;+		(comment "A descriptive name of the element in the model.\\n(NOTE: A unique, internal reference is managed separately by the system.)")
		(type STRING)
		(default "End")
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot business_process_arch_display_label
;+		(comment "Label displayed for components in business process diagrams")
		(type STRING)
		(default "End")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes End_Process_Flow)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Business_Event_Usage_In_Process "Usage of Business Events in Business Process Flow. These can either be initiating events or raised events in the process."
	(is-a Business_Process_Flow_Type)
	(role abstract)
	(single-slot usage_of_business_event_in_process
;+		(comment "Slot to define which Business Event is being used in a Business Event usage.")
		(type INSTANCE)
;+		(allowed-classes Business_Event)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot business_event_criteria
;+		(comment "Slot to capture the criteria for when this event is used, e.g. order value > 500")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Business_Event_Usage_In_Process)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Initiating_Business_Event_Usage_In_Process "Usage of Business Event as an event that initiates a Business Process."
	(is-a Business_Event_Usage_In_Process)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Initiating_Business_Event_Usage_In_Process)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Raised_Business_Event_Usage_In_Process "Usage of Business Event as an event that is raised by a Business Process."
	(is-a Business_Event_Usage_In_Process)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Raised_Business_Event_Usage_In_Process)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Business_Process_Flow_Decision "Used to capture a decision point in a Business Process Flow"
	(is-a Business_Process_Flow_Type)
	(role concrete)
	(multislot bpfd_decision_makers
;+		(comment "The logical roles that are responsible for reaching this decision")
		(type INSTANCE)
;+		(allowed-classes Business_Role)
		(create-accessor read-write))
	(single-slot business_process_arch_display_label
;+		(comment "Label displayed for components in business process diagrams")
		(type STRING)
		(default "<decision-question>")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Business_Process_Flow_Type)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Business_Activity_Flow "An architecture that defines the sequence of Business Tasks that make up a Business Activity."
	(is-a Logical_Business_Model)
	(role concrete)
	(single-slot defines_business_activity
;+		(comment "Slot containing reference to a Business Activity that a Business Activity Flow is defining.")
		(type INSTANCE)
;+		(allowed-classes Business_Activity)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot contained_activity_relations
;+		(comment "The set of relations between the Tasks that comprise a Business Activity. These relations define the flow of preceeding task to next task.")
		(type INSTANCE)
;+		(allowed-classes %3ABA-DIAGRAM-RELATION)
		(create-accessor read-write))
	(single-slot name_
;+		(comment "A descriptive name of the element in the model.\\n(NOTE: A unique, internal reference is managed separately by the system.)")
		(type STRING)
		(default "<activity_diagram>::<activity>")
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot business_tasks_used
;+		(comment "The set of business tasks that are used to define the steps of a Business Activity")
		(type INSTANCE)
;+		(allowed-classes Business_Activity_Flow_Type)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Business_Activity_Flow)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Business_Activity_Flow_Type "Super class of the usages that appear in Business Activity Flow Diagram (Business Activity Flows). Convenience super class to support use of the Protege Graph Widget."
	(is-a Logical_Business_Model)
	(role abstract)
	(single-slot business_task_display_label
;+		(comment "Text label used when a Business Task Usage is shown on e.g. an Activity Diagram")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot used_in_business_activity_flow
;+		(comment "The business activity flow in which this task is used")
		(type INSTANCE)
;+		(allowed-classes Business_Activity_Flow)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Business_Activity_Flow_Type)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Business_Task_Usage "The usage of a Business Task in a Business Activity flow."
	(is-a Business_Activity_Flow_Type)
	(role concrete)
	(single-slot business_task_used
;+		(comment "The business task that this is a usage of.")
		(type INSTANCE)
;+		(allowed-classes Business_Task)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot name_
;+		(comment "A descriptive name of the element in the model.\\n(NOTE: A unique, internal reference is managed separately by the system.)")
		(type STRING)
		(default "<activity_diagram>::<task>")
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot bt_applicable_business_rule
;+		(comment "The set of business rules that apply to the step in a business activity flow definition.")
		(type INSTANCE)
;+		(allowed-classes Business_Rule)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Business_Task_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Start_Activity_Flow "The starting point for a business activity flow"
	(is-a Business_Activity_Flow_Type)
	(role concrete)
	(single-slot business_task_display_label
;+		(comment "Text label used when a Business Task Usage is shown on e.g. an Activity Diagram")
		(type STRING)
		(default "Start")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Start_Activity_Flow)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass End_Activity_Flow "The end point for a business activity flow"
	(is-a Business_Activity_Flow_Type)
	(role concrete)
	(single-slot business_task_display_label
;+		(comment "Text label used when a Business Task Usage is shown on e.g. an Activity Diagram")
		(type STRING)
		(default "End")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes End_Activity_Flow)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Business_Event_Usage_In_Activity "Usage of Business Events in Business Activity Flow. These can either be initiating events or raised events in the activity."
	(is-a Business_Activity_Flow_Type)
	(role abstract)
	(single-slot business_event_criteria
;+		(comment "Slot to capture the criteria for when this event is used, e.g. order value > 500")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot usage_of_business_event_in_activity
;+		(comment "Slot to define which Business Event is being used in a Business Event usage.")
		(type INSTANCE)
;+		(allowed-classes Business_Event)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Business_Event_Usage_In_Activity)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Initiating_Business_Event_Usage_In_Activity "Usage of Business Event as an event that initiates a Business Activity."
	(is-a Business_Event_Usage_In_Activity)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Initiating_Business_Event_Usage_In_Activity)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Raised_Business_Event_Usage_In_Activity "Usage of Business Event as an event that is raised by a Business Activity."
	(is-a Business_Event_Usage_In_Activity)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Raised_Business_Event_Usage_In_Activity)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Static_Product_Type_Architecture "An architecture model that defines static dependencies between Product Types (including information views that are required)"
	(is-a Logical_Business_Model)
	(role concrete)
	(single-slot static_architecture_of_product_type
;+		(comment "The product type that this static architecture describes")
		(type INSTANCE)
;+		(allowed-classes Product_Type)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot static_product_type_architecture_elements
;+		(comment "The usages of Product Types that are contained in this dependency model")
		(type INSTANCE)
;+		(allowed-classes Static_Product_Type_Architecture_Type)
		(create-accessor read-write))
	(multislot static_product_type_dependencies
;+		(comment "The relations representing dependencies on Product Types")
		(type INSTANCE)
;+		(allowed-classes %3APTU-DEPENDS_ON-PTU)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Static_Product_Type_Architecture)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Static_Product_Type_Architecture_Type "Super class of the usages that appear in a Static Product Type Architecture. Convenience super class to support use of the Protege Graph Widget."
	(is-a Logical_Business_Model)
	(role abstract)
	(single-slot ptu_used_in_static_product_type_architecture
;+		(comment "The static product type architecture that contains this element")
		(type INSTANCE)
;+		(allowed-classes Static_Product_Type_Architecture)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Logical_Business_Model)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot static_prod_type_arch_display_label
;+		(comment "The display label for this component in the static product type architecture model")
		(type STRING)
		(default "<component name>")
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Static_Product_Type_Usage "The usage of a Product Type in a Static Product Type Architecture"
	(is-a Static_Product_Type_Architecture_Type)
	(role concrete)
	(single-slot static_usage_of_product_type
;+		(comment "The product type that this is a usage of.")
		(type INSTANCE)
;+		(allowed-classes Product_Type)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Static_Product_Type_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Static_Product_Architecture "An architecture model that defines static dependencies between Product (including information representations that are required)"
	(is-a Logical_Business_Model)
	(role concrete)
	(multislot static_product_architecture_elements
;+		(comment "The usages of Products that are contained in this dependency model")
		(type INSTANCE)
;+		(allowed-classes Static_Product_Architecture_Type)
		(create-accessor read-write))
	(single-slot static_architecture_of_product
;+		(comment "The product that this static architecture describes")
		(type INSTANCE)
;+		(allowed-classes Product)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Static_Product_Architecture)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot static_product_dependencies
;+		(comment "The relations representing dependencies between Products")
		(type INSTANCE)
;+		(allowed-classes %3APROD-DEPENDS-ON-PROD)
		(create-accessor read-write)))

(defclass Static_Product_Architecture_Type "Super class of the usages that appear in a Static Product Architecture. Convenience super class to support use of the Protege Graph Widget."
	(is-a Logical_Business_Model)
	(role abstract)
	(single-slot static_prod_arch_display_label
;+		(comment "The display label for this component in the static product architecture model")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot pu_used_in_static_product_architecture
;+		(comment "The static product architecture that contains this element")
		(type INSTANCE)
;+		(allowed-classes Static_Product_Architecture)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Logical_Business_Model)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Static_Product_Usage "The usage of a Product in a Static Product Architecture"
	(is-a Static_Product_Architecture_Type)
	(role concrete)
	(single-slot static_usage_of_product
;+		(comment "The product that this is a usage of.")
		(type INSTANCE)
;+		(allowed-classes Product)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Static_Product_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Business_Model_Configuration_Architecture "Defines the architecture of a Business Model Configuration in terms of coarse grained business, information, application and technology building blocks"
	(is-a Logical_Business_Model)
	(role concrete)
	(multislot bmc_architecture_dependencies
;+		(comment "The dependencies that exist between elements that comprise a Business Model Configuration Architecture")
		(type INSTANCE)
;+		(allowed-classes %3ABMC-DIAGRAM-RELATION)
		(create-accessor read-write))
	(multislot bmc_architecture_elements
;+		(comment "The elements that comprise this Business Model Configuration Architecture")
		(type INSTANCE)
;+		(allowed-classes Business_Model_Configuration_Architecture_Type)
		(create-accessor read-write))
	(single-slot architecture_of_business_model_configuration
;+		(comment "The Business Model Configuration that this architecture describes")
		(type INSTANCE)
;+		(allowed-classes Business_Model_Configuration)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Logical_Business_Model)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Business_Model_Configuration_Architecture_Type "The elements that can be contained within a Business Model Configuration Architecture"
	(is-a Logical_Business_Model)
	(role abstract)
	(single-slot bmcat_used_in_business_model_config_architecture
;+		(comment "The Business Model Configuration Architecture Model that contains this usage of an element")
		(type INSTANCE)
;+		(allowed-classes Business_Model_Configuration_Architecture)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Logical_Business_Model)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Business_Reference_Architecture_Config_Usage "A usage of a Business Reference Architecture in a Business Model Configuration"
	(is-a Business_Model_Configuration_Architecture_Type)
	(role concrete)
	(single-slot bracu_usage_of_business_reference_architecture
;+		(comment "The Business Reference Archjitecture that is being used as part of a Business Model Configuration Architecture")
		(type INSTANCE)
;+		(allowed-classes Business_Reference_Architecture)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Logical_Business_Model)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Application_Reference_Implementation_Config_Usage "A usage of an Application Reference Implementation in a Business Model Configuration"
	(is-a Business_Model_Configuration_Architecture_Type)
	(role concrete)
	(single-slot aricu_usage_of_application_reference_implementation
;+		(comment "The Application Reference Impementation that is being used as part of a Business Model Configuration Architecture")
		(type INSTANCE)
;+		(allowed-classes Application_Reference_Implementation)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Logical_Business_Model)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Product_Type "Class to capture types of products that are produced by the enterprise. Product Types are realisations of Product Concepts, and group the actual, physical products by type. E.g. in the motor manufacturer example, product types would be 'Car', 'Truck' as realisations of the 'Vehicle' concept. As a further example, a service company would define the types of a particular service (e.g. financial services) that they provide."
	(is-a Business_Logical)
	(role concrete)
	(single-slot product_type_internal_facing
;+		(comment "Defines whether the Product Type is internal facing.")
		(type SYMBOL)
		(allowed-values Yes No Unknown)
		(default Unknown)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot product_type_instances
;+		(comment "The Products that are instances of a Product Type.")
		(type INSTANCE)
;+		(allowed-classes Product)
		(create-accessor read-write))
	(single-slot product_type_external_facing
;+		(comment "Defines whether the Product Type is external facing.")
		(type SYMBOL)
		(allowed-values Yes No Unknown)
		(default Unknown)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot product_type_via_channel_types
;+		(comment "The list of Channel Types via which this Product Type can be accessed")
		(type INSTANCE)
;+		(allowed-classes Channel_Type)
		(create-accessor read-write))
	(multislot pt_delivers_revenue_types
;+		(comment "The types of revenue streams delivered by this Product Type")
		(type INSTANCE)
;+		(allowed-classes Revenue_Component_Type)
		(create-accessor read-write))
	(multislot product_type_realises_concept
;+		(comment "The Product Concept(s) that a Product Type realises.")
		(type INSTANCE)
;+		(allowed-classes Product_Concept)
		(create-accessor read-write))
	(multislot product_type_produced_by_process
;+		(comment "The Business Processes that produce the product type.")
		(type INSTANCE)
;+		(allowed-classes Business_Process_Type)
		(create-accessor read-write))
	(multislot product_type_information_held
;+		(comment "The Information that is held about the Product Type.")
		(type INSTANCE)
;+		(allowed-classes Information_View)
		(create-accessor read-write))
	(single-slot product_type_sourced_externally
;+		(comment "Determines if this Product Type is sourced from an external enterprise")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default FALSE)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot product_type_brands
;+		(comment "The Brands associated with products of this type")
		(type INSTANCE)
;+		(allowed-classes Brand)
		(create-accessor read-write))
	(multislot product_type_target_audience
;+		(comment "The Business Role that is the target consumer of the Product Type")
		(type INSTANCE)
;+		(allowed-classes Business_Role)
		(create-accessor read-write))
	(multislot pt_product_type_features
;+		(comment "The features that are provided by this product type")
		(type INSTANCE)
;+		(allowed-classes Product_Feature)
		(create-accessor read-write))
	(single-slot pt_static_architecture
;+		(comment "A static architecture for the product type, describing its dependencies on other product types")
		(type INSTANCE)
;+		(allowed-classes Static_Product_Type_Architecture)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Product_Type)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot contained_product_types
;+		(comment "The set of Product Type instances that are contained in a Composite.")
		(type INSTANCE)
;+		(allowed-classes Product_Type)
		(create-accessor read-write)))

(defclass Composite_Product_Type ""
	(is-a Product_Type)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Product_Type)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Business_Rule "Class to manage the definition of business rules."
	(is-a Business_Logical)
	(role concrete))

(defclass Product "Class to capture the products that are produced by the enterprise. Products are instances of Product Types. E.g. in the motor manufacturer example, products could be 'Focus', 'Mustang' as instances of the 'Car' type. Equally, a service company would capture the service offerings."
	(is-a Business_Logical)
	(role concrete)
	(multislot product_implemented_by_process
;+		(comment "The Physical Business Processes that implement the product.")
		(type INSTANCE)
;+		(allowed-classes Physical_Process_Type)
		(create-accessor read-write))
	(multislot product_feature_implementations
;+		(comment "The implementations of the product features provided by this product")
		(type INSTANCE)
;+		(allowed-classes Product_Feature_Implementation)
		(create-accessor read-write))
	(multislot product_supporting_products
;+		(comment "The products that support the delivery of this product")
		(type INSTANCE)
;+		(allowed-classes Product)
		(create-accessor read-write))
	(multislot product_information_held
;+		(comment "The Information that is held about the Product.")
		(type INSTANCE)
;+		(allowed-classes Information_Representation)
		(create-accessor read-write))
	(multislot instance_of_product_type
;+		(comment "The Product Type(s) that a Product is an instance of.")
		(type INSTANCE)
;+		(allowed-classes Product_Type)
		(create-accessor read-write))
	(multislot product_consumers
;+		(comment "The set of consumers of the Product")
		(type INSTANCE)
;+		(allowed-classes Actor Business_Role)
		(create-accessor read-write))
	(single-slot product_lifecycle_status
;+		(comment "The current lifecycle status of the Product")
		(type INSTANCE)
;+		(allowed-classes Product_Lifecycle_Status)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Product)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot prod_static_architecture
;+		(comment "A model that describes other products that this product is dependent upon (including any required information)")
		(type INSTANCE)
;+		(allowed-classes Static_Product_Architecture)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot product_is_external
;+		(comment "Defines whether the product is owned by a 3rd party actor")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default FALSE)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot service_related_channel
;+		(comment "Channel(s) that enable the delivery of a product or business service")
		(type INSTANCE)
;+		(allowed-classes Channel)
		(create-accessor read-write)))

(defclass Composite_Product ""
	(is-a Product)
	(role concrete)
	(multislot product_contained_products
;+		(comment "")
		(type INSTANCE)
;+		(allowed-classes Product)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Product)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Brand "A brand is a symbol by which a customer identifies market facing identifier that has a consistent set of principals for creating Customer Value Propositions that satisfy a particular set of needs"
	(is-a Business_Logical)
	(role concrete)
	(multislot brand_associated_roles
;+		(comment "Associated business roles to the brand")
		(type INSTANCE)
;+		(allowed-classes Group_Business_Role)
		(create-accessor read-write))
	(multislot brand_associated_products
;+		(comment "Products that are associated with the Brand")
		(type INSTANCE)
;+		(allowed-classes Product)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Business_Logical)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Channel "It is the medium for the customer to interact with the organisation to obtain or access products, features and market services"
	(is-a Business_Logical)
	(role concrete)
	(multislot channel_initiates_service
;+		(comment "Products or Business Services provided through the channel")
		(type INSTANCE)
;+		(allowed-classes Product)
		(create-accessor read-write))
	(multislot channel_type
;+		(comment "The parent type of the Channel")
		(type INSTANCE)
;+		(allowed-classes Channel_Type)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Business_Logical)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Product_Feature "Features are components or characteristics of the product and services we make available to customers"
	(is-a Business_Logical)
	(role concrete)
	(multislot feature_delivered_by
;+		(comment "Relationship to the Product Feature Implementations that deliver a Feature")
		(type INSTANCE)
;+		(allowed-classes Product_Feature_Implementation)
		(create-accessor read-write))
	(multislot feature_for_product_type
;+		(comment "The product type that this feature belongs to")
		(type INSTANCE)
;+		(allowed-classes Product_Type)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Business_Logical)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Product_Feature_Implementation "Specific implementations of components or characteristics of products (or services) that are made available to customers"
	(is-a Business_Logical)
	(role concrete)
	(single-slot implements_product_feature
;+		(comment "Defines the product feature that is implemented")
		(type INSTANCE)
;+		(allowed-classes Product_Feature)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Business_Logical)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot pfi_feature_implementation_for_product
;+		(comment "The product to which this feature implementation belongs")
		(type INSTANCE)
;+		(allowed-classes Product)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass Business_Process_Family "Used to group business processes, activities or tasks that are variants of each other into a  single 'family', allowing them to be distinct while at the same time ceonvetying that they are related.\nThis provides a more powerful and flexible approach than using Enumerations or Taxonomies as it allows contextual information to be added, for example, Business Process X is a standard for the EMEA region within its Business Process family"
	(is-a Business_Logical)
	(role concrete)
	(multislot bpf_contains_busproctypes
;+		(comment "The business processes, activities or tasks that belong to this business process family")
		(type INSTANCE)
;+		(allowed-classes Business_Process_Type)
		(create-accessor read-write))
	(multislot bpf_contained_business_process_types
;+		(comment "DEPRECTAED: REPLACED BY DIRECT RELATIONSHIP\nThe business processes, activities or tasks that form this business process family")
		(type INSTANCE)
;+		(allowed-classes BUSPROCTYPE_IN_BUSPROCFAM_RELATION)
		(create-accessor read-write))
	(single-slot bpf_business_criticality
;+		(comment "Defines the relative criticality of the business process family to the business")
		(type INSTANCE)
;+		(allowed-classes Business_Criticality)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Business_Logical)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Customer_Journey "Represents a customer persona's typical experience over time when engaging with an enterprise"
	(is-a Business_Logical)
	(role concrete)
	(single-slot cj_persona
;+		(comment "The persona that engages with the enterprise for this Customer Journey")
		(type INSTANCE)
;+		(allowed-classes Persona)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot cj_phases
;+		(comment "The sequence of Customer Journey Phases that take place within this Customer Journey")
		(type INSTANCE)
;+		(allowed-classes Customer_Journey_Phase)
		(create-accessor read-write))
	(multislot cj_product_types
;+		(comment "Product Types for which a Persona undertakes the Customer Journey")
		(type INSTANCE)
;+		(allowed-classes Product_Type)
		(create-accessor read-write))
	(multislot cj_products
;+		(comment "Products for which a Persona undertakes the Customer Journey")
		(type INSTANCE)
;+		(allowed-classes Product)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Business_Logical)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Customer_Journey_Phase "Represents a key touchpoint in a Customer Journey between a customer persona and an enterprise"
	(is-a Business_Logical)
	(role concrete)
	(single-slot cjp_label
;+		(comment "The name of the Customer Journey Phase")
		(type INSTANCE)
;+		(allowed-classes Label)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot cjp_index
;+		(comment "Defines the position of this Customer Journey Phase in the sequence of Customer Journey Phases that take place within a Customer Journey")
		(type INTEGER)
		(default 0)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot cjp_customer_journey
;+		(comment "The parent Customer Journey that contains this Customer Journey Phase")
		(type INSTANCE)
;+		(allowed-classes Customer_Journey)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot cjp_channel
;+		(comment "The channel through which the persona associated with the parent Customer Journey engages with the enterprise for this Customer Journey Phase")
		(type INSTANCE)
;+		(allowed-classes CUST_JOURNEY_PHASE_TO_CHANNEL_RELATION)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot cjp_value_stages
;+		(comment "The Value Stages that are supported by this Customer Journey Phase")
		(type INSTANCE)
;+		(allowed-classes Value_Stage)
		(create-accessor read-write))
	(multislot cjp_supporting_phys_processes
;+		(comment "Physical processes or activities that are performed by the enterprise in support of the Customer Journey Phase")
		(type INSTANCE)
;+		(allowed-classes Physical_Process_Type)
		(create-accessor read-write))
	(single-slot cjp_experience_rating
;+		(comment "The Customer Experience Rating for the Persona when undertaking the Customer Journey Phase")
		(type INSTANCE)
;+		(allowed-classes CUST_JOURNEY_PHASE_TO_EXPERIENCE_RELATION)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Business_Logical)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot cjp_emotions
;+		(comment "The emotional states of the Persona during the Customer Journey Phase")
		(type INSTANCE)
;+		(allowed-classes CUST_JOURNEY_PHASE_TO_EMOTION_RELATION)
		(create-accessor read-write)))

(defclass Business_Condition "Class to manage the definition of Business Conditions that determine whether a process can begin, or can be completed"
	(is-a Business_Logical)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Business_Logical)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Business_Model_Configuration "Defines a configurations of enterprise elements that are required to deliver a business model in a specific context"
	(is-a Business_Logical)
	(role concrete)
	(single-slot bmc_label
;+		(comment "The display label for the Business Model Configuration")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot bmc_for_business_model
;+		(comment "The Business Model of which this is a context specific configuration")
		(type INSTANCE)
;+		(allowed-classes Business_Model)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot bmc_elements
;+		(comment "The enterprise elements that are needed to implement the Business Model Configuration")
		(type INSTANCE)
;+		(allowed-classes BUSMODEL_CONFIG_TO_ELEMENT_RELATION)
		(create-accessor read-write))
	(multislot bmc_product_scope
;+		(comment "The Products or Product Types that are supported by the Business Model Configuration")
		(type INSTANCE)
;+		(allowed-classes Product Product_Type)
		(create-accessor read-write))
	(single-slot bmc_architecture
;+		(comment "The architecure describing the dependencies between reference elements that comprise the Business Model Configuration")
		(type INSTANCE)
;+		(allowed-classes Business_Model_Configuration_Architecture)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot bmc_geo_scope
;+		(comment "The Geographic Regions or Locations that are supported by the Business Model Configuration")
		(type INSTANCE)
;+		(allowed-classes Geographic_Region Geographic_Location)
		(create-accessor read-write))
	(single-slot bmc_brand_scope
;+		(comment "The Brands that are supported by the Business Model Configuration")
		(type INSTANCE)
;+		(allowed-classes Brand)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot bmc_org_scope
;+		(comment "The Organisations that are supported by the Business Model Configuration")
		(type INSTANCE)
;+		(allowed-classes Group_Actor)
		(create-accessor read-write))
	(multislot bmc_channel_scope
;+		(comment "The Channels or Channel Types that are supported by the Business Model Configuration")
		(type INSTANCE)
;+		(allowed-classes Channel)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Business_Logical)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Channel_Type ""
	(is-a Business_Logical)
	(role concrete)
	(multislot channel_type_for_product_types
;+		(comment "The Product Types that for which this Channel Type is used")
		(type INSTANCE)
;+		(allowed-classes Product_Type)
		(create-accessor read-write))
	(multislot channel_type_channels
;+		(comment "The specific channels of this type")
		(type INSTANCE)
;+		(allowed-classes Channel)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Business_Logical)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Business_Physical "The Physical view of the Business Layer of the meta model. A set of meta-classes that help to describes the physical implementation of the business - the WHERE and WHOM."
	(is-a Business_Layer)
	(role abstract)
	(multislot bus_physical_contained_in_arch_states
;+		(comment "The architecture states that contain this physical business element")
		(type INSTANCE)
;+		(allowed-classes Architecture_State)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Business_Physical)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Actor "A specific, named, group, team or individual that peforms a role in a process.\nActors are used to capture how the enterprise is actually organised, in terms of the real companies, divisions, teams and individuals that make up the organisation. Actors take on the Roles (defined in the organisation design) to execute Physical processes/activities."
	(is-a Business_Physical)
	(role abstract)
	(multislot known_business_issues
;+		(comment "Known issues for this business layer element")
		(type INSTANCE)
;+		(allowed-classes Issue)
		(create-accessor read-write))
	(multislot actor_plays_role
;+		(comment "Specifies the list of roles that this actor plays in processes using link class/relation")
		(type INSTANCE)
;+		(allowed-classes ACTOR_TO_ROLE_RELATION)
		(create-accessor read-write))
	(single-slot email
;+		(comment "Slot to capture the email address of an Actor")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot performs_physical_processes
;+		(comment "The physical business processes that this actor peforms in the given role")
		(type INSTANCE)
;+		(allowed-classes Physical_Process)
		(create-accessor read-write))
	(multislot is_member_of_actor
;+		(comment "The parent Actor that an Actor can belong to and thereby is a sub-actor of that parent.")
		(type INSTANCE)
;+		(allowed-classes Actor)
		(create-accessor read-write))
	(multislot actor_objectives
;+		(comment "Slot to manage the set of Objectives that an Actor has. Note that this slot manages all 'types' of Objective, not just Business Objective")
		(type INSTANCE)
;+		(allowed-classes Business_Objective Information_Architecture_Objective Application_Architecture_Objective Technology_Architecture_Objective)
		(create-accessor read-write))
	(multislot actor_business_scope
;+		(comment "Slot to define the scope of business capabilities that define what that Actor does at the conceptual level of abstraction. For Group Actors, defines the scope of capabilities that an organisation has.")
		(type INSTANCE)
;+		(allowed-classes Business_Capability)
		(create-accessor read-write))
	(multislot actor_assigned_objectives
;+		(comment "The objectives that have been assigned to the Actor, and for which the Actor is responsible for meeting.")
		(type INSTANCE)
;+		(allowed-classes ACTOR_TO_OBJECTIVE_RELATION)
		(create-accessor read-write))
	(multislot actor_based_at_site
;+		(comment "The site /primary sites at which the Actor is based. Note that this is in contrast to where the Actor plays Roles to perform Processes.")
		(type INSTANCE)
;+		(allowed-classes Site)
		(create-accessor read-write))
	(single-slot external_to_enterprise
;+		(comment "Determines whether an actor or role is internal or external to the organisation being modelled")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default FALSE)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Actor)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot actor_has_skills
;+		(comment "Defines the set of skills that a particular Actor can provide, using a relationship class to define qualities of the Actor's skills")
		(type INSTANCE)
;+		(allowed-classes ACTOR_TO_SKILL_RELATION)
		(create-accessor read-write)))

(defclass Individual_Actor "An individual person that performs a physical business process type"
	(is-a Actor)
	(role concrete)
	(single-slot indivactor_skill_level
;+		(comment "The overall skill level associated with the individual actor or job position")
		(type INSTANCE)
;+		(allowed-classes Skill_Level)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot indvactor_managers
;+		(comment "Captures the managers of this individual actor")
		(type INSTANCE)
;+		(allowed-classes ACTOR_REPORTSTO_ACTOR_RELATION)
		(create-accessor read-write))
	(multislot indvactor_managed_individuals
;+		(comment "The individual actors that report to this actor")
		(type INSTANCE)
;+		(allowed-classes ACTOR_REPORTSTO_ACTOR_RELATION)
		(create-accessor read-write))
	(multislot actor_has_jobs
;+		(comment "The Job Positions in which the Individual Actor has been placed")
		(type INSTANCE)
;+		(allowed-classes ACTOR_TO_JOB_RELATION)
		(create-accessor read-write))
	(multislot indivactor_expertise
;+		(comment "The expertise associated with the actor or job position")
		(type INSTANCE)
;+		(allowed-classes ACTOR_TO_EXPERTISE_RELATION)
		(create-accessor read-write))
	(multislot indivactor_skill_certifications
;+		(comment "The skill certifications that the actor possesses")
		(type INSTANCE)
;+		(allowed-classes Skill_Certification)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Individual_Actor)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Job_Position "A position within an organisation (Group Actor) which is filled by an individual actor"
	(is-a Individual_Actor)
	(role concrete)
	(multislot job_given_to_actors
;+		(comment "The individual actors that have been (or wish to be) placed in this Job Position")
		(type INSTANCE)
;+		(allowed-classes ACTOR_TO_JOB_RELATION)
		(create-accessor read-write))
	(multislot job_requires_skills
;+		(comment "The skills that this job position requires")
		(type INSTANCE)
;+		(allowed-classes JOB_TO_SKILL_RELATION)
		(create-accessor read-write))
	(multislot job_required_certifications
;+		(comment "Skill Certifications that are required for the Job Position")
		(type INSTANCE)
;+		(allowed-classes Skill_Certification)
		(create-accessor read-write))
	(multislot job_performed_roles_at_levels
;+		(comment "The business roles at specific levels that are performed by a job")
		(type INSTANCE)
;+		(allowed-classes JOB_TO_ROLEATLEVEL_RELATION)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Individual_Actor)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Persona "Represents an archetype of customer groups that engage with an enterprise"
	(is-a Individual_Actor)
	(role concrete)
	(multislot persona_customer_journeys
;+		(comment "The Customer Journeys that are undertaken by this Persona")
		(type INSTANCE)
;+		(allowed-classes Customer_Journey)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Individual_Actor)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Group_Actor "An iorganisation or team that performs a physical business process type"
	(is-a Actor)
	(role concrete)
	(multislot group_lead_individual_actor
;+		(comment "The individual actors (or Job Positions) that are defined as leading/managing the Group Actor")
		(type INSTANCE)
;+		(allowed-classes Individual_Actor)
		(create-accessor read-write))
	(single-slot group_actor_lifecycle_status
;+		(comment "Defines the current lifecycle status of the Organisation")
		(type INSTANCE)
;+		(allowed-classes Group_Actor_Lifecycle_Status)
		(default [store_55_Class21])
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot allocated_resources
;+		(comment "Resources (in FTEs) that have been allocated to this element")
		(type INSTANCE)
;+		(allowed-classes Resource_Allocation)
		(create-accessor read-write))
	(multislot contained_sub_actors
;+		(comment "The set of actors that are members of this Actor, e.g. when an Actor represents a group or department, the sub-actors define the teams and members of that department.")
		(type INSTANCE)
;+		(allowed-classes Actor)
		(create-accessor read-write))
	(single-slot is_root
;+		(comment "Defines whether this element is the root element of a hierarchy")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default FALSE)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot group_actor_applied_business_model_configurations
;+		(comment "The Business Model Configurations that have been applied in the design of the Group Actor, its processes prerformed and supporting technology")
		(type INSTANCE)
;+		(allowed-classes Business_Model_Configuration)
		(create-accessor read-write))
	(multislot required_fte_resources
;+		(comment "The resources (in FTEs) required")
		(type INSTANCE)
;+		(allowed-classes Resource_Requirement)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Group_Actor)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Site "A specific (and named) physical location where processes or activities take place."
	(is-a Business_Physical)
	(role concrete)
	(multislot instance_of_site_categories
;+		(comment "The type of location that this Site is.")
		(type INSTANCE)
;+		(allowed-classes Site_Category)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(single-slot site_geographic_location
;+		(comment "The geographic location of a site, defined in terms of a Geographical Location or Geographical Region, as required.")
		(type INSTANCE)
;+		(allowed-classes Geographic_Region Geographic_Location)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot contained_sites
;+		(comment "Sites that are located within a Site.")
		(type INSTANCE)
;+		(allowed-classes Site)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Site)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Physical_Process_Type "Base class for the Physical Business Process meta classes. Holds basic information and the relation to Application Providers and Application Function Implementations that support this process."
	(is-a Business_Physical)
	(role abstract)
	(multislot parent_physical_processes
;+		(comment "The physical processes in which this physical process is performed")
		(type INSTANCE)
;+		(allowed-classes Physical_Process)
		(create-accessor read-write))
	(multislot phys_bp_supported_by_app_funimpl
;+		(comment "Specifies an Application Function Implementation that is supporting the Physical Business Process")
		(type INSTANCE)
;+		(allowed-classes APP_FUNIMPL_TO_BUS_RELATION)
		(create-accessor read-write))
	(multislot physbusproc_uses_appinforeps
;+		(comment "The information provided by applications that the actor uses to perform the business process")
		(type INSTANCE)
;+		(allowed-classes PHYSBUSPROC_TO_APPINFOREP_RELATION)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Physical_Process_Type)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot phys_bp_supported_by_app_pro
;+		(comment "Specifies an Application Provider that is supporting the Physical Business Process")
		(type INSTANCE)
;+		(allowed-classes APP_PRO_TO_PHYS_BUS_RELATION)
		(create-accessor read-write))
	(multislot physical_process_automated_by
;+		(comment "The set of Application Function Implementations that automate a Physical Process.")
		(type INSTANCE)
;+		(allowed-classes Application_Function_Implementation)
		(create-accessor read-write)))

(defclass Physical_Process "An instance of a Business Process that is performed by a group or individual in the enterprise."
	(is-a Physical_Process_Type)
	(role concrete)
	(multislot known_business_issues
;+		(comment "Known issues for this business layer element")
		(type INSTANCE)
;+		(allowed-classes Issue)
		(create-accessor read-write))
	(multislot inverse_of_contained_physical_sub_processes
;+		(comment "The physical process aggregations that in which a Physical Process appears.")
		(type INSTANCE)
;+		(allowed-classes Physical_Process)
		(create-accessor read-write))
	(single-slot process_manager
;+		(comment "DEPRECATED. USE STAKEHOLDERS SLOT. The manager responsible for the execution of the Physical Process")
		(type INSTANCE)
;+		(allowed-classes Actor)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot process_performed_at_sites
;+		(comment "The Sites at which this process is performed")
		(type INSTANCE)
;+		(allowed-classes Site)
		(create-accessor read-write))
	(multislot contained_physical_sub_processes
;+		(comment "The set of physical processes that make up this Physical Process aggregation.")
		(type INSTANCE)
;+		(allowed-classes Physical_Process_Type)
		(create-accessor read-write))
	(single-slot implements_business_process
;+		(comment "The Business Process that this Physical Process is an instance of.")
		(type INSTANCE)
;+		(allowed-classes Business_Process)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot process_performed_by_actor_role
;+		(comment "The Actor, taking on a Business Role that perform this process.")
		(type INSTANCE)
;+		(allowed-classes ACTOR_TO_ROLE_RELATION Actor)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Physical_Process)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Physical_Activity "An instance of a Business Activity that is performed by a group or individual in the enterprise."
	(is-a Physical_Process_Type)
	(role concrete)
	(single-slot activity_performed_by_actor_role
;+		(comment "The Actor, taking on a Business Role, that performs this activity")
		(type INSTANCE)
;+		(allowed-classes ACTOR_TO_ROLE_RELATION Actor)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot instance_of_business_activity
;+		(comment "The Business Activity that this Physical Activity is an instance of.")
		(type INSTANCE)
;+		(allowed-classes Business_Activity)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot activity_peformed_at_site
;+		(comment "The Site at which this Physical Activity is performed.")
		(type INSTANCE)
;+		(allowed-classes Site)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Physical_Activity)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Application_Layer "Base class for Application Architecture constructs. All the meta classes for the Application Layer are sub-classes of this."
	(is-a EA_Class)
	(role abstract)
	(multislot al_security_classifications
;+		(comment "The security classifications assigned to this application element in the context of the enterprise")
		(type INSTANCE)
;+		(allowed-classes Security_Classification)
		(create-accessor read-write))
	(multislot al_managed_by_services
;+		(comment "The managed services that are related to this Application element")
		(type INSTANCE)
;+		(allowed-classes Managed_Service)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Application_Layer)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Application_Conceptual "The Conceptual view of the Application Layer of the meta model. A set of meta-classes that helps to describe the capabilities or requirements for the behaviour and functionality of the IT business systems of the enterprise"
	(is-a Application_Layer)
	(role abstract)
	(multislot app_conceptual_contained_in_arch_states
;+		(comment "The architectures states that contain this conceptual application element")
		(type INSTANCE)
;+		(allowed-classes Architecture_State)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Application_Conceptual)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Application_Architecture_Principle "High level rules that govern  the manner in which application capabilities are implemented by the enterprise"
	(is-a Application_Conceptual)
	(role concrete)
	(multislot principle_inf_implications_synonyms
;+		(comment "Defines synonyms for the information implications of the principle")
		(type INSTANCE)
;+		(allowed-classes Synonym)
		(create-accessor read-write))
	(multislot principle_bus_implications_synonyms
;+		(comment "Allows for language translations of the business implications of a principle")
		(type INSTANCE)
;+		(allowed-classes Synonym)
		(create-accessor read-write))
	(multislot app_principle_inf_implications
;+		(comment "Commentary describing the information implications of the application principle")
		(type STRING)
		(create-accessor read-write))
	(single-slot principle_ref
;+		(comment "A unique internal reference for the principle")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot application_principle_relevant_to_application_capabilities
;+		(comment "")
		(type INSTANCE)
;+		(allowed-classes Application_Capability)
		(create-accessor read-write))
	(multislot supports_application_objectives
;+		(comment "")
		(type INSTANCE)
;+		(allowed-classes Application_Architecture_Objective)
		(create-accessor read-write))
	(multislot principle_rationale_synonyms
;+		(comment "Provides synonyms for the rationale of the principle")
		(type INSTANCE)
;+		(allowed-classes Synonym)
		(create-accessor read-write))
	(multislot principle_realisation_policies
;+		(comment "The set of policies that are in place to realise a Pricinple in concrete terms")
		(type INSTANCE)
;+		(allowed-classes Policy)
		(create-accessor read-write))
	(multislot app_principle_bus_implications
;+		(comment "Commentary describing the business implications of the application principle")
		(type STRING)
		(create-accessor read-write))
	(multislot app_principle_tech_implications
;+		(comment "Commentary describing the technology implications of the application principle")
		(type STRING)
		(create-accessor read-write))
	(multislot principle_app_implications_synonyms
;+		(comment "Captures synonyms for the application implications of the principle")
		(type INSTANCE)
;+		(allowed-classes Synonym)
		(create-accessor read-write))
	(multislot app_principle_app_implications
;+		(comment "Commentary describing the application implications of the application principle")
		(type STRING)
		(create-accessor read-write))
	(single-slot application_principle_rationale
;+		(comment "")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Application_Architecture_Principle)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot principle_tech_implications_synonyms
;+		(comment "Captures synonyms for the technology implications of the principle")
		(type INSTANCE)
;+		(allowed-classes Synonym)
		(create-accessor read-write)))

(defclass Application_Capability "Provides the abstract perspective on the functional behaviour required to support the business. Capabilities are mapped to the Business Domain that they support.\\nOne of the additional purposes of this meta class is to provide a grounding for Applications Functions, enabling one to model that a particular Application Function \\\\\"is a one of these <Application Capabilities>\\\\\""
	(is-a Application_Conceptual)
	(role concrete)
	(multislot application_objectives_for_application_capability
		(type INSTANCE)
;+		(allowed-classes Application_Architecture_Objective)
		(create-accessor read-write))
	(multislot mapped_to_business_domain
;+		(comment "The business domain(s) to which an Application Capability belongs.")
		(type INSTANCE)
;+		(allowed-classes Business_Domain)
		(create-accessor read-write))
	(multislot relevant_application_principles
		(type INSTANCE)
;+		(allowed-classes Application_Architecture_Principle)
		(create-accessor read-write))
	(single-slot sequence_number
;+		(comment "An integer that defines the sequence step at which this relationship occurs within the dynamic view of an architecture.")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot contained_app_capabilities
;+		(comment "The set of Application Capabilities that are contained in an Application Capability. The containING capability is comprised of the contained capabilities, e.g. enabling a description of functional decomposition at this level of abstraction")
		(type INSTANCE)
;+		(allowed-classes Application_Capability)
		(create-accessor read-write))
	(multislot realised_by_application_services
;+		(comment "The Application Services that realise this Application Capability")
		(type INSTANCE)
;+		(allowed-classes Application_Service)
		(create-accessor read-write))
	(multislot app_cap_supporting_tech_caps
;+		(comment "The set of Technology Capabilities that support the Application Capability")
		(type INSTANCE)
;+		(allowed-classes Technology_Capability)
		(create-accessor read-write))
	(multislot app_cap_supports_bus_cap
;+		(comment "The set of Business Capabilities that the Application Capability supports.")
		(type INSTANCE)
;+		(allowed-classes Business_Capability)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Application_Capability)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot contained_in_application_capability
;+		(comment "The Application Capabilities that contain an Application Capability. The contained capability is used as part of the decomposition of the containING capability")
		(type INSTANCE)
;+		(allowed-classes Application_Capability)
		(create-accessor read-write)))

(defclass Application_Driver "Class to define and manage the internal and external influences that motivate the Application Objectives."
	(is-a Application_Conceptual)
	(role concrete)
	(multislot ad_motivated_objectives
;+		(comment "The set of objectives that are motivated by the driver")
		(type INSTANCE)
;+		(allowed-classes Application_Architecture_Objective)
		(create-accessor read-write))
	(multislot ad_has_inf_implications
;+		(comment "The of Information Drivers for which an application driver has implications.")
		(type INSTANCE)
;+		(allowed-classes Information_Driver)
		(create-accessor read-write))
	(multislot ad_has_app_implications
;+		(comment "The of Application Drivers for which an application driver has implications.")
		(type INSTANCE)
;+		(allowed-classes Application_Driver)
		(create-accessor read-write))
	(multislot ad_has_tech_implications
;+		(comment "The of Technology Drivers for which an application driver has implications.")
		(type INSTANCE)
;+		(allowed-classes Technology_Driver)
		(create-accessor read-write)))

(defclass Application_Objective_Type ""
	(is-a Application_Conceptual)
	(role abstract)
	(multislot ao_motivated_by_driver
;+		(comment "The set of drivers that motivate the objective")
		(type INSTANCE)
;+		(allowed-classes Application_Driver)
		(create-accessor read-write))
	(multislot ao_owner
;+		(comment "Captures the individual or organisation that is accountable for meeting the objective")
		(type INSTANCE)
;+		(allowed-classes Actor)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Application_Conceptual)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Application_Architecture_Objective "A strategic goal associated with the Application Architecture of the enterprise"
	(is-a Application_Objective_Type)
	(role concrete)
	(multislot objective_for_application_capabilities
;+		(comment "")
		(type INSTANCE)
;+		(allowed-classes Application_Capability)
		(create-accessor read-write))
	(multislot objective_supported_by_objective
;+		(comment "Slot to manage the set of objectives that support an objective. Applies to Business Objectives, Application Architecture Objectives, Information Architecture Objectives and Technology Architecture Objectives")
		(type INSTANCE)
;+		(allowed-classes Information_Architecture_Objective Technology_Architecture_Objective Application_Architecture_Objective Business_Objective)
		(create-accessor read-write))
	(multislot objective_supports_objective
;+		(comment "Slot to manage the set of objectives that are supported by an objective. Applies to Business Objectives, Application Architecture Objectives, Information Architecture Objectives and Technology Architecture Objectives.")
		(type INSTANCE)
;+		(allowed-classes Application_Architecture_Objective Business_Objective Information_Architecture_Objective Technology_Architecture_Objective)
		(create-accessor read-write))
	(single-slot ao_target_date
;+		(comment "The target date for achieving the objective")
		(type INSTANCE)
;+		(allowed-classes Time)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot ao_measures
;+		(comment "Captures the Application Service Qualities Values that will measure success in meeting the Application Objective")
		(type INSTANCE)
;+		(allowed-classes Application_Service_Quality_Value)
		(create-accessor read-write))
	(multislot objective_supported_by_strategic_plan
;+		(comment "Slot to manage the set of Strategic Plans that support an objective (Business Objective, Application Architecture Objective, Information Architecture Objective and Technology Architecture Objectives)")
		(type INSTANCE)
;+		(allowed-classes Strategic_Plan)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Application_Architecture_Objective)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot supporting_application_principles
;+		(comment "")
		(type INSTANCE)
;+		(allowed-classes Application_Architecture_Principle)
		(create-accessor read-write))
	(single-slot ao_target_date_iso_8601
;+		(comment "The target date for achieving the objective in ISO 8601 format (yyyy-mm-dd)")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Application_Architecture_Goal "Defines a high level aspiration for the application architecture"
	(is-a Application_Objective_Type)
	(role concrete)
	(multislot goal_supported_by_objectives
;+		(comment "The objectives that help to meet the goal")
		(type INSTANCE)
;+		(allowed-classes Business_Objective Information_Architecture_Objective Application_Architecture_Objective Technology_Architecture_Objective)
		(create-accessor read-write))
	(multislot objective_supports_goals
;+		(comment "The strategic goals that are supported by this objective")
		(type INSTANCE)
;+		(allowed-classes Business_Goal Application_Architecture_Goal Information_Architecture_Goal Technology_Architecture_Goal)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Application_Conceptual)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Application_Logical "The Logical view of the Application Layer of the meta model. A set of meta-classes that helps to describes the logical design of the functionality and behaviour of the IT  systems that support the business"
	(is-a Application_Layer)
	(role abstract)
	(multislot app_logical_contained_in_arch_states
;+		(comment "The architecture states that contain this logical application element")
		(type INSTANCE)
;+		(allowed-classes Architecture_State)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Application_Logical)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Application_Service "A well-defined component of functional behaviour that provides a  logical grouping of related Application Functions. e.g. ExchangeRates Service, CreditCardPayment Service or logical application such as CRM System, ERP System. The specification of the service - in terms of what it does - is defined by the set of Application Functions that it provides."
	(is-a Application_Logical)
	(role concrete)
	(multislot provided_by_application_provider_roles
;+		(comment "The set of Application Provider Roles that provide the Application Service")
		(type INSTANCE)
;+		(allowed-classes Application_Provider_Role)
		(create-accessor read-write))
	(multislot realises_application_capabilities
;+		(comment "the application capabilities that are realised by this application service")
		(type INSTANCE)
;+		(allowed-classes Application_Capability)
		(create-accessor read-write))
	(single-slot application_service_status
;+		(comment "DEPRECATED")
		(type SYMBOL)
		(allowed-values Online For_Retirement)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot operates_on_information_views
;+		(comment "The Information Views that are processed by this Application Service")
		(type INSTANCE)
;+		(allowed-classes APP_SVC_TO_INFOVIEW_RELATION)
		(create-accessor read-write))
	(multislot required_technology_capabilities
;+		(comment "The technology capabilities that are expected to be required to implement the service")
		(type INSTANCE)
;+		(allowed-classes Technology_Capability)
		(create-accessor read-write))
	(multislot provides_application_functions
;+		(comment "The Application Functions that this service provides.")
		(type INSTANCE)
;+		(allowed-classes Application_Function)
		(create-accessor read-write))
	(multislot provided_by_application_provider
;+		(comment "DEPRECATED. The set of Application Providers that provide an Application Service")
		(type INSTANCE)
;+		(allowed-classes Application_Provider)
		(create-accessor read-write))
	(multislot required_expertise
;+		(comment "Defines the Subject Matter Expertise that is required to deliver this element")
		(type INSTANCE)
;+		(allowed-classes Subject_Matter_Expertise)
		(create-accessor read-write))
	(multislot supports_business_process_appsvc
;+		(comment "The Business Process, Tasks or Activities that are supported by the Application Service.")
		(type INSTANCE)
;+		(allowed-classes APP_SVC_TO_BUS_RELATION)
		(create-accessor read-write))
	(single-slot app_service_static_model_architecture
;+		(comment "A static model defining the sub components of the service and the dependencies between them.")
		(type INSTANCE)
;+		(allowed-classes Static_Application_Service_Architecture)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Application_Service)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Composite_Application_Service "An Application Service that is made up of one or more Application Services"
	(is-a Application_Service)
	(role concrete)
	(multislot composed_of_application_services
;+		(comment "The set of Application Services that make up a Composite Application Service")
		(type INSTANCE)
;+		(allowed-classes Application_Service)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Composite_Application_Service)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Application_Function "A discrete piece of functional behaviour that an application provides. e.g. GetAllExchangeRates, MakeCreditCardPayment"
	(is-a Application_Logical)
	(role concrete)
	(multislot application_function_input_views
;+		(comment "Specify the Information Views that are being passed as inputs to this function.")
		(type INSTANCE)
;+		(allowed-classes Information_View)
		(create-accessor read-write))
	(multislot supports_business_process_appfun
;+		(comment "The Business Processes, Activities or Tasks that an Application Function supports")
		(type INSTANCE)
;+		(allowed-classes APP_FUN_TO_BUS_RELATION)
		(create-accessor read-write))
	(multislot type_of_application_capability
;+		(comment "The Application Capabilities that an Application Function realises")
		(type INSTANCE)
;+		(allowed-classes Application_Capability)
		(create-accessor read-write))
	(single-slot provided_by_application_service
;+		(comment "The Application Service that provides the Application Function")
		(type INSTANCE)
;+		(allowed-classes Application_Service)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot application_function_output_views
;+		(comment "Specify the Information Views that are being returned as outputs by this function.")
		(type INSTANCE)
;+		(allowed-classes Information_View)
		(create-accessor read-write))
	(single-slot application_function_architecture
;+		(comment "The defining Application Function Architecture for an Application Function.")
		(type INSTANCE)
;+		(allowed-classes Dynamic_Application_Service_Architecture)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot automates_business_process_appfun
;+		(comment "The Business Processes, Tasks or Activities that are automated by an Application Function")
		(type INSTANCE)
;+		(allowed-classes Business_Process_Type)
		(create-accessor read-write))
	(single-slot application_function_behaviour_type
;+		(comment "DEPRECATED - Identify the type of behaviour that this function is providing. It is important to focus on the main objective of this function when determining which type of behaviour is being selected.")
		(type SYMBOL)
		(allowed-values Inbound_Data Outbound_Data Process)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot application_function_behaviour
;+		(comment "Identify the type of behaviour that this function is providing. It is important to focus on the main objective of this function when determining which type of behaviour is being selected.")
		(type INSTANCE)
;+		(allowed-classes Application_Function_Behaviour)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Application_Function)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Application_Family "A convenience component for defining types of applications. Enables the application modeller to specify that 2 Application Providers are each a type of an Application. e.g. applicationProviderX and applicationProviderY are types of SAP (Application). In addition, this can be used to group Application Providers under a name by which they are commonly referred to in the enterprise."
	(is-a Application_Logical)
	(role concrete)
	(multislot supports_business_process_app
;+		(comment "The business process, task or activity that this application supports.")
		(type INSTANCE)
;+		(allowed-classes APP_APP_TO_BUS_RELATION)
		(create-accessor read-write))
	(multislot groups_applications
;+		(comment "The Application Providers that this Application groups together.")
		(type INSTANCE)
;+		(allowed-classes Application_Provider)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Application_Family)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Application_Provider_Type "Base class of Application Provider and Application Function Implementations. These are logical things that provide implementations to the Application Services and Application Functions. These are real application components that one can buy (e.g. packaged applications) or that have been built - either customised packages or purely bespoke applications."
	(is-a Application_Logical)
	(role abstract)
	(single-slot user_count_range
;+		(comment "A numercial range for the number of users of the Application Provider")
		(type INSTANCE)
;+		(allowed-classes User_Count_Range)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot uses_information_representation
;+		(comment "Describes the set of Information Representations that are used (created, read, updated, deleted)")
		(type INSTANCE)
;+		(allowed-classes APP_PRO_TO_INFOREP_RELATION)
		(create-accessor read-write))
	(single-slot ea_recovery_point_objective
;+		(comment "Defines the maximum amount of data managed by the Application – as measured by time – that can be lost after a recovery from a disaster or failure")
		(type INSTANCE)
;+		(allowed-classes Recovery_Point_Objective)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot afi_maps_info_data
;+		(comment "Defines the set of information and data mapping(s) that an Application Function Implementation performs.")
		(type INSTANCE)
;+		(allowed-classes AFI_DATA_MAPPING_RELATION)
		(create-accessor read-write))
	(single-slot ap_business_criticality
;+		(comment "The relative business criticality of the Application Provider or Function")
		(type INSTANCE)
;+		(allowed-classes Business_Criticality)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot purchase_status
;+		(comment "Defines the current status of the element from a purchasing perspective")
		(type INSTANCE)
;+		(allowed-classes Purchase_Status)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Application_Provider_Type)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ea_recovery_time_objective
;+		(comment "Defines the maximum amount of time the application can be unavailable for use without resulting in a significant impact on the enterprise")
		(type INSTANCE)
;+		(allowed-classes Recovery_Time_Objective)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Application_Provider "An Application Provider provides one or more Application Services. To provide a service, the Application Provider should provide - through its Application Function Implementations - all of the Application Functions of the Application Service that this Application Provider provides. e.g. a specific implementation of SAP R/3 - the ERP System, the Finance System, Cast Iron Expenses project."
	(is-a Application_Provider_Type)
	(role concrete)
	(multislot application_provider_purpose
;+		(comment "Slot to capture the purpose of an application provider, in terms of the type of solution it provides, e.g. Business Application, Integration, Service and so on. A vocabulary of these purpose types is defined by the instances of the Application_Purpose enumeration class.")
		(type INSTANCE)
;+		(allowed-classes Application_Purpose)
		(create-accessor read-write))
	(single-slot lifecycle_status_application_provider
;+		(comment "The Lifecycle Status of the Application Provider")
		(type INSTANCE)
;+		(allowed-classes Lifecycle_Status)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ap_IT_owner
;+		(comment "DEPRECATED. USE STAKEHOLDERS SLOT. The IT owner for this application provider")
		(type INSTANCE)
;+		(allowed-classes Actor)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot deployments_of_application_provider
;+		(comment "Slot holding the set of Application Deployments of an Application Provider")
		(type INSTANCE)
;+		(allowed-classes Application_Deployment)
		(create-accessor read-write))
	(multislot provides_application_services
;+		(comment "Specifies the Application Services that are provided by an Application Provider")
		(type INSTANCE)
;+		(allowed-classes Application_Provider_Role)
		(create-accessor read-write))
	(single-slot ap_max_number_of_users
;+		(comment "Defines the maximum number of users for the application")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ap_disposition_lifecycle_status
;+		(comment "The current disposition lifecycle status of the Application")
		(type INSTANCE)
;+		(allowed-classes Disposition_Lifecycle_Status)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ap_supplier
;+		(comment "The Supplier of the Application Provider")
		(type INSTANCE)
;+		(allowed-classes Supplier)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot type_of_application
;+		(comment "A provider can be considered a type of this Application")
		(type INSTANCE)
;+		(allowed-classes Application_Family)
		(create-accessor read-write))
	(single-slot ap_codebase_status
;+		(comment "The status of the Application Provider codebase. Is this a packaged application, a bespoke application or something in between.")
		(type INSTANCE)
;+		(allowed-classes Codebase_Status)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot known_app_issue
;+		(comment "A known issue for this application layer element")
		(type INSTANCE)
;+		(allowed-classes Issue)
		(create-accessor read-write))
	(multislot required_expertise
;+		(comment "Defines the Subject Matter Expertise that is required to deliver this element")
		(type INSTANCE)
;+		(allowed-classes Subject_Matter_Expertise)
		(create-accessor read-write))
	(multislot ap_interfaces
;+		(comment "Captures the list interfaces that are available for the Application Provider")
		(type INSTANCE)
;+		(allowed-classes Application_Provider_Interface)
		(create-accessor read-write))
	(multislot ap_site_access
;+		(comment "The sites from which this application provider is accessed")
		(type INSTANCE)
;+		(allowed-classes Site)
		(create-accessor read-write))
	(single-slot ap_delivery_model
;+		(comment "Describes the manner in which the funcationality of the Application Provider is delivered (e.g. On-Site, Hosted, SaaS)")
		(type INSTANCE)
;+		(allowed-classes Application_Delivery_Model)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot implemented_with_technology
;+		(comment "The technology architecture that an Application Provider is implemented with. This architecture is defined in terms of a Logical Design of Technology Components.")
		(type INSTANCE)
;+		(allowed-classes Technology_Composite)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot has_software_architecture
;+		(comment "the logical software architeure of this application provider")
		(type INSTANCE)
;+		(allowed-classes Logical_Software_Architecture)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ap_IT_contact
;+		(comment "DEPRECATED. USE STAKEHOLDERS SLOT. The IT contact for the Application Provider")
		(type INSTANCE)
;+		(allowed-classes Actor)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ap_static_architecture
;+		(comment "The defining static architecture of an Applicatoin Provider.")
		(type INSTANCE)
;+		(allowed-classes Static_Application_Provider_Architecture)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot operates_on_information_representation
;+		(comment "DEPRECATED - REPLACED BY 'uses_information_representation'.\\nThe Information Representation that an Application Provider operates on.")
		(type INSTANCE)
;+		(allowed-classes Information_Representation)
		(create-accessor read-write))
	(multislot required_technology_capabilities
;+		(comment "The technology capabilities that are expected to be required to implement the service")
		(type INSTANCE)
;+		(allowed-classes Technology_Capability)
		(create-accessor read-write))
	(single-slot parent_application_provider
;+		(comment "The application that comprises this application along")
		(type INSTANCE)
;+		(allowed-classes Composite_Application_Provider)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot ap_data_object_requirements
;+		(comment "The logical Data Objects that this Application Provider requires to deliver its functionality")
		(type INSTANCE)
;+		(allowed-classes APP_PRO_TO_DATAOBJ_REQ_RELATION)
		(create-accessor read-write))
	(multislot provides_application_service
;+		(comment "DEPRECATED. The Application Services that this Application Provider provides")
		(type INSTANCE)
;+		(allowed-classes Application_Service)
		(create-accessor read-write))
	(multislot provides_application_function_implementations
;+		(comment "The Application Function Implementations that this Provider provides")
		(type INSTANCE)
;+		(allowed-classes Application_Function_Implementation)
		(create-accessor read-write))
	(single-slot distribute_costs
;+		(comment "Defines whether the costs associated with the element should be evenly distributed across the consumers of its capabilities")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default TRUE)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot app_pro_supports_phys_proc
;+		(comment "DEPRECATED. Specifies the Physical Business processes supported by an Application Provider")
		(type INSTANCE)
;+		(allowed-classes APP_PRO_TO_PHYS_BUS_RELATION)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Application_Provider)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ap_business_owner
;+		(comment "DEPRECATED. USE STAKEHOLDERS SLOT. The business owner for this application provider")
		(type INSTANCE)
;+		(allowed-classes Actor)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Composite_Application_Provider "An Application Provider that is made up of one or more Application Providers"
	(is-a Application_Provider)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Composite_Application_Provider)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot contained_application_providers
;+		(comment "The set of Application Providers that make up a Composite Application Provider")
		(type INSTANCE)
;+		(allowed-classes Application_Provider)
		(create-accessor read-write)))

(defclass Application_Provider_Interface "Represents a n application component that is solely responsible for acting as an interface between two or more other applications"
	(is-a Application_Provider)
	(role concrete)
	(multislot api_supported_protocols
;+		(comment "Captures the list of technology protocols that can be used tio access the functions provided by the interface")
		(type INSTANCE)
;+		(allowed-classes Technology_Protocol)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Application_Provider)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Application_Function_Implementation "An implementation of an Application Function provided by an application - whether bespoke or packaged. e.g. a doCreditCardPayment transaction in SAP Finance implements a MakeCreditCardPayment Application Function."
	(is-a Application_Provider_Type)
	(role concrete)
	(single-slot inverse_of_delivers_app_func_impl
;+		(comment "Specifies the software component that delivers an Application Function Implementation")
		(type INSTANCE)
;+		(allowed-classes Software_Component)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot app_func_impl_logic
;+		(comment "A set of statements describing the logic that is implemented by the function implementation")
		(type STRING)
		(create-accessor read-write))
	(multislot app_fun_impl_requires_tech_cap
;+		(comment "Specifies the Technology Capabilities that an Application Function Implementation requires")
		(type INSTANCE)
;+		(allowed-classes APP_FUNCIMPL_TO_TECH_CAP_RELATION)
		(create-accessor read-write))
	(multislot app_func_impl_reads_data_from
;+		(comment "DEPRECATED - REPLACED BY 'uses_information_representation'")
		(type INSTANCE)
;+		(allowed-classes Information_Representation)
		(create-accessor read-write))
	(single-slot application_function_implementation_provided_by
;+		(comment "the Application Provider that provides this application function implementation")
		(type INSTANCE)
;+		(allowed-classes Application_Provider)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot implements_application_function
;+		(comment "The Application Function(s) that is being implemented.")
		(type INSTANCE)
;+		(allowed-classes Application_Function)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot application_function_impl_architecture
;+		(comment "Architecture defining the dynamic view of how the Function Implementation behaves when invoked.")
		(type INSTANCE)
;+		(allowed-classes Dynamic_Application_Provider_Architecture)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot supports_business_process_appfunimpl
;+		(comment "The Business Processes, Activities or Tasks that are supported by the Application Function Implementation.")
		(type INSTANCE)
;+		(allowed-classes APP_FUNIMPL_TO_BUS_RELATION)
		(create-accessor read-write))
	(multislot inverse_of_physical_process_automated_by
;+		(comment "The set of Physical Process Types (Processes/Activities) that are automated by an Application Function Implementation.")
		(type INSTANCE)
;+		(allowed-classes Physical_Process_Type)
		(create-accessor read-write))
	(single-slot app_func_impl_protocol
;+		(comment "The protocol that is used to invoke an application function implementation")
		(type INSTANCE)
;+		(allowed-classes Technology_Protocol)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot app_func_impl_name
;+		(comment "The given name of the Application Function Implementation, e.g. the name of the Application Provider sub-module (screen, transaction, function, etc.)")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot app_func_impl_creates_data_in
;+		(comment "DEPRECATED - REPLACED BY 'uses_information_representation' SLOT\nThe set of Information Representations that this application function implementation creates data for")
		(type INSTANCE)
;+		(allowed-classes Information_Representation)
		(create-accessor read-write))
	(multislot app_func_impl_updates_data_in
;+		(comment "DEPRECATED - REPLACED BY 'uses_information_representation'")
		(type INSTANCE)
;+		(allowed-classes Information_Representation)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Application_Function_Implementation)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot app_func_impl_deletes_data_from
;+		(comment "DEPRECATED - REPLACED BY 'uses_information_representation'")
		(type INSTANCE)
;+		(allowed-classes Information_Representation)
		(create-accessor read-write)))

(defclass Software_Component "A discrete software component that is contained within the logical software architecture of an Application Provider"
	(is-a Application_Logical)
	(role concrete)
	(single-slot software_runtime_technology
;+		(comment "The technology product providing the application runtime services for this software component")
		(type INSTANCE)
;+		(allowed-classes Technology_Product_Role)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot software_interaction_tech_protocol
;+		(comment "Slot to define the technology protocol used to interact with a software component")
		(type INSTANCE)
;+		(allowed-classes Technology_Protocol)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot software_architecture_layer
;+		(comment "The architecture layer of the element contained within the Software Architecture of an Application Provider")
		(type INSTANCE)
;+		(allowed-classes Software_Architecture_Layer)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot software_from_tech_prod_role
;+		(comment "Slot to capture where a software component comes from, i.e. which Technology Product")
		(type INSTANCE)
;+		(allowed-classes Technology_Product_Role)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Software_Component)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot delivers_app_func_impl
;+		(comment "Specifies the set of Application Function Implementations that this software component delivers")
		(type INSTANCE)
;+		(allowed-classes Application_Function_Implementation)
		(create-accessor read-write))
	(single-slot software_component_architecture_layer
;+		(comment "Defines the logical Software Architecture Layer in which the Software Component should be placed")
		(type INSTANCE)
;+		(allowed-classes Software_Architecture_Layer)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass System_Event "Class of elements describing events that occur in the application layer."
	(is-a Application_Logical)
	(role concrete)
	(single-slot interpreted_as_business_event
;+		(comment "Slot to hold the (optionally) Business Event that a System Event is interpreted as.")
		(type INSTANCE)
;+		(allowed-classes Business_Event)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes System_Event)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot related_information_representation
;+		(comment "Slot to hold the related Information Representation that a System Event is associated with.")
		(type INSTANCE)
;+		(allowed-classes Information_Representation)
		(create-accessor read-write)))

(defclass Time_Based_System_Event "Class to represent System Events that are raised by schedules or are timed events"
	(is-a System_Event)
	(role concrete)
	(single-slot raising_system_event_time_basis
;+		(comment "A string slot to hold the time-based information about the raising of a system event")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Time_Based_System_Event)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass External_System_Event "Class to represent System Events that are raised by parties external to the enterprise."
	(is-a System_Event)
	(role concrete)
	(multislot raising_external_business_actor
;+		(comment "Slot to identify the external party role that raises a business event")
		(type INSTANCE)
;+		(allowed-classes Actor)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes External_System_Event)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Logical_Application_Model "A model that describes relationships between logical application elements"
	(is-a Application_Logical)
	(role abstract)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Logical_Application_Model)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Static_Application_Service_Architecture "The architecture describing the sub components of an Application Service - a STATIC view and static dependencies between them."
	(is-a Logical_Application_Model)
	(role concrete)
	(multislot application_service_usage_dependencies
;+		(comment "The dependencies between the Application Services in the Application Service Architecture")
		(type INSTANCE)
;+		(allowed-classes %3AASU-TO-ASU-STATIC-RELATION)
		(create-accessor read-write))
	(multislot contained_app_service_usages
;+		(comment "The Application Services (Usages) that are the sub components that make up this Application Service Architecture")
		(type INSTANCE)
;+		(allowed-classes Application_Service_Usage)
		(create-accessor read-write))
	(single-slot static_architecture_of_app_svc
;+		(comment "The Application Service that is defined by a Static Application Service Architecture")
		(type INSTANCE)
;+		(allowed-classes Application_Service)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Static_Application_Service_Architecture)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Application_Service_Architecture_Type "Super class of components that participate in service-based Application Architecture models"
	(is-a Logical_Application_Model)
	(role abstract)
	(single-slot used_in_dynamic_application_service_architecture
;+		(comment "Slot referencing the dynamic application service architecture in which Application Service Architecture Types are used.")
		(type INSTANCE)
;+		(allowed-classes Dynamic_Application_Service_Architecture)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot application_function_arch_display_label
;+		(comment "A label for the Application Component Usages when they are displayed in an architecture.")
		(type STRING)
		(default "<component_used>")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Application_Service_Architecture_Type)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Application_Function_Usage "The usage of an Application Function in an Application Service Architecture."
	(is-a Application_Service_Architecture_Type)
	(role concrete)
	(single-slot usage_of_application_function
;+		(comment "The Application Function that this is a usage of.")
		(type INSTANCE)
;+		(allowed-classes Application_Function)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot application_function_arch_display_label
;+		(comment "A label for the Application Component Usages when they are displayed in an architecture.")
		(type STRING)
		(default "<function_used>")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Application_Function_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Application_Service_Usage "The usage of an Application Service in an Application Service Architecture. This is used in both the Static and Dynamic Application Service Architectures so has slots for its use in either."
	(is-a Application_Service_Architecture_Type)
	(role concrete)
	(single-slot application_function_arch_display_label
;+		(comment "A label for the Application Component Usages when they are displayed in an architecture.")
		(type STRING)
		(default "<service_used>")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot usage_of_application_service
;+		(comment "The Application Service that this is a usage of.")
		(type INSTANCE)
;+		(allowed-classes Application_Service)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Application_Service_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot inverse_of_contained_app_service_usages
;+		(comment "Relation back to the containing architecture")
		(type INSTANCE)
;+		(allowed-classes Static_Application_Service_Architecture)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Business_Event_Usage_In_Application_Service "Usage of Business Events in an Application Service Architecture. These can either be initiating events or raised events in the architecture."
	(is-a Application_Service_Architecture_Type)
	(role abstract)
	(single-slot business_event_criteria
;+		(comment "Slot to capture the criteria for when this event is used, e.g. order value > 500")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot usage_of_business_event_in_application_service
;+		(comment "Slot to define which Business Event is being used in an application service architecture usage.")
		(type INSTANCE)
;+		(allowed-classes Business_Event)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Business_Event_Usage_In_Application_Service)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Initiating_Business_Event_Usage_In_Application_Service "Usage of Business Event as an event that initiates an Application Service."
	(is-a Business_Event_Usage_In_Application_Service)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Initiating_Business_Event_Usage_In_Application_Service)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Raised_Business_Event_Usage_In_Application_Service "Usage of Business Event as an event that is raised by an Application Service."
	(is-a Business_Event_Usage_In_Application_Service)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Raised_Business_Event_Usage_In_Application_Service)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Dynamic_Application_Service_Architecture "An Architecture defining the dynamic nature of an Application Function. \nThe architecture describes the sub-components (Application Services and Application Functions) and the relationships between those sub components."
	(is-a Logical_Application_Model)
	(role concrete)
	(multislot contained_architecture_relations
;+		(comment "The relationships between the components in the Application Function Architecture.")
		(type INSTANCE)
;+		(allowed-classes %3AAFA-RELATION)
		(create-accessor read-write))
	(multislot contained_application_function_components
;+		(comment "The Application Function Usages and Application Service Usages that make up the architecture")
		(type INSTANCE)
;+		(allowed-classes Application_Service_Architecture_Type)
		(create-accessor read-write))
	(single-slot dynamic_architecture_of_app_fun
;+		(comment "The Application Function that is defined by a Dynamic Application Service Architecture")
		(type INSTANCE)
;+		(allowed-classes Application_Function)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Dynamic_Application_Service_Architecture)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Static_Application_Provider_Architecture "The architecture describing the sub components of an Application Provider - a STATIC view."
	(is-a Logical_Application_Model)
	(role concrete)
	(single-slot static_architecture_of_app_provider
;+		(comment "")
		(type INSTANCE)
;+		(allowed-classes Application_Provider)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot static_app_provider_architecture_elements
;+		(comment "")
		(type INSTANCE)
;+		(allowed-classes Static_Application_Provider_Architecture_Type)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Static_Application_Provider_Architecture)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot uses_provider
;+		(comment "The relations that are described in this static application provider architecture")
		(type INSTANCE)
;+		(allowed-classes %3AAPA-STATIC-RELATION)
		(create-accessor read-write)))

(defclass Static_Application_Provider_Architecture_Type "The type of classes contained within a static application provider architecture"
	(is-a Logical_Application_Model)
	(role abstract)
	(single-slot static_app_provider_arch_display_label
;+		(comment "The display label for this component in the static application provider architecture model")
		(type STRING)
		(default "<component-name>")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Static_Application_Provider_Architecture_Type)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot used_in_static_app_provider_architecture
;+		(comment "The static application provider architecture that this component is used in")
		(type INSTANCE)
;+		(allowed-classes Static_Application_Provider_Architecture)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Static_Application_Provider_Usage "A usage of an application provider in a static application provider architecture"
	(is-a Static_Application_Provider_Architecture_Type)
	(role concrete)
	(single-slot static_usage_of_app_provider
;+		(comment "usage of an application provider in a static application provider architecture model")
		(type INSTANCE)
;+		(allowed-classes Application_Provider)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Static_Application_Provider_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Static_Application_Function_Implementation_Usage "The usage of an Application Function Implementation in a Static Application Provider Archictecture."
	(is-a Static_Application_Provider_Architecture_Type)
	(role concrete)
	(single-slot static_usage_of_app_func_impl
;+		(comment "The application function implementation that this element is a usage of")
		(type INSTANCE)
;+		(allowed-classes Application_Function_Implementation)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Static_Application_Function_Implementation_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Dynamic_Application_Provider_Architecture "Architecture defining the dynamic behaviour of the implementation of a function implementation.\nThis architecture defines how the Application Providers that are used in the architecture interact (by requesting Function Implementations) in order to deliver the behaviour of the Function Implementation."
	(is-a Logical_Application_Model)
	(role concrete)
	(multislot app_funcImp_architecture_components
;+		(comment "The set of components that are used in the architecture. There are two subtypes of component used in the architecture. \n1. Application Provider (Usages) that represent the actuall applications being used in the architecture.\n2.. Application Function Implementation (Usages) that represent the exposed functionality from the Application Providers that can be requested by other Providers, typically in an integration scenario")
		(type INSTANCE)
;+		(allowed-classes Dynamic_Application_Provider_Architecture_Type)
		(create-accessor read-write))
	(single-slot dynamic_architecture_of_application_function_impl
;+		(comment "the application function implementation that this dynamic application architecture is describing")
		(type INSTANCE)
;+		(allowed-classes Application_Function_Implementation)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Dynamic_Application_Provider_Architecture)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot app_funcImpl_architecture_relations
;+		(comment "The set of relations between the components in the architecture. There are 2 subtypes\n1. Requests from Application Providers to Application Function Implementations.\n2. \"Provided by\" relations between the Function Implementations and the Application Providers that provide that expose them.")
		(type INSTANCE)
;+		(allowed-classes %3AAFIA-RELATION)
		(create-accessor read-write)))

(defclass Dynamic_Application_Provider_Architecture_Type "Super class of components that are used to define a dynamic view of the relationships between Application Function Implementations and Application Providers."
	(is-a Logical_Application_Model)
	(role abstract)
	(single-slot used_in_dynamic_app_provider_architecture
;+		(comment "the dynamic architecture that this component is used in")
		(type INSTANCE)
;+		(allowed-classes Dynamic_Application_Provider_Architecture)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot application_function_arch_display_label
;+		(comment "A label for the Application Component Usages when they are displayed in an architecture.")
		(type STRING)
		(default "<component_used>")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Dynamic_Application_Provider_Architecture_Type)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Dynamic_Application_Function_Implementation_Usage "The usage of an Application Function Implementation in a Dyanmic Application Provider archictecture."
	(is-a Dynamic_Application_Provider_Architecture_Type)
	(role concrete)
	(single-slot usage_of_application_function_implementation
;+		(comment "The Application Function Implementation that is being used.")
		(type INSTANCE)
;+		(allowed-classes Application_Function_Implementation)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot application_function_arch_display_label
;+		(comment "A label for the Application Component Usages when they are displayed in an architecture.")
		(type STRING)
		(default "<function_used>")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Dynamic_Application_Function_Implementation_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Dynamic_Application_Provider_Usage "The usage of an Application Provider in an Application Provider Architecture."
	(is-a Dynamic_Application_Provider_Architecture_Type)
	(role concrete)
	(single-slot application_function_arch_display_label
;+		(comment "A label for the Application Component Usages when they are displayed in an architecture.")
		(type STRING)
		(default "<provider_used>")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot usage_of_application_provider
;+		(comment "The Application Provider that is being used.")
		(type INSTANCE)
;+		(allowed-classes Application_Provider)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Dynamic_Application_Provider_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass System_Event_Usage "Usage of System Events in an Dynamic Application Provider Architecture. These can either be initiating events or raised events in the architecture."
	(is-a Dynamic_Application_Provider_Architecture_Type)
	(role abstract)
	(single-slot system_event_criteria
;+		(comment "Slot to capture the criteria for when this event is used, e.g. order value > 500")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot usage_of_system_event
;+		(comment "Slot to define which System Event is being used in an System Event Usage.")
		(type INSTANCE)
;+		(allowed-classes System_Event)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes System_Event_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Initiating_System_Event_Usage "Usage of System Event as an event that initiates an Application Provider or Function Implementation."
	(is-a System_Event_Usage)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Initiating_System_Event_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Raised_System_Event_Usage "Usage of System Event as an event that is raised by an Application Provider or Function Implementation."
	(is-a System_Event_Usage)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Raised_System_Event_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Logical_Software_Architecture "A high level logical software architecture model for an Application Provider, comprised of Software Component Usages, Information Representations and their relationships"
	(is-a Application_Logical)
	(role concrete)
	(multislot sw_arch_relations
;+		(comment "The relationships contained within this logical software architecture")
		(type INSTANCE)
;+		(allowed-classes SCA-RELATION)
		(create-accessor read-write))
	(multislot logical_software_arch_elements
;+		(comment "The elements contained within a logical software architecture")
		(type INSTANCE)
;+		(allowed-classes Logical_Software_Architecture_Type)
		(create-accessor read-write))
	(single-slot software_architecture_of_app_provider
;+		(comment "The Application Provider which this software architecture is describing")
		(type INSTANCE)
;+		(allowed-classes Application_Provider)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Logical_Software_Architecture)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Logical_Software_Architecture_Type "The classes that are contained within a Logical Software Architecture model"
	(is-a Application_Logical)
	(role abstract)
	(single-slot software_architecture_label
;+		(comment "The label used for an element contained within a Software Architecture model")
		(type STRING)
		(default "a Software Component")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Logical_Software_Architecture_Type)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot contained_in_logical_software_arch
;+		(comment "The logical software architecture in which this element is contained")
		(type INSTANCE)
;+		(allowed-classes Logical_Software_Architecture)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Software_Component_Usage "A usage of a Software Component"
	(is-a Logical_Software_Architecture_Type)
	(role concrete)
	(single-slot usage_of_software_component
;+		(comment "the Software Component that this instance is a usage of")
		(type INSTANCE)
;+		(allowed-classes Software_Component)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot software_physical_deployments
;+		(comment "The physical deployments that exist for this software component")
		(type INSTANCE)
;+		(allowed-classes Application_Deployment)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Software_Component_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Software_Information_Representation_Usage "The usage of an Information Representation in a Logical Software Architecture."
	(is-a Logical_Software_Architecture_Type)
	(role concrete)
	(single-slot software_usage_of_info_rep
;+		(comment "The Information Representation that is being used in an architecture")
		(type INSTANCE)
;+		(allowed-classes Information_Representation)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Software_Information_Representation_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Application_Provider_Role "Represents an Application Provider's ability to provide a specific Application Service"
	(is-a Application_Logical)
	(role concrete)
	(multislot app_pro_role_supports_phys_proc
;+		(comment "Specifies the Physical Business processes supported by an Application Provider Role")
		(type INSTANCE)
;+		(allowed-classes APP_PRO_TO_PHYS_BUS_RELATION)
		(create-accessor read-write))
	(multislot application_service_qualities_apr
;+		(comment "The service qualities associated with the Application Provider ability to provide the Application Service")
		(type INSTANCE)
;+		(allowed-classes Application_Service_Quality_Value)
		(create-accessor read-write))
	(single-slot implementing_application_service
;+		(comment "The Application Service that is provided by the Application Provider")
		(type INSTANCE)
;+		(allowed-classes Application_Service)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot apr_maximum_number_of_users
;+		(comment "Defines the maximum number of users for the application when provide the service")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot apr_has_standard_specs
;+		(comment "Defines the standard specifications associated with this service when provided by the Application")
		(type INSTANCE)
;+		(allowed-classes Application_Provider_Standard_Specification)
		(create-accessor read-write))
	(single-slot apr_lifecycle_status
;+		(comment "Captures the lifecycle status of the use of the Application Provider in providing the Application Service")
		(type INSTANCE)
;+		(allowed-classes Lifecycle_Status)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot role_for_application_provider
;+		(comment "The Application Provider that provides the Application Service")
		(type INSTANCE)
;+		(allowed-classes Application_Provider)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot purchase_status
;+		(comment "Defines the current status of the element from a purchasing perspective")
		(type INSTANCE)
;+		(allowed-classes Purchase_Status)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Application_Logical)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot target_business_roles
;+		(comment "Captures the Business Roles that are the expected users of the Application Provider's implementation of the Application Service")
		(type INSTANCE)
;+		(allowed-classes Business_Role)
		(create-accessor read-write)))

(defclass Application_Physical "A meta-class that helps to describes the physical implementation of the enterprise's IT applications"
	(is-a Application_Layer)
	(role abstract)
	(multislot app_physical_contained_in_arch_states
;+		(comment "The architecture states that contain this physical application element")
		(type INSTANCE)
;+		(allowed-classes Architecture_State)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Application_Physical)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Application_Deployment "A physical deployment of an Application component in the organisation. e.g. the Production Environment, the Test Environment etc. Deployments define one or more instances of the application (e.g. live, failover) to capture all the physical instances of the Application."
	(is-a Application_Physical)
	(role concrete)
	(single-slot application_deployment_label
;+		(comment "A local name for an instance of an Application_Deployment that does not need to be fully-qualified or unique")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot application_provider_deployed
;+		(comment "Slot to hold the Application Provider that is being deployed in an Application Deployment")
		(type INSTANCE)
;+		(allowed-classes Application_Provider)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot application_deployment_technical_arch
;+		(comment "Specify the logical technical provider architecture that is being used to deploy this Application")
		(type INSTANCE)
;+		(allowed-classes Technology_Provider)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot known_app_issue
;+		(comment "A known issue for this application layer element")
		(type INSTANCE)
;+		(allowed-classes Issue)
		(create-accessor read-write))
	(multislot uses_information_stores
;+		(comment "The Information Stores that are used by an Application Deployment")
		(type INSTANCE)
;+		(allowed-classes Information_Store)
		(create-accessor read-write))
	(multislot deployment_of_software_components
;+		(comment "The usages of Software Components that this Application Deployment contains")
		(type INSTANCE)
;+		(allowed-classes Software_Component_Usage)
		(create-accessor read-write))
	(single-slot belongs_to_deployment_group
;+		(comment "The Application Deployment Group that an Application Deployment is a member of.")
		(type INSTANCE)
;+		(allowed-classes Application_Deployment_Group)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot application_deployment_technology_instance
;+		(comment "Specify the instance(s) of a technology provider that represents this application deployment. i.e. an instance of software or configuration at a node that is this application deployment.")
		(type INSTANCE)
;+		(allowed-classes Application_Software_Instance)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Application_Deployment)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot application_deployment_role
;+		(comment "Defines the role of an application deployment")
		(type INSTANCE)
;+		(allowed-classes Deployment_Role)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot contained_application_deployments
;+		(comment "Sub Application Deployments contained in an Application Deployment")
		(type INSTANCE)
;+		(allowed-classes Application_Deployment)
		(create-accessor read-write)))

(defclass Application_Deployment_Group "A convenience construct for working with multiple (typically large numbers) instances of Application Deployments. E.g. several hundred deployments of the standard desktop application build."
	(is-a Application_Physical)
	(role concrete)
	(single-slot deployment_of_application_provider_group
;+		(comment "The Application Provider that the Group a deployment of.")
		(type INSTANCE)
;+		(allowed-classes Application_Provider)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot number_of_deployed_instances_application
;+		(comment "The number of instances of an Application Deployment in this group")
		(type INTEGER)
		(default 1)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Application_Deployment_Group)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Information_Layer "Base class for Information Architecture constructs. All the meta classes for the Information Layer are sub-classes of this."
	(is-a EA_Class)
	(role abstract)
	(multislot il_managed_by_services
;+		(comment "The managed services that are related to this Information/Data element")
		(type INSTANCE)
;+		(allowed-classes Managed_Service)
		(create-accessor read-write))
	(multislot il_security_classifications
;+		(comment "The security classifications assigned to this information element in the context of the enterprise")
		(type INSTANCE)
;+		(allowed-classes Security_Classification)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Information_Layer)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Information_Conceptual "The Conceptual view of the Information Layer of the meta model. A set of meta-classes that helps to describe the information concepts supporting the business"
	(is-a Information_Layer)
	(role abstract)
	(multislot info_conceptual_contained_in_arch_states
;+		(comment "The architecture states that contain this conceptual information element")
		(type INSTANCE)
;+		(allowed-classes Architecture_State)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Information_Conceptual)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Information_Architecture_Principle "High level rules that govern the manner in which information assets are created and managed by the enterprise"
	(is-a Information_Conceptual)
	(role concrete)
	(multislot principle_inf_implications_synonyms
;+		(comment "Defines synonyms for the information implications of the principle")
		(type INSTANCE)
;+		(allowed-classes Synonym)
		(create-accessor read-write))
	(multislot principle_bus_implications_synonyms
;+		(comment "Allows for language translations of the business implications of a principle")
		(type INSTANCE)
;+		(allowed-classes Synonym)
		(create-accessor read-write))
	(single-slot information_principle_rationale
;+		(comment "")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot principle_ref
;+		(comment "A unique internal reference for the principle")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot inf_principle_bus_implications
;+		(comment "Commentary describing the business implications of the information principle")
		(type STRING)
		(create-accessor read-write))
	(multislot principle_rationale_synonyms
;+		(comment "Provides synonyms for the rationale of the principle")
		(type INSTANCE)
;+		(allowed-classes Synonym)
		(create-accessor read-write))
	(multislot principle_realisation_policies
;+		(comment "The set of policies that are in place to realise a Pricinple in concrete terms")
		(type INSTANCE)
;+		(allowed-classes Policy)
		(create-accessor read-write))
	(multislot inf_principle_app_implications
;+		(comment "Commentary describing the application implications of the information principle")
		(type STRING)
		(create-accessor read-write))
	(multislot principle_app_implications_synonyms
;+		(comment "Captures synonyms for the application implications of the principle")
		(type INSTANCE)
;+		(allowed-classes Synonym)
		(create-accessor read-write))
	(multislot principle_relevant_to_information_concepts
;+		(comment "")
		(type INSTANCE)
;+		(allowed-classes Information_Concept)
		(create-accessor read-write))
	(multislot principle_supports_information_objectives
;+		(comment "")
		(type INSTANCE)
;+		(allowed-classes Information_Architecture_Objective)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Information_Architecture_Principle)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot principle_tech_implications_synonyms
;+		(comment "Captures synonyms for the technology implications of the principle")
		(type INSTANCE)
;+		(allowed-classes Synonym)
		(create-accessor read-write))
	(multislot inf_principle_tech_implications
;+		(comment "Commentary describing the technology implications of the information principle")
		(type STRING)
		(create-accessor read-write))
	(multislot inf_principle_inf_implications
;+		(comment "Commentary describing the information implications of the information principle")
		(type STRING)
		(create-accessor read-write)))

(defclass Information_Concept "High level, conceptual elements that capture the type of Information items that are used in the course of running the business. e.g. Cost, Production Order, Sales Volume."
	(is-a Information_Conceptual)
	(role concrete)
	(multislot supporting_data_subjects
;+		(comment "Describes the set of Data Subjects that are required to deliver the Information Concept")
		(type INSTANCE)
;+		(allowed-classes Data_Subject)
		(create-accessor read-write))
	(single-slot info_concept_info_domain
;+		(comment "The Information Domain to which this Information Concept belongs")
		(type INSTANCE)
;+		(allowed-classes Information_Domain)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot belongs_to_business_domain_information
;+		(comment "The business domain to which an Information Concept belongs")
		(type INSTANCE)
;+		(allowed-classes Business_Domain)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot sequence_number
;+		(comment "An integer that defines the sequence step at which this relationship occurs within the dynamic view of an architecture.")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot related_information_concepts
;+		(comment "Information Concepts to which an Information Concept is related to.")
		(type INSTANCE)
;+		(allowed-classes Information_Concept)
		(create-accessor read-write))
	(multislot known_information_issues
;+		(comment "Known issues with this information element")
		(type INSTANCE)
;+		(allowed-classes Issue)
		(create-accessor read-write))
	(multislot has_information_views
;+		(comment "The informations views that describe this information concept")
		(type INSTANCE)
;+		(allowed-classes Information_View)
		(create-accessor read-write))
	(multislot info_concept_supports_bus_driver
;+		(comment "Defines the business drivers that are supported by this information concept")
		(type INSTANCE)
;+		(allowed-classes Business_Driver)
		(create-accessor read-write))
	(multislot cost_types_for_element
;+		(comment "Defines the specific types of cost associated with this element")
		(type INSTANCE)
;+		(allowed-classes Cost_Component_Type)
		(create-accessor read-write))
	(single-slot information_concept_id
;+		(comment "A unique reference for the Information Concept")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot related_from_information_concepts
;+		(comment "The Information Concepts that have a relationship to this Information Concept")
		(type INSTANCE)
;+		(allowed-classes Information_Concept)
		(create-accessor read-write))
	(multislot relevant_information_objectives
;+		(comment "")
		(type INSTANCE)
;+		(allowed-classes Information_Architecture_Objective)
		(create-accessor read-write))
	(multislot information_principles_relevant_to_concept
;+		(comment "")
		(type INSTANCE)
;+		(allowed-classes Information_Architecture_Principle)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Information_Concept)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Data_Subject "Class to capture data subjects in the Information Layer. Data Subjects define the 'types' of Data used in the enterprise and provide the semantic grounding for Data Objects."
	(is-a Information_Conceptual)
	(role concrete)
	(single-slot sequence_number
;+		(comment "An integer that defines the sequence step at which this relationship occurs within the dynamic view of an architecture.")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot data_category
;+		(comment "Slot to capture the data category that a Data Subject belongs to, e.g. reference, master, transactional data")
		(type INSTANCE)
;+		(allowed-classes Data_Category)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot data_subject_organisation_owner
;+		(comment "DEPRECATED - Slot to capture the organisation that owns the Data Subject in terms of a Group Actor in the business layer\\n\\nUse 'stakeholders' slot with ACTOR_TO_ROLE_RELATION instances")
		(type INSTANCE)
;+		(allowed-classes Group_Actor)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot data_subject_individual_owner
;+		(comment "DEPRECATED - Slot to capture the owner (individual) of a Data Subject in terms of an Individual Actor in the business layer.\\n\\nUse 'stakeholders' slot with ACTOR_TO_ROLE_RELATION instances")
		(type INSTANCE)
;+		(allowed-classes Individual_Actor)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot required_data_quality
;+		(comment "Slot to capture the data quality requirements using Service Qualities")
		(type INSTANCE)
;+		(allowed-classes Information_Service_Quality_Value)
		(create-accessor read-write))
	(multislot realised_by_data_objects
;+		(comment "Slot to manage the set of Data Objects that realise a Data Subject")
		(type INSTANCE)
;+		(allowed-classes Data_Object)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Information_Conceptual)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Information_Driver "Class to define and manage the internal and external influences that motivate the Information Objectives."
	(is-a Information_Conceptual)
	(role concrete)
	(multislot id_has_inf_implications
;+		(comment "The set of Information Drivers for which an information driver has implications.")
		(type INSTANCE)
;+		(allowed-classes Information_Driver)
		(create-accessor read-write))
	(multislot id_motivates_objectives
;+		(comment "The set of objectives that are motivated by the driver")
		(type INSTANCE)
;+		(allowed-classes Information_Architecture_Objective)
		(create-accessor read-write))
	(multislot id_has_app_implications
;+		(comment "The of Application Drivers for which an information driver has implications.")
		(type INSTANCE)
;+		(allowed-classes Application_Driver)
		(create-accessor read-write))
	(multislot id_has_tech_implications
;+		(comment "The set of Technology Drivers for which a technology driver has implications.")
		(type INSTANCE)
;+		(allowed-classes Technology_Driver)
		(create-accessor read-write)))

(defclass Information_Objective_Type ""
	(is-a Information_Conceptual)
	(role abstract)
	(multislot io_motivated_by_driver
;+		(comment "The set of drivers that motivate the objective")
		(type INSTANCE)
;+		(allowed-classes Information_Driver)
		(create-accessor read-write))
	(multislot io_owner
;+		(comment "Captures the individual or organisation that is accountable for meeting the objective")
		(type INSTANCE)
;+		(allowed-classes Actor)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Information_Conceptual)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot relevant_to_information_concepts
;+		(comment "")
		(type INSTANCE)
;+		(allowed-classes Information_Concept)
		(create-accessor read-write)))

(defclass Information_Architecture_Objective "A strategic goal associated with the Information Architecture of the enterprise"
	(is-a Information_Objective_Type)
	(role concrete)
	(single-slot io_target_date
;+		(comment "The target date for achieving the objective.")
		(type INSTANCE)
;+		(allowed-classes Time)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot objective_supported_by_objective
;+		(comment "Slot to manage the set of objectives that support an objective. Applies to Business Objectives, Application Architecture Objectives, Information Architecture Objectives and Technology Architecture Objectives")
		(type INSTANCE)
;+		(allowed-classes Information_Architecture_Objective Technology_Architecture_Objective Application_Architecture_Objective Business_Objective)
		(create-accessor read-write))
	(multislot objective_supports_objective
;+		(comment "Slot to manage the set of objectives that are supported by an objective. Applies to Business Objectives, Application Architecture Objectives, Information Architecture Objectives and Technology Architecture Objectives.")
		(type INSTANCE)
;+		(allowed-classes Application_Architecture_Objective Business_Objective Information_Architecture_Objective Technology_Architecture_Objective)
		(create-accessor read-write))
	(multislot io_measures
;+		(comment "Captures the Information Service Qualities Values that will measure success in meeting the Information Objective")
		(type INSTANCE)
;+		(allowed-classes Information_Service_Quality_Value)
		(create-accessor read-write))
	(single-slot io_target_date_iso_8601
;+		(comment "The target date for achieving the objective in ISO 8601 format (yyyy-mm-dd)")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot objective_supported_by_strategic_plan
;+		(comment "Slot to manage the set of Strategic Plans that support an objective (Business Objective, Application Architecture Objective, Information Architecture Objective and Technology Architecture Objectives)")
		(type INSTANCE)
;+		(allowed-classes Strategic_Plan)
		(create-accessor read-write))
	(multislot supported_by_information_principles
;+		(comment "")
		(type INSTANCE)
;+		(allowed-classes Information_Architecture_Principle)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Information_Architecture_Objective)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Information_Architecture_Goal "Defines a high level aspiration for the information architecture"
	(is-a Information_Objective_Type)
	(role concrete)
	(multislot goal_supported_by_objectives
;+		(comment "The objectives that help to meet the goal")
		(type INSTANCE)
;+		(allowed-classes Business_Objective Information_Architecture_Objective Application_Architecture_Objective Technology_Architecture_Objective)
		(create-accessor read-write))
	(multislot objective_supports_goals
;+		(comment "The strategic goals that are supported by this objective")
		(type INSTANCE)
;+		(allowed-classes Business_Goal Application_Architecture_Goal Information_Architecture_Goal Technology_Architecture_Goal)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Information_Conceptual)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Information_Domain "This is the top level (and least specific) construct in the Information Architecture. It provides a means of categorising Information Concepts independently of the context in which they are used"
	(is-a Information_Conceptual)
	(role concrete)
	(multislot info_domain_contained_info_concepts
;+		(comment "The Information Concepts that are categorised by this Information Domain")
		(type INSTANCE)
;+		(allowed-classes Information_Concept)
		(create-accessor read-write))
	(single-slot information_domain_id
;+		(comment "A unique reference for the Information Domain")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot sequence_number
;+		(comment "An integer that defines the sequence step at which this relationship occurs within the dynamic view of an architecture.")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Information_Domain)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Business_Term "A word or phrase that describes a concept that is used by the business"
	(is-a Information_Conceptual)
	(role concrete)
	(multislot business_term_related_terms
;+		(comment "The Business Terms that are related to this Business Term")
		(type INSTANCE)
;+		(allowed-classes Business_Term)
		(create-accessor read-write))
	(single-slot business_term_examples
;+		(comment "One or more examples of ways in which the Business Term is typically used")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Information_Conceptual)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Information_Logical "The Logical view of the Application Layer of the meta model. A set of meta-classes that helps to describe the logical design of the information and data that support the business."
	(is-a Information_Layer)
	(role abstract)
	(multislot info_logical_contained_in_arch_states
;+		(comment "The architecture states that contain this logical information element")
		(type INSTANCE)
;+		(allowed-classes Architecture_State)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Information_Logical)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Logical_Information_Model "A model that describes relationships to and from logical information elements"
	(is-a Information_Logical)
	(role abstract)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Logical_Information_Model)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Logical_Information_Model_Types "Super class of components that participate in logical architecture models"
	(is-a Logical_Information_Model)
	(role abstract)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Logical_Information_Model_Types)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Information_View_Usage "The usage of an Information View as either an input to an Application Function OR as an output of an Application Function. The view can be used as one or the other."
	(is-a Logical_Information_Model_Types)
	(role concrete)
	(single-slot name_
;+		(comment "A descriptive name of the element in the model.\\n(NOTE: A unique, internal reference is managed separately by the system.)")
		(type STRING)
		(default "<architecture>::<information view>")
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot inverse_of_application_function_output_views
;+		(comment "Reference to the Application Function that returns this Information View Usage when it executes.")
		(type INSTANCE)
;+		(allowed-classes Application_Function)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot inverse_of_application_function_input_views
;+		(comment "Reference to an Application Function that is using this Instance to have Information passed to it.")
		(type INSTANCE)
;+		(allowed-classes Application_Function)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Information_View_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot usage_of_information_view
;+		(comment "The Information View that this is a usage of.")
		(type INSTANCE)
;+		(allowed-classes Information_View)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass Information_Representation_Usage "DEPRECATED in version 1.0.\\nThe usage of an Information Representation in an architecture."
	(is-a Logical_Information_Model_Types)
	(role concrete)
	(single-slot name_
;+		(comment "A descriptive name of the element in the model.\\n(NOTE: A unique, internal reference is managed separately by the system.)")
		(type STRING)
		(default "<architecture>::<information representation>")
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot usage_of_information_representation
;+		(comment "The Information Representation that is being used.")
		(type INSTANCE)
;+		(allowed-classes Information_Representation)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Information_Representation_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Primitive_Data_Object "Class to capture the most basic types of data that act as building blocks for Data Attributes (e.g. integer, string, float, date)"
	(is-a Information_Logical)
	(role concrete))

(defclass Data_Object_Type "Base class of Data Objects and Data Object Attributes."
	(is-a Information_Logical)
	(role abstract))

(defclass Data_Object "Class to capture and manage Data Objects used by systems to provide Information to the applications and processes. Data Objects provide a logical grouping of Data Attributes and realise conceptual Data Subjects."
	(is-a Data_Object_Type)
	(role concrete)
	(multislot data_obj_required_by_apps
;+		(comment "The Applications that requires this Data Object to deliver their functionality")
		(type INSTANCE)
;+		(allowed-classes APP_PRO_TO_DATAOBJ_REQ_RELATION)
		(create-accessor read-write))
	(single-slot data_object_is_abstract
;+		(comment "Defines whether this data object is ever instantiated as physical data")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default FALSE)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot data_category
;+		(comment "Slot to capture the data category that a Data Subject belongs to, e.g. reference, master, transactional data")
		(type INSTANCE)
;+		(allowed-classes Data_Category)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot data_object_organisation_owner
;+		(comment "DEPRECATED - Slot to capture the organisation that owns the Data Object in terms of a Group Actor in the business layer")
		(type INSTANCE)
;+		(allowed-classes Group_Actor)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot data_object_generalisations
;+		(comment "The Data Objects that are a generalisation of this Data Object")
		(type INSTANCE)
;+		(allowed-classes Data_Object)
		(create-accessor read-write))
	(single-slot data_object_individual_owner
;+		(comment "DEPRECATED - Slot to capture the owner (individual) of a Data Object in terms of an Individual Actor in the business layer")
		(type INSTANCE)
;+		(allowed-classes Individual_Actor)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot data_object_specialisations
;+		(comment "The Data Objects that are a specialisations of this Data Object")
		(type INSTANCE)
;+		(allowed-classes Data_Object)
		(create-accessor read-write))
	(multislot data_object_system_of_record
;+		(comment "The single source of truth for the Data Object")
		(type INSTANCE)
;+		(allowed-classes Application_Provider)
		(create-accessor read-write))
	(multislot defined_by_data_subject
;+		(comment "Slot to capture the Data Subject that provides the semantic definition for a Data Subject")
		(type INSTANCE)
;+		(allowed-classes Data_Subject)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(multislot implemented_by_data_reps
;+		(comment "The set of data representations that implement the data object")
		(type INSTANCE)
;+		(allowed-classes Data_Representation)
		(create-accessor read-write))
	(multislot contained_data_attributes
;+		(comment "Slot to manage the set of Data Attributes that are members of a Data Subject")
		(type INSTANCE)
;+		(allowed-classes Data_Object_Attribute)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Information_Logical)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot data_object_stakeholders
;+		(comment "DEPRECATED. USE STAKEHOLDERS SLOT. Captures the list of Actors playing roles (e.g. Data Steward, Data Owner) that are stakeholders of this Data Object")
		(type INSTANCE)
;+		(allowed-classes ACTOR_TO_ROLE_RELATION)
		(create-accessor read-write)))

(defclass Data_Object_Attribute "Describes an individual attribute of data. Data Attributes are used and grouped, logically, by Data Objects."
	(is-a Data_Object_Type)
	(role concrete)
	(single-slot belongs_to_data_object
;+		(comment "The data object that this attribute is part of")
		(type INSTANCE)
;+		(allowed-classes Data_Object)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot data_attribute_label
;+		(comment "A short name for the data object attribute")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot type_for_data_attribute
;+		(comment "Slot to specify the type of a data attribute.")
		(type INSTANCE)
;+		(allowed-classes Data_Object Primitive_Data_Object)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot doa_represented_by_attributes
;+		(comment "The set of Data Representation Attributes that are representations of an Data Object Attribute")
		(type INSTANCE)
;+		(allowed-classes Data_Representation_Attribute)
		(create-accessor read-write))
	(multislot represented_by_attribute
;+		(comment "Slot containing the set of Information Representation Attributes that are representations of an Information View Attribute.")
		(type INSTANCE)
;+		(allowed-classes Information_Representation_Attribute)
		(create-accessor read-write))
	(single-slot defined_by_information_concept
;+		(comment "Captures the Information Concept that defines the semantics of this data attribute.")
		(type INSTANCE)
;+		(allowed-classes Information_Concept)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Information_Logical)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot data_attribute_cardinality
;+		(comment "Slot to capture the cardinality of a data attribute (based on UML-style Cardinality notation).")
		(type INSTANCE)
;+		(allowed-classes Data_Attribute_Cardinality)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Data_Representation_Type "Base class of Data Representations and Data Representation Attributes. These are logical aspects of data that provide implementations of Data Objects and Data Object Attributes and are specific to the applications that manage them."
	(is-a Information_Logical)
	(role abstract)
	(single-slot infodata_rep_lifecycle_status
;+		(comment "The current lifeycycle status of the Information or Data Representation")
		(type INSTANCE)
;+		(allowed-classes InfoData_Representation_Lifecycle_Status)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Information_Logical)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Data_Representation "A specific representation of a Data Object, for example MAT_MAS, which is SAP's representation of a Product Item."
	(is-a Data_Representation_Type)
	(role concrete)
	(multislot implemented_data_object
;+		(comment "The Data Object that this Data Representation implements")
		(type INSTANCE)
;+		(allowed-classes Data_Object)
		(create-accessor read-write))
	(single-slot dr_technical_name
;+		(comment "Used to capture the technical name used for the Data Representation (e.g. table name)")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot contained_data_representation_attributes
;+		(comment "The set of Data Representation Attributes that comprise the Data Representation.")
		(type INSTANCE)
;+		(allowed-classes Data_Representation_Attribute)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Data_Representation)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Data_Representation_Attribute "A particular attribute or item of a Data_Representation"
	(is-a Data_Representation_Type)
	(role concrete)
	(single-slot dra_is_nullable
;+		(comment "Defines whether NULL is an allowed value for the Data Representation Attribute")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot dra_index
;+		(comment "Defines the sequencing position of the Data Representation Attribute within its parent Data Representation")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot dra_value_max_length
;+		(comment "Defines the maximum length allowed for values of the Data Representation Attribute")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot dra_value_type
;+		(comment "Defines the primitive type of the Data Representation Attribute")
		(type INSTANCE)
;+		(allowed-classes InfoData_Representation_Attribute_Type)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot dra_technical_name
;+		(comment "Used to capture the technical name used for the Data Representation Attribute (e.g. table column name)")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot implemented_data_object_attribute
;+		(comment "The Data Object Attribute that this Data Representation Attribute implements")
		(type INSTANCE)
;+		(allowed-classes Data_Object_Attribute)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Data_Representation_Attribute)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Information_View_Type "Base class for Information Views"
	(is-a Information_Logical)
	(role abstract)
	(single-slot information_view_id
;+		(comment "A unique reference for the Information View/Attribute")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Information_Logical)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Information_View "A refined view of an Information Concept that can also include the relevant attributes of the view, if required (e.g. to show how one View of a Concept differs from another). An Information View describes in more detail a certain view of a Concept, e.g. Cost per Product for Site."
	(is-a Information_View_Type)
	(role concrete)
	(multislot information_view_stakeholders
;+		(comment "DEPRECTAED: USE \\\\\"stakeholders\\\\\" SLOT\\n\\nCaptures the list of Actors playing roles (e.g. Information Steward, Information Owner) that are stakeholders of this Information View")
		(type INSTANCE)
;+		(allowed-classes ACTOR_TO_ROLE_RELATION)
		(create-accessor read-write))
	(multislot refinement_of_information_concept
;+		(comment "The Information Concept that a View is a refinement of")
		(type INSTANCE)
;+		(allowed-classes Information_Concept)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(multislot contained_information_views
;+		(comment "The sub Information Views from which an Information View can be composed")
		(type INSTANCE)
;+		(allowed-classes Information_View)
		(create-accessor read-write))
	(single-slot sequence_number
;+		(comment "An integer that defines the sequence step at which this relationship occurs within the dynamic view of an architecture.")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot has_information_representations
;+		(comment "The information representations that instantiate this information view")
		(type INSTANCE)
;+		(allowed-classes Information_Representation)
		(create-accessor read-write))
	(single-slot view_label
;+		(comment "The name to be displayed for the Information View")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot info_view_supporting_data_objects
;+		(comment "The Data Objects that comprise this Information View")
		(type INSTANCE)
;+		(allowed-classes Data_Object)
		(create-accessor read-write))
	(multislot information_deleted_by_bus_process_types
;+		(comment "DEPRECATED.\\nThe business process types that delete information aligned to this information view")
		(type INSTANCE)
;+		(allowed-classes Business_Process_Type)
		(create-accessor read-write))
	(multislot contained_view_attributes
;+		(comment "The set of Information View Attributes from which this View is composed.")
		(type INSTANCE)
;+		(allowed-classes Information_View_Attribute)
		(create-accessor read-write))
	(multislot known_information_issues
;+		(comment "Known issues with this information element")
		(type INSTANCE)
;+		(allowed-classes Issue)
		(create-accessor read-write))
	(multislot information_created_by_bus_process_types
;+		(comment "DEPRECATED.\\nThe business process types that create information aligned to this information view")
		(type INSTANCE)
;+		(allowed-classes Business_Process_Type)
		(create-accessor read-write))
	(multislot information_read_by_bus_process_types
;+		(comment "DEPRECATED.\\nThe business process types that read information aligned to this information view")
		(type INSTANCE)
;+		(allowed-classes Business_Process_Type)
		(create-accessor read-write))
	(multislot information_view_operated_on_by_app_services
;+		(comment "The Application Services that process this Information View")
		(type INSTANCE)
;+		(allowed-classes APP_SVC_TO_INFOVIEW_RELATION)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Information_View)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot information_updated_by_bus_process_types
;+		(comment "DEPRECATED.\\nThe business process types that update information aligned to this information view")
		(type INSTANCE)
;+		(allowed-classes Business_Process_Type)
		(create-accessor read-write)))

(defclass Information_View_Attribute "A particular attribute or item of information that is used or shared in the definition of Information Views"
	(is-a Information_View_Type)
	(role concrete)
	(single-slot data_derivation_definition
;+		(comment "Slot to capture the calculation or rules that define how the Data Attributes are used or combined to derive an Information View Attribute")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot represented_by_attribute
;+		(comment "Slot containing the set of Information Representation Attributes that are representations of an Information View Attribute.")
		(type INSTANCE)
;+		(allowed-classes Information_Representation_Attribute)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Information_View_Attribute)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot derived_from_data_attributes
;+		(comment "Slot to capture the set of Data Attributes that an Information View is derived from.")
		(type INSTANCE)
;+		(allowed-classes Data_Object_Attribute)
		(create-accessor read-write)))

(defclass Information_Representation_Type "Base class for Information Representations"
	(is-a Information_Logical)
	(role abstract)
	(single-slot infodata_rep_lifecycle_status
;+		(comment "The current lifeycycle status of the Information or Data Representation")
		(type INSTANCE)
;+		(allowed-classes InfoData_Representation_Lifecycle_Status)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot representation_label
;+		(comment "The label to be displayed for the information representation")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Information_Logical)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Information_Representation "A specific representation of an Information View using a specific technology. Example technologies would include XML schema, a relational database schema and can also include things like paper forms. The relationship to the Technology layer is to a Technology Product Role, which defines how a Technology Product is being used, e.g. Oracle RDBMS, ebXML schema."
	(is-a Information_Representation_Type)
	(role concrete)
	(multislot inforep_used_by_app_pro
;+		(comment "The Application Providers that use this Information Representation")
		(type INSTANCE)
;+		(allowed-classes APP_PRO_TO_INFOREP_RELATION)
		(create-accessor read-write))
	(multislot supporting_data_representations
;+		(comment "The Data Representations that comprise this Information Representation")
		(type INSTANCE)
;+		(allowed-classes Data_Representation)
		(create-accessor read-write))
	(multislot data_read_by_app_func_impls
;+		(comment "DEPRECATED.")
		(type INSTANCE)
;+		(allowed-classes Application_Function_Implementation)
		(create-accessor read-write))
	(multislot inforep_derived_from
;+		(comment "The source Data Representations or Information Representations from which an Information Representation is derived or gets source content. e.g. the cubes from which a report gathers source content.")
		(type INSTANCE)
;+		(allowed-classes Data_Representation Information_Representation)
		(create-accessor read-write))
	(multislot contained_information_representations
;+		(comment "Sub Information Representations from which an Information Representation can be composed.")
		(type INSTANCE)
;+		(allowed-classes Information_Representation)
		(create-accessor read-write))
	(single-slot representation_it_contact
;+		(comment "The IT Contact for an Information Representation")
		(type INSTANCE)
;+		(allowed-classes Actor)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot representation_namespace
;+		(comment "Defines a fully qualified namespace for the information representation")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot known_information_issues
;+		(comment "Known issues with this information element")
		(type INSTANCE)
;+		(allowed-classes Issue)
		(create-accessor read-write))
	(multislot contained_information_representation_attributes
;+		(comment "The set of Information Representation Attributes from which an Information Representation can be composed.")
		(type INSTANCE)
;+		(allowed-classes Information_Representation_Attribute)
		(create-accessor read-write))
	(single-slot purchase_status
;+		(comment "Defines the current status of the element from a purchasing perspective")
		(type INSTANCE)
;+		(allowed-classes Purchase_Status)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot implements_information_views
;+		(comment "The Information View that this Representation implements.")
		(type INSTANCE)
;+		(allowed-classes Information_View)
		(create-accessor read-write))
	(single-slot inforep_category
;+		(comment "Defins the type of the information reprsentation, e.g. database, business report, data feed, message, business document")
		(type INSTANCE)
;+		(allowed-classes Information_Representation_Category)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot representation_technology
;+		(comment "Technology Product  that is used to represent the Information in the View. This captures the Technology Product that is providing the Technology Function, i.e. the role the Technology Product is playing in this usage by the representation")
		(type INSTANCE)
;+		(allowed-classes Technology_Product_Role)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot implemented_with_information_stores
;+		(comment "The physical information stores that implement this information representation")
		(type INSTANCE)
;+		(allowed-classes Information_Store)
		(create-accessor read-write))
	(multislot data_updated_by_app_func_impls
;+		(comment "DEPRECATED.")
		(type INSTANCE)
;+		(allowed-classes Application_Function_Implementation)
		(create-accessor read-write))
	(multislot data_deleted_by_app_func_impls
;+		(comment "DEPRECATED.")
		(type INSTANCE)
;+		(allowed-classes Application_Function_Implementation)
		(create-accessor read-write))
	(multislot data_created_by_app_func_impls
;+		(comment "DEPRECATED.")
		(type INSTANCE)
;+		(allowed-classes Application_Function_Implementation)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Information_Representation)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Information_Representation_Attribute "A particular attribute or item of information that is used or shared in the definition of Information Representation"
	(is-a Information_Representation_Type)
	(role concrete)
	(single-slot infrep_att_value_type
;+		(comment "Defines the primitive type of the Information Representation Attribute")
		(type INSTANCE)
;+		(allowed-classes InfoData_Representation_Attribute_Type)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot infrep_att_derivation_formula
;+		(comment "Captures the formula used to derive the attribute")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot infrep_att_index
;+		(comment "Defines the sequencing position of the Information Representation Attribute within its parent Information Representation")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot infrep_att_value_max_length
;+		(comment "Defines the maximum length allowed for values of the Information Representation Attribute")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot is_a_representation_of_attribute
;+		(comment "Slot to relate an Information Representation Attribute to the Information View Attribute or Data Object Attribute that it is representing.")
		(type INSTANCE)
;+		(allowed-classes Information_View_Attribute Data_Object_Attribute)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot infrep_att_derived_from_datarep_atts
;+		(comment "Lists the data representation attributes from which the information view attribute is derived")
		(type INSTANCE)
;+		(allowed-classes Data_Representation_Attribute Information_Representation_Attribute)
		(create-accessor read-write))
	(single-slot infrep_att_is_nullable
;+		(comment "Defines whether null is an allowed value for the Information Representation Attribute")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Information_Representation_Attribute)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Information_Physical "The Physical view of the Application Layer of the meta model. A set of meta-classes that helps to describes the physical deployment of the enterprise's information assets"
	(is-a Information_Layer)
	(role abstract)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Information_Physical)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot physical_info_contained_in_arch_states
;+		(comment "The architecture states that contain this physical information element")
		(type INSTANCE)
;+		(allowed-classes Architecture_State)
		(create-accessor read-write)))

(defclass Information_Store "A physical deployment of an Information Representation where that information is being stored. The Information Store is defined by the deployment role that it takes, e.g. Production, Development, Test. Instances of the Information Store are managed as Information Store Instances (see Technology Physical->Technology Instance for more details about Information Store Instances)"
	(is-a Information_Physical)
	(role concrete)
	(single-slot info_store_it_contact
;+		(comment "The IT contact for an Information Store")
		(type INSTANCE)
;+		(allowed-classes Actor)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot deployed_information_store_instances
;+		(comment "The physical instances that have been deployed for this Information Store")
		(type INSTANCE)
;+		(allowed-classes Information_Store_Instance)
		(create-accessor read-write))
	(single-slot belongs_to_information_store_group
;+		(comment "The Information Store Group that this Information Store belongs to.")
		(type INSTANCE)
;+		(allowed-classes Information_Store_Group)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot information_store_geo_scope
;+		(comment "Defines the geographic scope of information within the Information Store")
		(type INSTANCE)
;+		(allowed-classes Geographic_Region)
		(create-accessor read-write))
	(multislot information_store_product_type_scope
;+		(comment "Defines the product type scope of information within the Information Store")
		(type INSTANCE)
;+		(allowed-classes Product_Type)
		(create-accessor read-write))
	(multislot information_store_org_scope
;+		(comment "Describes the organisational scope of the information store in terms of one or more Group Actors")
		(type INSTANCE)
;+		(allowed-classes Group_Actor)
		(create-accessor read-write))
	(single-slot deployment_of_information_representation
;+		(comment "The App Provider to Information Representation relation  that the Information Store is a deployment of.")
		(type INSTANCE)
;+		(allowed-classes Information_Representation)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot known_information_issues
;+		(comment "Known issues with this information element")
		(type INSTANCE)
;+		(allowed-classes Issue)
		(create-accessor read-write))
	(multislot contained_physical_data_entities
;+		(comment "Slot to manage the set of Physical Data Objects that are contained in an Information Store")
		(type INSTANCE)
;+		(allowed-classes Physical_Data_Object)
		(create-accessor read-write))
	(multislot information_store_qualities
;+		(comment "Describes the Information Service Qualities (e.g. completeness, precision, granularity) associated with this Information Store")
		(type INSTANCE)
;+		(allowed-classes Information_Service_Quality_Value)
		(create-accessor read-write))
	(single-slot information_store_deployment_role
;+		(comment "The deployment role of the information store")
		(type INSTANCE)
;+		(allowed-classes Deployment_Role)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Information_Store)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Information_Store_Group "A convenience class for representing a group of multiple deployments of an Information Store, e.g. deployments to a production desktop environment on 100 desktop machines"
	(is-a Information_Physical)
	(role concrete)
	(multislot deployed_information_store_instances
;+		(comment "The physical instances that have been deployed for this Information Store")
		(type INSTANCE)
;+		(allowed-classes Information_Store_Instance)
		(create-accessor read-write))
	(single-slot deployment_of_information_representation_group
;+		(comment "The Information Representation that the Information Group is a deployement of.")
		(type INSTANCE)
;+		(allowed-classes Information_Representation)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot total_instances_information_store
;+		(comment "The total number of instances of an Information Store that the Information Group represents.")
		(type INTEGER)
		(default 1)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Information_Store_Group)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Physical_Information_Model "A model that describes relationships to and from physical information elements"
	(is-a Information_Physical)
	(role abstract)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Physical_Information_Model)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Physical_Information_Model_Types "Super class of components that participate in phsyical architecture models"
	(is-a Physical_Information_Model)
	(role abstract)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Physical_Information_Model_Types)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Physical_Data_Object "Represents the physical data stored in an Information Store"
	(is-a Information_Physical)
	(role concrete)
	(multislot physical_data_qualities
;+		(comment "Describes the Information Service Qualities (e.g. completeness, precision, granularity) associated physical data")
		(type INSTANCE)
;+		(allowed-classes Information_Service_Quality_Value)
		(create-accessor read-write))
	(single-slot contained_in_information_store
;+		(comment "The information store within which this Physical Data Object is stored")
		(type INSTANCE)
;+		(allowed-classes Information_Store)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot physical_data_product_type_scope
;+		(comment "Describes the logical product scope of the physical  data in terms of one or more Product Types")
		(type INSTANCE)
;+		(allowed-classes Product_Type)
		(create-accessor read-write))
	(multislot physical_data_product_scope
;+		(comment "Describes the logical product scope of the physical  data in terms of one or more Products")
		(type INSTANCE)
;+		(allowed-classes Product)
		(create-accessor read-write))
	(single-slot implements_data_representation
;+		(comment "The logical Data Representation that this Physical Data Object implements")
		(type INSTANCE)
;+		(allowed-classes Data_Representation)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot physical_data_volume
;+		(comment "The volume of data stored against this physical data element")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Information_Physical)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot essential_baseline_v6_gdpr2_6_IRCadded_Class1
;+		(comment "")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot physical_data_geo_region_scope
;+		(comment "Describes the geographic scope of the physical  data in terms of one or more Geographic Regions")
		(type INSTANCE)
;+		(allowed-classes Geographic_Region)
		(create-accessor read-write))
	(multislot physical_data_org_scope
;+		(comment "Describes the organisational scope of the physical  data in terms of one or more Group Actors")
		(type INSTANCE)
;+		(allowed-classes Group_Actor)
		(create-accessor read-write)))

(defclass Technology_Layer "Base class for Technology Architecture constructs. All the meta classes for the Technology Layer are sub-classes of this."
	(is-a EA_Class)
	(role abstract)
	(multislot tl_managed_by_services
;+		(comment "The managed services that are related to this Technology element")
		(type INSTANCE)
;+		(allowed-classes Managed_Service)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Technology_Layer)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot tl_security_classifications
;+		(comment "The security classifications assigned to this technology element in the context of the enterprise")
		(type INSTANCE)
;+		(allowed-classes Security_Classification)
		(create-accessor read-write)))

(defclass Technology_Conceptual "The Conceptual view of the Technology Layer of the meta model. A set of meta-classes that helps to describe the capabilities or requirements for the technology infrastructure of the enterprise"
	(is-a Technology_Layer)
	(role abstract)
	(multislot tech_conceptual_contained_in_arch_states
;+		(comment "The architecture states that contain this conceptual technology element")
		(type INSTANCE)
;+		(allowed-classes Architecture_State)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Technology_Conceptual)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Technology_Architecture_Principle "High level rules that govern  the manner in which technology capabilities are implemented in the enterprise"
	(is-a Technology_Conceptual)
	(role concrete)
	(multislot principle_inf_implications_synonyms
;+		(comment "Defines synonyms for the information implications of the principle")
		(type INSTANCE)
;+		(allowed-classes Synonym)
		(create-accessor read-write))
	(multislot principle_bus_implications_synonyms
;+		(comment "Allows for language translations of the business implications of a principle")
		(type INSTANCE)
;+		(allowed-classes Synonym)
		(create-accessor read-write))
	(single-slot principle_ref
;+		(comment "A unique internal reference for the principle")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot tech_principle_app_implications
;+		(comment "Commentary describing the application implications of the technology principle")
		(type STRING)
		(create-accessor read-write))
	(multislot principle_rationale_synonyms
;+		(comment "Provides synonyms for the rationale of the principle")
		(type INSTANCE)
;+		(allowed-classes Synonym)
		(create-accessor read-write))
	(multislot principle_realisation_policies
;+		(comment "The set of policies that are in place to realise a Pricinple in concrete terms")
		(type INSTANCE)
;+		(allowed-classes Policy)
		(create-accessor read-write))
	(multislot principle_relevant_to_technology_capabilities
;+		(comment "")
		(type INSTANCE)
;+		(allowed-classes Technology_Capability)
		(create-accessor read-write))
	(multislot principle_app_implications_synonyms
;+		(comment "Captures synonyms for the application implications of the principle")
		(type INSTANCE)
;+		(allowed-classes Synonym)
		(create-accessor read-write))
	(multislot tech_principle_bus_implications
;+		(comment "Commentary describing the business implications of the technology principle")
		(type STRING)
		(create-accessor read-write))
	(multislot supports_technology_objectives
;+		(comment "")
		(type INSTANCE)
;+		(allowed-classes Technology_Architecture_Objective)
		(create-accessor read-write))
	(multislot tech_principle_inf_implications
;+		(comment "Commentary describing the information implications of the technology principle")
		(type STRING)
		(create-accessor read-write))
	(multislot tech_principle_tech_implications
;+		(comment "Commentary describing the technology implications of the technology principle")
		(type STRING)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Technology_Architecture_Principle)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot principle_tech_implications_synonyms
;+		(comment "Captures synonyms for the technology implications of the principle")
		(type INSTANCE)
;+		(allowed-classes Synonym)
		(create-accessor read-write))
	(single-slot technology_principle_rationale
;+		(comment "Describes the rationale for a Technology Architecture Principle")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Technology_Domain "Provides a means of categorising technology capabilities and defining technology areas."
	(is-a Technology_Conceptual)
	(role concrete)
	(single-slot sequence_number
;+		(comment "An integer that defines the sequence step at which this relationship occurs within the dynamic view of an architecture.")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot contains_technology_capabilities
;+		(comment "The technology capabilities that belong to this Technology Domain")
		(type INSTANCE)
;+		(allowed-classes Technology_Capability)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Technology_Domain)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Technology_Capability "Technology Capabilities are conceptual constructs that describe WHAT a piece of technology does or needs to do.\\nThe contained technologies slot is used as part of a DEFINITION of a Capability to describe Capabilities that are considered to be part of (contained in - as opposed to used to deliver) a larger Capability. To DESIGN how a new Capability could delivered by using existing Capabilities, a Technology Capability Architecture is used to describe the new Capability."
	(is-a Technology_Conceptual)
	(role concrete)
	(multislot realised_by_technology_components
;+		(comment "The Technology Components that realise a Technology Capability")
		(type INSTANCE)
;+		(allowed-classes Technology_Component)
		(create-accessor read-write))
	(single-slot technology_capability_architecture
;+		(comment "The definiting architecture of a Technology Capability, in terms of the Technology Capabilities that are used to deliver it.")
		(type INSTANCE)
;+		(allowed-classes Technology_Capability_Architecture)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot contained_technology_capabilities
;+		(comment "The set of Technology Capabilities that are contained in a Capability.")
		(type INSTANCE)
;+		(allowed-classes Technology_Capability)
		(create-accessor read-write))
	(single-slot belongs_to_technology_domain
;+		(comment "The Technology Domain that is used to categorise this Technology Capability")
		(type INSTANCE)
;+		(allowed-classes Technology_Domain)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot capability_relevant_to_technology_objectives
		(type INSTANCE)
;+		(allowed-classes Technology_Architecture_Objective)
		(create-accessor read-write))
	(multislot tech_cap_supports_appfunimpl
;+		(comment "Specifies the Application Function Implementations that require this Technology Capability")
		(type INSTANCE)
;+		(allowed-classes APP_FUNCIMPL_TO_TECH_CAP_RELATION)
		(create-accessor read-write))
	(single-slot sequence_number
;+		(comment "An integer that defines the sequence step at which this relationship occurs within the dynamic view of an architecture.")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot relevant_technology_principles
		(type INSTANCE)
;+		(allowed-classes Technology_Architecture_Principle)
		(create-accessor read-write))
	(multislot technology_capability_function_types_offered
		(type INSTANCE)
;+		(allowed-classes Technology_Function_Type)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Technology_Capability)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Conceptual_Technology_Model "A model that describes relationships to and from technology capabilities"
	(is-a Technology_Conceptual)
	(role abstract)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Conceptual_Technology_Model)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Technology_Capability_Architecture "The Technology Capability Architecture is used to DESIGN how a new Capability could delivered by using existing Capabilities. E.g., to define conceptual technology models."
	(is-a Conceptual_Technology_Model)
	(role concrete)
	(multislot contained_technology_capability_usages
		(type INSTANCE)
;+		(allowed-classes Technology_Capability_Usage)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Technology_Capability_Architecture)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Conceptual_Technology_Architecture_Type "Super class of components that participate in Conceptual Technology Architecture models"
	(is-a Conceptual_Technology_Model)
	(role abstract)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Conceptual_Technology_Architecture_Type)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Technology_Capability_Usage "The use of a Technology Capability in the context of a Technology Capability Architecture or Conceptual Technology Model."
	(is-a Conceptual_Technology_Architecture_Type)
	(role concrete)
	(single-slot name_
;+		(comment "A descriptive name of the element in the model.\\n(NOTE: A unique, internal reference is managed separately by the system.)")
		(type STRING)
		(default "<architecture>::<capability>")
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot usage_of_technology_capabilities
;+		(comment "")
		(type INSTANCE)
;+		(allowed-classes Technology_Capability)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot technology_capability_architecture_using_capability
;+		(comment "The Technology Capability Architecture that a Technology Capability Usage appears in.")
		(type INSTANCE)
;+		(allowed-classes Technology_Capability_Architecture)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Technology_Capability_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Technology_Function_Type "Technology Function Types define, at a finer level of granularity, what technical functions a capability offers. The Function Types provide a grounding for the Functions defined in Technology Components."
	(is-a Technology_Conceptual)
	(role concrete)
	(single-slot name_
;+		(comment "A descriptive name of the element in the model.\\n(NOTE: A unique, internal reference is managed separately by the system.)")
		(type STRING)
		(default "<technology_capability>::<function_type>")
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Technology_Function_Type)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Technology_Driver "Class to define and manage the internal and external influences that motivate the Technology Objectives."
	(is-a Technology_Conceptual)
	(role concrete)
	(multislot td_motivates_objectives
;+		(comment "The set of objectives that are motivated by the driver")
		(type INSTANCE)
;+		(allowed-classes Technology_Architecture_Objective)
		(create-accessor read-write))
	(multislot td_has_tech_implications
;+		(comment "The set of Technology Drivers for which a information driver has implications.")
		(type INSTANCE)
;+		(allowed-classes Technology_Driver)
		(create-accessor read-write)))

(defclass Technology_Objective_Type ""
	(is-a Technology_Conceptual)
	(role abstract)
	(single-slot technology_objective_rationale
;+		(comment "")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot objective_supported_by_technology_principles
;+		(comment "")
		(type INSTANCE)
;+		(allowed-classes Technology_Architecture_Principle)
		(create-accessor read-write))
	(multislot tao_owner
;+		(comment "Captures the individual or organisation that is accountable for meeting the objective")
		(type INSTANCE)
;+		(allowed-classes Actor)
		(create-accessor read-write))
	(multislot tao_motivated_by_driver
;+		(comment "The set of drivers that motivate the objective")
		(type INSTANCE)
;+		(allowed-classes Technology_Driver)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Technology_Conceptual)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Technology_Architecture_Objective "A strategic goal associated with the Technology Architecture of the enterprise"
	(is-a Technology_Objective_Type)
	(role concrete)
	(multislot objective_supported_by_objective
;+		(comment "Slot to manage the set of objectives that support an objective. Applies to Business Objectives, Application Architecture Objectives, Information Architecture Objectives and Technology Architecture Objectives")
		(type INSTANCE)
;+		(allowed-classes Information_Architecture_Objective Technology_Architecture_Objective Application_Architecture_Objective Business_Objective)
		(create-accessor read-write))
	(single-slot tao_target_date
;+		(comment "The target date for achieving the objective")
		(type INSTANCE)
;+		(allowed-classes Time)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot objective_relevant_to_technology_capabilities
;+		(comment "")
		(type INSTANCE)
;+		(allowed-classes Technology_Capability)
		(create-accessor read-write))
	(multislot tao_measures
;+		(comment "Captures the Technology Service Qualities Values that will measure success in meeting the Technology Objective")
		(type INSTANCE)
;+		(allowed-classes Technology_Service_Quality_Value)
		(create-accessor read-write))
	(multislot objective_supports_objective
;+		(comment "Slot to manage the set of objectives that are supported by an objective. Applies to Business Objectives, Application Architecture Objectives, Information Architecture Objectives and Technology Architecture Objectives.")
		(type INSTANCE)
;+		(allowed-classes Application_Architecture_Objective Business_Objective Information_Architecture_Objective Technology_Architecture_Objective)
		(create-accessor read-write))
	(multislot objective_supported_by_strategic_plan
;+		(comment "Slot to manage the set of Strategic Plans that support an objective (Business Objective, Application Architecture Objective, Information Architecture Objective and Technology Architecture Objectives)")
		(type INSTANCE)
;+		(allowed-classes Strategic_Plan)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Technology_Architecture_Objective)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot tao_target_date_iso_8601
;+		(comment "The target date for achieving the objective in ISO 8601 format (yyyy-mm-dd)")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Technology_Architecture_Goal "Defines a high level aspiration for the technology architecture"
	(is-a Technology_Objective_Type)
	(role concrete)
	(multislot goal_supported_by_objectives
;+		(comment "The objectives that help to meet the goal")
		(type INSTANCE)
;+		(allowed-classes Business_Objective Information_Architecture_Objective Application_Architecture_Objective Technology_Architecture_Objective)
		(create-accessor read-write))
	(multislot objective_supports_goals
;+		(comment "The strategic goals that are supported by this objective")
		(type INSTANCE)
;+		(allowed-classes Business_Goal Application_Architecture_Goal Information_Architecture_Goal Technology_Architecture_Goal)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Technology_Conceptual)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Technology_Logical "The Logical view of the Technology Layer of the meta model. A set of meta-classes that helps to describes the logical design of the enterprise's technology infrastructure"
	(is-a Technology_Layer)
	(role abstract)
	(multislot tech_logical_contained_in_arch_states
;+		(comment "The architecture states that contain this logical technology element")
		(type INSTANCE)
;+		(allowed-classes Architecture_State)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Technology_Logical)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Technology_Component "Class to capture logical types - or classes - of Technology that are used to provide Technology Capabilities. e.g. Application Server, Message Oriented Middleware, Operating System. These should be real types of technology that are available today (or are state of the art) but not actual products."
	(is-a Technology_Logical)
	(role concrete)
	(multislot technology_component_functions_offered
;+		(comment "")
		(type INSTANCE)
;+		(allowed-classes Technology_Function)
		(create-accessor read-write))
	(single-slot technology_component_lifecycle_status
;+		(comment "Defines the lifecycle status of the logical technology component (e.g. strategic, off strategy, reference architecture)")
		(type INSTANCE)
;+		(allowed-classes Lifecycle_Status)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot realisation_of_technology_capability
;+		(comment "")
		(type INSTANCE)
;+		(allowed-classes Technology_Capability)
		(create-accessor read-write))
	(multislot realised_by_technology_products
;+		(comment "The Technology Products that realise this Technology Components")
		(type INSTANCE)
;+		(allowed-classes Technology_Provider_Role)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Technology_Component)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Technology_Composite "Technology Composites are Technology Components that are made up of other Technology Components and have a defining architecture which describes the Technology Components that are used to make the composite."
	(is-a Technology_Component)
	(role concrete)
	(single-slot technology_component_architecture
;+		(comment "")
		(type INSTANCE)
;+		(allowed-classes Technology_Component_Architecture)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot realised_by_technology_products
;+		(comment "The Technology Product Builds that realise this Technology Components")
		(type INSTANCE)
;+		(allowed-classes Technology_Product_Build_Role)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Technology_Composite)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Technology_Function "Technology Function define, at a finer level of granularity, what technical functions a component offers. e.g. a relational database might offer create(), update(), read(), delete()"
	(is-a Technology_Logical)
	(role concrete)
	(single-slot name_
;+		(comment "Name of the Technology Function")
		(type STRING)
		(default "<Technology_Component>::<Technology_Function>")
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Technology_Function)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot realisation_of_function_type
		(type INSTANCE)
;+		(allowed-classes Technology_Function_Type)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Technology_Provider "Base class of actual technology products and builds of products that are used to deliver technology infrastructure for IT systems. Technology Providers are used to provide Technology Components (which are higher level logical constructs) in the architecture."
	(is-a Technology_Logical)
	(role abstract)
	(single-slot technology_provider_version
;+		(comment "The version number/identifier for the technology provider")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot technology_product_functions_offered
		(type INSTANCE)
;+		(allowed-classes Technology_Function)
		(create-accessor read-write))
	(single-slot maintenance_cost
;+		(comment "DEPRECATED - Use costs_for_element\\n\\nannual cost of maintenance")
		(type FLOAT)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot member_of_technology_product_families
;+		(comment "Specifies the Technology Product Families to which the Technology Provider belongs.")
		(type INSTANCE)
;+		(allowed-classes Technology_Product_Family)
		(create-accessor read-write))
	(single-slot technology_provider_delivery_model
;+		(comment "Defines how the services provided by a technology product are delivered to the enterprise")
		(type INSTANCE)
;+		(allowed-classes Technology_Delivery_Model)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot implements_technology_components
;+		(comment "The list of Technology Components that this Technology Product can realise")
		(type INSTANCE)
;+		(allowed-classes Technology_Provider_Role)
		(create-accessor read-write))
	(single-slot technology_provider_lifecycle_status
;+		(comment "The internal usage/adoption status of the Technology Provider. For Technology Products this should be used to reflect the enterprise's view on the product lifecycle, e.g. Pilot, Production, Sunset etc.")
		(type INSTANCE)
;+		(allowed-classes Lifecycle_Status)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Technology_Provider)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot technology_provider_instances
;+		(comment "The physical instances of this technology that have been deployed")
		(type INSTANCE)
;+		(allowed-classes Technology_Instance)
		(create-accessor read-write)))

(defclass Technology_Product "A commercially available Technology product that an organisation can buy in order to provide Technology Components."
	(is-a Technology_Provider)
	(role concrete)
	(single-slot supplier_technology_product
;+		(comment "The supplier of a Technology Product")
		(type INSTANCE)
;+		(allowed-classes Supplier)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot vendor_product_lifecycle_status
;+		(comment "Captures the current lifecycle status of a technology product, as defined by the vendor of that product. Use where a full lifecycle model is not required, e.g. where no time-based information exists. Use lifecycle model where a timeline is required")
		(type INSTANCE)
;+		(allowed-classes Vendor_Lifecycle_Status)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot technology_product_family
;+		(comment "DEPRECATED. USE MEMBER_OF_TECHNOLOGY_PRODUCT_FAMILIES. Specifies the Product Family(ies) that a Technology Product belongs to. E.g. Windows Server 2003 could belong to the Windows Product Family")
		(type INSTANCE)
;+		(allowed-classes Product_Family)
		(create-accessor read-write))
	(single-slot purchase_status
;+		(comment "Defines the current status of the element from a purchasing perspective")
		(type INSTANCE)
;+		(allowed-classes Purchase_Status)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot implements_technology_components
;+		(comment "The list of Technology Components that this Technology Product can realise")
		(type INSTANCE)
;+		(allowed-classes Technology_Product_Role)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Technology_Product)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot technology_product_architecture
;+		(comment "The Technology Product Architecture for this Technology Product to describe the dependencies that the Product has on other Technology Product")
		(type INSTANCE)
;+		(allowed-classes Technology_Product_Architecture)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot product_label
;+		(comment "The label to display for the product")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Technology_Product_Build "A Technology Provider that is specific to a particular organisation. This may have been built in-house or be a specific architecture of Technology Providers, assembled to provide the specified Technology Component."
	(is-a Technology_Provider)
	(role concrete)
	(multislot tpb_derived_from_tech_prod_build
;+		(comment "Defines other Technology Product Builds (e.g. standard/reference builds) from which this Technology Product Build is derived")
		(type INSTANCE)
;+		(allowed-classes Technology_Product_Build)
		(create-accessor read-write))
	(single-slot technology_provider_architecture
		(type INSTANCE)
;+		(allowed-classes Technology_Build_Architecture)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot implements_technology_components
;+		(comment "The list of Technology Composites that this Technology Product Build can realise")
		(type INSTANCE)
;+		(allowed-classes Technology_Product_Build_Role)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Technology_Product_Build)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Technology_Provider_Role "Represents the definition of a Technology Provider's ability to fulfill a given role as a Technology Provider"
	(is-a Technology_Logical)
	(role abstract)
	(single-slot strategic_lifecycle_status
;+		(comment "The internal usage/adoption status of the associated Technology Product when realising the associated Technology Components.")
		(type INSTANCE)
;+		(allowed-classes Lifecycle_Status)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot implementing_technology_component
;+		(comment "A Technology Component that the Technology Provider asssociated with this role is implementing")
		(type INSTANCE)
;+		(allowed-classes Technology_Component)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Technology_Provider_Role)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot role_for_technology_provider
;+		(comment "The Technology Provider for which this role is defined")
		(type INSTANCE)
;+		(allowed-classes Technology_Provider)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot tpr_has_standard_specs
;+		(comment "The standard specifications that have been defined for the use of the Technology Provider in this role")
		(type INSTANCE)
;+		(allowed-classes Technology_Provider_Standard_Specification)
		(create-accessor read-write))
	(multislot tpr_service_qualities
;+		(comment "Defines the service qualities (business, application, information or technology) that the Technology Provider exhibits when performing the given role")
		(type INSTANCE)
;+		(allowed-classes Service_Quality_Value)
		(create-accessor read-write)))

(defclass Technology_Product_Role "Represents the definition of a specific Technology Product's ability to fulfill a given role as a Technology Component. The lifecycle status is used to define the current strategic policy on the use of this Product as the Component."
	(is-a Technology_Provider_Role)
	(role concrete)
	(single-slot purchase_status
;+		(comment "Defines the current status of the element from a purchasing perspective")
		(type INSTANCE)
;+		(allowed-classes Purchase_Status)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Technology_Product_Role)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot role_for_technology_provider
;+		(comment "The Technology Provider for which this role is defined")
		(type INSTANCE)
;+		(allowed-classes Technology_Product)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass Technology_Product_Build_Role "Represents the definition of a specific Technology Product Build's ability to fulfill a given role as a Technology Composite. A Technology Product Build could be used to provide the realisation of more than one Technology Composite, so the strategic lifecycle status is used to define the current strategic policy on using this build as the specified Composite"
	(is-a Technology_Provider_Role)
	(role concrete)
	(single-slot implementing_technology_component
;+		(comment "A Technology Component that the Technology Provider asssociated with this role is implementing")
		(type INSTANCE)
;+		(allowed-classes Technology_Composite)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Technology_Product_Build_Role)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot role_for_technology_provider
;+		(comment "The Technology Product Build for which this role is defined")
		(type INSTANCE)
;+		(allowed-classes Technology_Product_Build)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass Technology_Protocol "Class to represent technical protocols that are used by technologies to communicate, e.g. HTTP, SOAP, RMI, TCP/IP"
	(is-a Technology_Logical)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Technology_Protocol)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Logical_Technology_Model "A model that describes relationships between logical technology elements"
	(is-a Technology_Logical)
	(role abstract)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Logical_Technology_Model)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Technology_Component_Architecture "Logical Technology Component Architecture that defines a Technology Composite in terms of the Technology Components and the relationships between them that make up the Composite."
	(is-a Logical_Technology_Model)
	(role concrete)
	(single-slot describes_technology_composite
		(type INSTANCE)
;+		(allowed-classes Technology_Composite)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Technology_Component_Architecture)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot technology_component_usages
;+		(comment "The Technology Components Usages that used in the architecture")
		(type INSTANCE)
;+		(allowed-classes Technology_Component_Architecture_Type)
		(create-accessor read-write))
	(multislot invoked_functions_relations
;+		(comment "The TCU-TO-TFU relations in the architecture. These model the Functions that are invoked by Technology Components")
		(type INSTANCE)
;+		(allowed-classes %3ATCA-RELATION)
		(create-accessor read-write)))

(defclass Technology_Component_Architecture_Type "Super class for Technology Component Usages and Technology Function Usages. Used in Technology Component Architectures."
	(is-a Logical_Technology_Model)
	(role abstract)
	(single-slot technology_architecture_display_label
;+		(comment "A text label that is displayed for usages of technology components in Technology Architectures.")
		(type STRING)
		(default "<component_used>")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot inverse_of_technology_component_usages
		(type INSTANCE)
;+		(allowed-classes Technology_Component_Architecture)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Technology_Component_Architecture_Type)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Technology_Component_Usage "The use of a Technology Component in a Technology Component Architecture"
	(is-a Technology_Component_Architecture_Type)
	(role concrete)
	(single-slot usage_of_technology_component
		(type INSTANCE)
;+		(allowed-classes Technology_Component)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot name_
;+		(comment "A descriptive name of the element in the model.\\n(NOTE: A unique, internal reference is managed separately by the system.)")
		(type STRING)
		(default "<architecture>::<component>")
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Technology_Component_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Technology_Function_Usage "The use of a Technology Function in a Technology Component Architecture."
	(is-a Technology_Component_Architecture_Type)
	(role concrete)
	(single-slot technology_architecture_display_label
;+		(comment "A text label that is displayed for usages of technology components in Technology Architectures.")
		(type STRING)
		(default "<function_used>")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot usage_of_technology_function
		(type INSTANCE)
;+		(allowed-classes Technology_Function)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot name_
;+		(comment "A descriptive name of the element in the model.\\n(NOTE: A unique, internal reference is managed separately by the system.)")
		(type STRING)
		(default "<architecuture>::<function>")
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Technology_Function_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Technology_Build_Architecture "Architecture to describe the make-up of a Technology Product Build, in terms of the Technology Products and the relationships between them that make up the build."
	(is-a Logical_Technology_Model)
	(role concrete)
	(multislot contained_provider_architecture_relations
;+		(comment "The relationships between Technology Product constructs in this architecture")
		(type INSTANCE)
;+		(allowed-classes %3ATPA-RELATION)
		(create-accessor read-write))
	(single-slot describes_technology_provider
;+		(comment "The Technology Product that an Technology Product Architecture is describing")
		(type INSTANCE)
;+		(allowed-classes Technology_Provider)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot contained_architecture_components
;+		(comment "The set of Technology Product Usages and Technology Product Function Usages used in a Technology Product Architecture")
		(type INSTANCE)
;+		(allowed-classes Technology_Build_Architecture_Type)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Technology_Build_Architecture)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Technology_Build_Architecture_Type "Super class of all constructs that are used in a Technology Provider Architecture."
	(is-a Logical_Technology_Model)
	(role abstract)
	(single-slot technology_architecture_display_label
;+		(comment "A text label that is displayed for usages of technology components in Technology Architectures.")
		(type STRING)
		(default "<component_used>")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot used_in_technology_provider_architecture
;+		(comment "The Technology Provider Architecture in which this Technology Provider Usage is contained")
		(type INSTANCE)
;+		(allowed-classes Technology_Build_Architecture)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Technology_Build_Architecture_Type)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Technology_Provider_Usage "The usage of a Technology Provider in a Technology Provider Architecture"
	(is-a Technology_Build_Architecture_Type)
	(role concrete)
	(single-slot technology_architecture_display_label
;+		(comment "A text label that is displayed for usages of technology components in Technology Architectures.")
		(type STRING)
		(default "<product_used>")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot deployed_technology_instances
;+		(comment "Relation to the physical instances of this use of the specified Technology Provider")
		(type INSTANCE)
;+		(allowed-classes Technology_Instance)
		(create-accessor read-write))
	(single-slot name_
;+		(comment "A descriptive name of the element in the model.\\n(NOTE: A unique, internal reference is managed separately by the system.)")
		(type STRING)
		(default "<architecture>::<product>")
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot provider_as_role
;+		(comment "The Provider and its Role (Technology Component) in a Technology Provider Architecture")
		(type INSTANCE)
;+		(allowed-classes Technology_Provider_Role)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot deployed_as_technology_node
;+		(comment "Slot holding references to the Technology Nodes that a Technology Provider has been deployed as. e.g. a server technology provider used to instantiate a Node")
		(type INSTANCE)
;+		(allowed-classes Technology_Node)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Technology_Provider_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Technology_Provider_Function_Usage "Class for modelling the usage of a Technology Function that is being implemented by a Technology Provider in a Technology Provider Architecture. This class holds the information about which Provider Usage is providing the Technology Function and which role (in terms of Technology Components) this Technology Provider is playing in this usage in the architecture"
	(is-a Technology_Build_Architecture_Type)
	(role concrete)
	(single-slot technology_architecture_display_label
;+		(comment "A text label that is displayed for usages of technology components in Technology Architectures.")
		(type STRING)
		(default "<function_used>")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot provides_technology_function
;+		(comment "A reference to the Technology Function that this Technology Product Function Usage is providing.")
		(type INSTANCE)
;+		(allowed-classes Technology_Function)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot name_
;+		(comment "A descriptive name of the element in the model.\\n(NOTE: A unique, internal reference is managed separately by the system.)")
		(type STRING)
		(default "<architecture>::<product>::<component>::<function>")
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Technology_Provider_Function_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Technology_Protocol_Usage
	(is-a Technology_Build_Architecture_Type)
	(role concrete)
	(single-slot usage_of_technology_protocol
		(type INSTANCE)
;+		(allowed-classes Technology_Protocol)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot name_
;+		(comment "A descriptive name of the element in the model.\\n(NOTE: A unique, internal reference is managed separately by the system.)")
		(type STRING)
		(default "<architecture>::<from>::<relation>::<to>::<protocol>")
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Technology_Protocol_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Technology_Product_Architecture "Architecture that describes the make up of a Technology Product."
	(is-a Logical_Technology_Model)
	(role concrete)
	(single-slot describes_technology_product
;+		(comment "The Technology Product that this Product Architecture describes")
		(type INSTANCE)
;+		(allowed-classes Technology_Product)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot contained_relations_in_tech_product_architecture
;+		(comment "The set of relations that are contained in this Technology Product Architecture")
		(type INSTANCE)
;+		(allowed-classes %3ATPRA-RELATION)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Technology_Product_Architecture)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot contained_techProd_components
;+		(comment "The set of Technology Products that make up this architecture")
		(type INSTANCE)
;+		(allowed-classes Technology_Product_Architecture_Type)
		(create-accessor read-write)))

(defclass Technology_Product_Architecture_Type "Set of allowable classes that appear in Technology Product Architectures."
	(is-a Logical_Technology_Model)
	(role abstract)
	(single-slot technology_architecture_display_label
;+		(comment "A text label that is displayed for usages of technology components in Technology Architectures.")
		(type STRING)
		(default "<component_used>")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot used_in_technology_product_architecture
;+		(comment "Reference to the Technology Product Architecture in which this usage appears")
		(type INSTANCE)
;+		(allowed-classes Technology_Product_Architecture)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Technology_Product_Architecture_Type)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Technology_Product_Usage "A specific usage of the specified Technology Product in a Technology Product Architecture to capture products on which products are dependent."
	(is-a Technology_Product_Architecture_Type)
	(role concrete)
	(single-slot technology_architecture_display_label
;+		(comment "A text label that is displayed for usages of technology components in Technology Architectures.")
		(type STRING)
		(default "<product_used>")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot name_
;+		(comment "A descriptive name of the element in the model.\\n(NOTE: A unique, internal reference is managed separately by the system.)")
		(type STRING)
		(default "<architecture>::<product>")
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Technology_Product_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot technology_product_as_role
;+		(comment "The Product and its Role (Technology Component) in a Technology Product Architecture")
		(type INSTANCE)
;+		(allowed-classes Technology_Product_Role)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Technology_Product_Function_Usage "Class for modelling the usage of a Technology Function that is being implemented by a Technology Product  in a Technology Product Architecture. This class holds the information about which ProductUsage is providing the Technology Function and which role (in terms of Technology Components) this Technology Product is playing in this usage in the architecture"
	(is-a Technology_Product_Architecture_Type)
	(role concrete)
	(single-slot technology_architecture_display_label
;+		(comment "A text label that is displayed for usages of technology components in Technology Architectures.")
		(type STRING)
		(default "<function_used>")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot provides_technology_function
;+		(comment "A reference to the Technology Function that this Technology Product Function Usage is providing.")
		(type INSTANCE)
;+		(allowed-classes Technology_Function)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot name_
;+		(comment "A descriptive name of the element in the model.\\n(NOTE: A unique, internal reference is managed separately by the system.)")
		(type STRING)
		(default "<architecture>::<product>::<component>::<function>")
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Technology_Product_Function_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Technology_Product_Protocol_Usage "Usage of the specified Protocol by Product Usages in an architecture."
	(is-a Technology_Product_Architecture_Type)
	(role concrete)
	(single-slot usage_of_technology_protocol
		(type INSTANCE)
;+		(allowed-classes Technology_Protocol)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot name_
;+		(comment "A descriptive name of the element in the model.\\n(NOTE: A unique, internal reference is managed separately by the system.)")
		(type STRING)
		(default "<architecture>::<from>::<relation>::<to>::<protocol>")
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Technology_Product_Protocol_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Technology_Product_Dependency "Class to define dependencies of a Technology Product in terms of supported and un-supported products."
	(is-a Technology_Product_Architecture_Type)
	(role concrete)
	(multislot tpd_unsupported_products
;+		(comment "The set of Technology Product (Roles) that CANNOT be used to resolve this dependency by implementing the specified Component")
		(type INSTANCE)
;+		(allowed-classes Technology_Provider_Role)
		(create-accessor read-write))
	(multislot tpd_supported_products
;+		(comment "The set of Technology Product (Roles) that can be used to resolve this dependency by implementing the specified Component")
		(type INSTANCE)
;+		(allowed-classes Technology_Provider_Role)
		(create-accessor read-write))
	(single-slot tpd_technology_component
;+		(comment "Defines the technology component that is required by the Technology Product")
		(type INSTANCE)
;+		(allowed-classes Technology_Component)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass Technology_Product_Family "Class to group related Technology Product instances into a product 'family'. This should be used to group separate version instances of a Technology Product into a family for that Product. e.g. WebLogic to group WebLogic 7.0, WebLogic 8.0, WebLogic 9.0.\nThis provides a more powerful and flexible approach than using Enumerations or Taxonomies.\nEach version instance can be related in terms of the supersession of versions using the supersedes_version slot. e.g. ProductX 2.0 supersedes ProductX 1.5"
	(is-a Technology_Logical)
	(role concrete)
	(multislot groups_technology_products
;+		(comment "The set of Technology Products that make up the product family.")
		(type INSTANCE)
;+		(allowed-classes Technology_Provider)
		(create-accessor read-write)))

(defclass Technology_Physical "The Logical view of the Technology Layer of the meta model. A set of meta-classes that helps to describes the physical implementation of the enterprise's technology infrastructure"
	(is-a Technology_Layer)
	(role abstract)
	(multislot tech_physical_contained_in_arch_states
;+		(comment "The architecture states that contain this physical technology element")
		(type INSTANCE)
;+		(allowed-classes Architecture_State)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Technology_Physical)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Technology_Instance "An instance of a piece of hardware or software technology in the infrastructure of the organisation. (e.g. a specific server or a specific instance of an installed piece of software)."
	(is-a Technology_Physical)
	(role abstract)
	(multislot instance_of_logical_tech_provider
;+		(comment "Mapping to the use of a Technology Provider in a logical Technology Provider architecture. That is, what is this Technology_Instance being used for")
		(type INSTANCE)
;+		(allowed-classes Technology_Provider_Usage)
		(create-accessor read-write))
	(single-slot technology_instance_deployed_on_node
;+		(comment "The Technology Node that this instance is deployed to.")
		(type INSTANCE)
;+		(allowed-classes Technology_Node)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot technology_instance_deployment_status
;+		(comment "The runtime status of this technology instance")
		(type INSTANCE)
;+		(allowed-classes Deployment_Status)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot technology_instance_of
		(type INSTANCE)
;+		(allowed-classes Technology_Provider)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot name_
;+		(comment "A descriptive name of the element in the model.\\n(NOTE: A unique, internal reference is managed separately by the system.)")
		(type STRING)
		(default "<provider>::<instance>")
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot technology_instance_given_name
;+		(comment "The given name of a technology instance, e.g. the hostname of a physical device or the specified instance name of a software instance.")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot technology_instance_attributes
;+		(comment "The set of Attribute Values for a technology instance. Each instance of an Attribute Value is, in effect, a usage of an Attribute Instance.")
		(type INSTANCE)
;+		(allowed-classes Attribute_Value)
		(create-accessor read-write))
	(multislot contained_technology_instance_dependencies
;+		(comment "Set of Technology Instances (hardware and software) that a Technology Instance is dependent on.")
		(type INSTANCE)
;+		(allowed-classes Technology_Instance)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Technology_Instance)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Hardware_Instance "Class to capture hardware Technology Instances, e.g. servers, desktop workstations, network routers and so on."
	(is-a Technology_Instance)
	(role concrete)
	(single-slot name_
;+		(comment "A descriptive name of the element in the model.\\n(NOTE: A unique, internal reference is managed separately by the system.)")
		(type STRING)
		(default "<device name>")
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Hardware_Instance)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Infrastructure_Software_Instance "Class to capture software Technology Instances deployed to a particular Technology Node. Infrastructure Software is all software that does not directly encode application functionality, e.g. operating systems, middleware (including Application Servers and integration software), RDBMS software, virtual machines and so on."
	(is-a Technology_Instance)
	(role concrete)
	(single-slot technology_instance_given_name
;+		(comment "The given name of a technology instance, e.g. the hostname of a physical device or the specified instance name of a software instance.")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Infrastructure_Software_Instance)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Application_Software_Instance "Class to represent instances of the applications software that are deployed to a particular Technology Node. Application software is software code or configuration that encodes application functionality, e.g. Java EAR or WAR, or an executable application program file."
	(is-a Technology_Instance)
	(role concrete)
	(single-slot instance_of_logical_tech_provider
;+		(comment "Mapping to the use of a Technology Provider in a logical Technology Provider architecture. That is, what is this Technology_Instance being used for")
		(type INSTANCE)
;+		(allowed-classes Technology_Provider_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot technology_instance_given_name
;+		(comment "The given name of a technology instance, e.g. the hostname of a physical device or the specified instance name of a software instance.")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot instance_of_application_deployment
;+		(comment "Reference to the Application Deployment that this Technology Instance represents. E.g. this bit of software (code, config, script etc.) is the application that has been deployed.")
		(type INSTANCE)
;+		(allowed-classes Application_Deployment)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Application_Software_Instance)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Information_Store_Instance "An instance of an Information Store that has been deployed to a physical node."
	(is-a Technology_Instance)
	(role concrete)
	(single-slot instance_of_information_store
;+		(comment "The Information Store that has been deployed as this Instance")
		(type INSTANCE)
;+		(allowed-classes Information_Store)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot technology_instance_given_name
;+		(comment "The given name of a technology instance, e.g. the hostname of a physical device or the specified instance name of a software instance.")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Information_Store_Instance)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Technology_Node "A locate-able Node in the infrastructure on which other Nodes and Technology Instances are deployed."
	(is-a Technology_Physical)
	(role concrete)
	(multislot used_in_technology_build
;+		(comment "Slot capturing the architectures (Product Builds) that reference this Technology Node. Holds the specific element in the build that refers to this Node.")
		(type INSTANCE)
;+		(allowed-classes Technology_Provider_Usage)
		(create-accessor read-write))
	(single-slot name_
;+		(comment "A descriptive name of the element in the model (NOTE: A unique, internal reference is managed separately by the system.)")
		(type STRING)
		(default "<technology node name>")
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot technology_node_inbound_connections
;+		(comment "Defines the inbound connections to this Technology Node from other Technology Nodes")
		(type INSTANCE)
;+		(allowed-classes TECH_NODE_TO_TECH_NODE_CONNECTION)
		(create-accessor read-write))
	(multislot inverse_of_contained_technology_nodes
;+		(comment "The set of Technology Nodes in which this node is contained.")
		(type INSTANCE)
;+		(allowed-classes Technology_Node)
		(create-accessor read-write))
	(multislot technology_node_platform_stack
;+		(comment "Defines the list of Technology Provider Roles that have been used to implement the Technology Node as a platform, e.g. Hardware, Operating System, built-in runtime software")
		(type INSTANCE)
;+		(allowed-classes Technology_Provider_Role)
		(create-accessor read-write))
	(single-slot tn_supplier
		(type INSTANCE)
;+		(allowed-classes Supplier)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot technology_node_type
;+		(comment "Defines the nature of the technology node, e.g. Physical Server, Firewall, Virtual Server, VLAN, LAN, WAN, Cloud Region")
		(type INSTANCE)
;+		(allowed-classes Technology_Node_Type)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot technology_deployment_located_at
;+		(comment "The Site at which this physical deployment is located.")
		(type INSTANCE)
;+		(allowed-classes Site)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot technology_node_attributes
;+		(comment "The set of Attribute Values that a Technology Node has")
		(type INSTANCE)
;+		(allowed-classes Attribute_Value)
		(create-accessor read-write))
	(single-slot deployment_of
		(type INSTANCE)
;+		(allowed-classes Technology_Provider)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot tn_business_criticality
;+		(comment "Allows for the explicit capture of the relative business criticality of the Technology Node")
		(type INSTANCE)
;+		(allowed-classes Business_Criticality)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot contained_technology_instances
;+		(comment "The set of Technology Instances that are deployed to a Technology Deployment")
		(type INSTANCE)
;+		(allowed-classes Technology_Instance)
		(create-accessor read-write))
	(multislot technology_node_outbound_connections
;+		(comment "Defines the outbound connections from this Technology Node to other Technology Nodes")
		(type INSTANCE)
;+		(allowed-classes TECH_NODE_TO_TECH_NODE_CONNECTION)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Technology_Node)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot contained_technology_nodes
;+		(comment "The set of Technology Nodes that are contained in this Technology Node")
		(type INSTANCE)
;+		(allowed-classes Technology_Node)
		(create-accessor read-write)))

(defclass Technology_Deployment_Group "A (typically large) number of Technology Deployments can be worked with as a group using the Technology Deployment Group.\nThe Technology Deployment Group is a set of Technology Nodes and their Technology Instances. A Technology Node definition is used as a template for the group via the contained_technology_deployments field/slot."
	(is-a Technology_Physical)
	(role concrete)
	(single-slot total_instances
		(type INTEGER)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot contained_technology_deployment_instances
;+		(comment "The set of Technology Deployment Instances in this Group")
		(type INSTANCE)
;+		(allowed-classes Technology_Node)
		(create-accessor read-write))
	(multislot contained_technology_instance_instances
;+		(comment "The set of Technology Instances that are in the Technology Deployment Group.")
		(type INSTANCE)
;+		(allowed-classes Technology_Instance)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Technology_Deployment_Group)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot deployment_of_technology_product
;+		(comment "The Technology Product that this group is a set of deployments of.")
		(type INSTANCE)
;+		(allowed-classes Technology_Provider)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass Physical_Technology_Model "A model that describes relationships to and from physical technology elements"
	(is-a Technology_Physical)
	(role abstract)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Physical_Technology_Model)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Technology_Deployment_Architecture "A definition of the dependencies that exist between Technology Nodes in a physical technology architecture."
	(is-a Physical_Technology_Model)
	(role concrete)
	(multislot technology_deployment_usages
;+		(comment "The Technology Deployment Usages that are used in the architecture")
		(type INSTANCE)
;+		(allowed-classes Technology_Deployment_Architecture_Model_Type)
		(create-accessor read-write))
	(multislot technology_deployment_relations
;+		(comment "The TNU-TO-TNU relations in the architecture. These model the Technology Node dependencies.")
		(type INSTANCE)
;+		(allowed-classes %3ATNU-TO-TNU-RELATION)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Technology_Deployment_Architecture)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Technology_Deployment_Architecture_Model_Type "Super class of components that are used to describe the Physical Deployment Architectures for technology infrastructure."
	(is-a Physical_Technology_Model)
	(role abstract)
	(single-slot diagram_label
;+		(comment "")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Technology_Deployment_Architecture_Model_Type)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot inverse_of_technology_deployment_usages
;+		(comment "The Technology Deployment Architecture in which this Technology Deployment Usage is contained")
		(type INSTANCE)
;+		(allowed-classes Technology_Deployment_Architecture)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Technology_Deployment_Usage "The usage of a Technology Node in a Technology Deployment Architecture."
	(is-a Technology_Deployment_Architecture_Model_Type)
	(role concrete)
	(single-slot usage_of_technology_node
;+		(comment "Specification of the Technology Node that is being used.")
		(type INSTANCE)
;+		(allowed-classes Technology_Node)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot name_
;+		(comment "A descriptive name of the element in the model.\\n(NOTE: A unique, internal reference is managed separately by the system.)")
		(type STRING)
		(default "<architecture>::<node>")
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Technology_Deployment_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass EA_Support "The base class for meta classes that operate on the core Business, Application, Information and Technology layers providing EA supporting capabilities, e.g. Strategy Management, Security, Programme Management, Information Lifecycle Management"
	(is-a EA_Class)
	(role abstract)
	(multislot sl_security_classifications
;+		(comment "The security classifications assigned to this management/supporting element in the context of the enterprise")
		(type INSTANCE)
;+		(allowed-classes Security_Classification)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Strategy_Management "Category for classes that support the definition and maintenance of strategy across the architecture layers"
	(is-a EA_Support)
	(role abstract)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Strategy_Management)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot strategy_contained_in_arch_state
;+		(comment "The architecture states that contain this strategy management element")
		(type INSTANCE)
;+		(allowed-classes Architecture_State)
		(create-accessor read-write)))

(defclass Architecture_State "An Architecture State groups a set of related architectures in a particular context or configuration. Such contexts could be temporal, e.g. reflecting architectures that are valid today or in the future. Equally, this context could represent the set of architectures required to achieve a particular goal. Naming of Architecture States is important. Architecture States should be named for the configuration of architectures that they group. What does this state do for the organisation? Avoid names such as 'Current State' or 'Future State' as these Architecture States can be used in different contexts."
	(is-a Strategy_Management)
	(role concrete)
	(single-slot start_date_iso_8601
;+		(comment "The date from which this architecture is relevant to the enterprise in ISO 8601 format (yyyy-mm-dd)")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot arch_state_technology_physical
;+		(comment "Slot to group the set of architectures from the Technology Physical layer in an Architecture State")
		(type INSTANCE)
;+		(allowed-classes Technology_Physical)
		(create-accessor read-write))
	(multislot arch_state_technology_relations
;+		(comment "Slot to capture the Technology Relationship instances (e.g. technology dependencies in a logical technology architecture) that are in an Architecture State")
		(type INSTANCE)
;+		(allowed-classes %3ATechnology_Relationship)
		(create-accessor read-write))
	(multislot arch_state_physical_information
;+		(comment "Slot to group the set of architectures from the Information Physical layer in an Architecture State")
		(type INSTANCE)
;+		(allowed-classes Information_Physical)
		(create-accessor read-write))
	(single-slot end_date_iso_8601
;+		(comment "The date until which this architecture is relevant to the enterprise in ISO 8601 format (yyyy-mm-dd)")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot arch_state_application_physical
;+		(comment "Slot to group the set of architectures from the Application Physical layer in an Architecture State")
		(type INSTANCE)
;+		(allowed-classes Application_Physical)
		(create-accessor read-write))
	(multislot arch_state_information_relations
;+		(comment "Slot to capture the Information Relationship instances (e.g. Information used by Application relationships) that are in an Architecture State")
		(type INSTANCE)
;+		(allowed-classes Information_Relationship APP_TO_INFO_RELATION)
		(create-accessor read-write))
	(multislot arch_state_business_physical
;+		(comment "Slot to group the set of architectures from the Business Physical layer in an Architecture State")
		(type INSTANCE)
;+		(allowed-classes Business_Physical APP_PRO_TO_PHYS_BUS_RELATION PHYSBUSPROC_TO_APPINFOREP_RELATION)
		(create-accessor read-write))
	(multislot arch_state_technology_logical
;+		(comment "Slot to group the set of architectures from the Technology Logical Layer in an Architecture State")
		(type INSTANCE)
;+		(allowed-classes Technology_Logical %3ATechnology_Relationship)
		(create-accessor read-write))
	(multislot arch_state_application_conceptual
;+		(comment "Slot to group the set of architectures from the Application Conceptual layer in an Architecture State")
		(type INSTANCE)
;+		(allowed-classes Application_Conceptual)
		(create-accessor read-write))
	(multislot arch_state_technology_conceptual
;+		(comment "Slot to group the set of architectures from the Technology Conceptual layer in an Architecture State")
		(type INSTANCE)
;+		(allowed-classes Technology_Conceptual)
		(create-accessor read-write))
	(multislot arch_state_objectives
;+		(comment "The strategic objectives that are met by achieving the architecture state")
		(type INSTANCE)
;+		(allowed-classes Information_Architecture_Objective Business_Objective Application_Architecture_Objective Technology_Architecture_Objective)
		(create-accessor read-write))
	(multislot arch_state_business_logical
;+		(comment "Slot to group the set of architectures from the Business Logical Layer in an Architecture State")
		(type INSTANCE)
;+		(allowed-classes Business_Logical Business_Service_Quality_Value Business_Service_Quality APP_FUN_TO_BUS_RELATION APP_FUNIMPL_TO_BUS_RELATION APP_APP_TO_BUS_RELATION APP_SVC_TO_BUS_RELATION BUSPROCTYPE_TO_INFOVIEW_RELATION ACTOR_TO_ROLE_RELATION)
		(create-accessor read-write))
	(multislot arch_state_security_management
;+		(comment "Slot to capture the elements related to security management in an Architecture State. Choose a relevant concrete instance, e.g. Security Principle, Security Policy etc.")
		(type INSTANCE)
;+		(allowed-classes Security_Management)
		(create-accessor read-write))
	(multislot arch_state_information_logical
;+		(comment "Slot to group the set of architectures from the Information Logical layer in an Architecture State")
		(type INSTANCE)
;+		(allowed-classes Information_Logical)
		(create-accessor read-write))
	(single-slot start_date
;+		(comment "The date from which this architecture is relevant to the enterprise")
		(type INSTANCE)
;+		(allowed-classes Time)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot arch_state_business_relations
;+		(comment "Slot to capture the Business Relationship instances (e.g. Actor to Role relationships) that are in an Architecture State")
		(type INSTANCE)
;+		(allowed-classes Business_Relationship)
		(create-accessor read-write))
	(multislot arch_state_information_conceptual
;+		(comment "Slot to group the set of architectures from the Information Conceptual layer in an Architecture State")
		(type INSTANCE)
;+		(allowed-classes Information_Conceptual)
		(create-accessor read-write))
	(multislot arch_state_application_relations
;+		(comment "Slot to capture the Application Relationship instances (e.g. Application to Process relationships) that are in an Architecture State")
		(type INSTANCE)
;+		(allowed-classes Application_Relationship %3AApplication_Relationship)
		(create-accessor read-write))
	(multislot arch_state_business_conceptual
;+		(comment "Slot to group the set of architectures from the Business Conceptual Layer in an Architecture State")
		(type INSTANCE)
;+		(allowed-classes Business_Conceptual)
		(create-accessor read-write))
	(multislot as_contained_in_roadmaps
;+		(comment "The Roadmaps that contain the Architecture State")
		(type INSTANCE)
;+		(allowed-classes Roadmap)
		(create-accessor read-write))
	(multislot arch_state_application_logical
;+		(comment "Slot to group the set of architectures from the Application Logical Layer in an Architecture State")
		(type INSTANCE)
;+		(allowed-classes Application_Logical)
		(create-accessor read-write))
	(single-slot end_date
;+		(comment "The date until which this architecture is relevant to the enterprise")
		(type INSTANCE)
;+		(allowed-classes Time)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Architecture_State)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot arch_state_strategy_management
;+		(comment "Slot to group the set of strategic assumptions, constraints and requirements in an Architecture State")
		(type INSTANCE)
;+		(allowed-classes Strategy_Management)
		(create-accessor read-write)))

(defclass Strategic_Plan "Describes the strategic plan of action for a given architecture element. This is an abstract class that provides an anchor for specific strategic plan sub-classes that are themselves associated with specific Architecture elements to meet an organisation's specific modelling requirements"
	(is-a Strategy_Management)
	(role abstract)
	(multislot depends_on_strategic_plans
;+		(comment "The set of Strategic Plans that a Strategic plan depends upon.")
		(type INSTANCE)
;+		(allowed-classes Strategic_Plan)
		(create-accessor read-write))
	(single-slot strategic_plan_comments
;+		(comment "Additional [to the Description] comments that made about a Strategic Plan")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot strategic_plan_supports_objective
;+		(comment "Slot to manage the set of Objectives that are supported by a Strategic Plan")
		(type INSTANCE)
;+		(allowed-classes Information_Architecture_Objective Technology_Architecture_Objective Application_Architecture_Objective Business_Objective)
		(create-accessor read-write))
	(multislot strategic_plan_constraints
;+		(comment "Constraints that may impact the delivery of the strategic plans")
		(type INSTANCE)
;+		(allowed-classes Constraint)
		(create-accessor read-write))
	(single-slot strategic_plan_valid_to_date
;+		(comment "The date after which this plan is no longer valid in the enterprise")
		(type INSTANCE)
;+		(allowed-classes Time)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot strategic_plan_supported_by_projects
;+		(comment "The set of Projects that are supporting the realisation of a Strategic Plan")
		(type INSTANCE)
;+		(allowed-classes Change_Activity)
		(create-accessor read-write))
	(multislot strategic_plan_for_elements
;+		(comment "The relationships to architectural element(s) to which this plan applies")
		(type INSTANCE)
;+		(allowed-classes PLAN_TO_ELEMENT_RELATION)
		(create-accessor read-write))
	(multislot strategic_plan_assumptions
;+		(comment "The assumptions being made in the context of the strategic plan")
		(type INSTANCE)
;+		(allowed-classes Assumption)
		(create-accessor read-write))
	(multislot strategic_plan_drivers
;+		(comment "The strategic drivers that have motivated the need for the strategic plan")
		(type INSTANCE)
;+		(allowed-classes Business_Driver Application_Driver Information_Driver Technology_Driver)
		(create-accessor read-write))
	(multislot strategic_plan_for_element
;+		(comment "DEPRECATED - USE \\\"strategic_plan_for_elements\\\" slot: The individual architectural element(s) to which this plan applies")
		(type INSTANCE)
;+		(allowed-classes EA_Class EA_Relation %3AEA_Graph_Relation)
		(create-accessor read-write))
	(single-slot strategic_planning_action
;+		(comment "DEPRECATED - USE AS PART OF  \\\"strategic_plan_for_elements\\\" slot: The action that is to be taken as part of the Strategic Plan")
		(type INSTANCE)
;+		(allowed-classes Planning_Action)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot strategic_plan_status
;+		(comment "The current status of this strategic plan.")
		(type INSTANCE)
;+		(allowed-classes Planning_Status)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot strat_plan_meets_requirement
;+		(comment "The requirements that are being met by the Strategic Plan.")
		(type INSTANCE)
;+		(allowed-classes Strategic_Requirement)
		(create-accessor read-write))
	(single-slot strategic_plan_valid_to_date_iso_8601
;+		(comment "The date after which this plan is no longer valid in the enterprise in ISO 8601 format (yyyy-mm-dd)")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot strategic_plan_valid_from_date
;+		(comment "The date from which this plan is valid in the enterprise")
		(type INSTANCE)
;+		(allowed-classes Time)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Strategic_Plan)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot supports_strategic_plan
;+		(comment "The set of Strategic Plans that this plan supports")
		(type INSTANCE)
;+		(allowed-classes Strategic_Plan)
		(create-accessor read-write))
	(single-slot strategic_plan_valid_from_date_iso_8601
;+		(comment "The date from which this plan is valid in the enterprise in ISO 8601 format (yyyy-mm-dd)")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Business_Strategic_Plan "A Strategic plan for elements in the Business Layer of the architecture"
	(is-a Strategic_Plan)
	(role concrete)
	(multislot strategic_plan_for_element
;+		(comment "DEPRECATED - USE \\\"strategic_plan_for_elements\\\" slot: The individual architectural element(s) to which this plan applies")
		(type INSTANCE)
;+		(allowed-classes Business_Layer Business_Relationship APP_TO_BUS_RELATION Business_Service_Quality Business_Service_Quality_Value)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Business_Strategic_Plan)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Application_Strategic_Plan "A Strategic plan for elements in the Application Layer of the architecture"
	(is-a Strategic_Plan)
	(role concrete)
	(multislot strategic_plan_for_element
;+		(comment "DEPRECATED - USE \\\"strategic_plan_for_elements\\\" slot: The individual architectural element(s) to which this plan applies")
		(type INSTANCE)
;+		(allowed-classes Application_Layer Application_Relationship %3AApplication_Relationship)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Application_Strategic_Plan)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Information_Strategic_Plan "A Strategic plan for elements in the Information Layer of the architecture"
	(is-a Strategic_Plan)
	(role concrete)
	(multislot strategic_plan_for_element
;+		(comment "DEPRECATED - USE \\\"strategic_plan_for_elements\\\" slot: The individual architectural element(s) to which this plan applies")
		(type INSTANCE)
;+		(allowed-classes Information_Layer Information_Relationship)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Information_Strategic_Plan)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Technology_Strategic_Plan "A Strategic plan for elements in the Technology Layer of the architecture"
	(is-a Strategic_Plan)
	(role concrete)
	(multislot strategic_plan_for_element
;+		(comment "DEPRECATED - USE \\\"strategic_plan_for_elements\\\" slot: The individual architectural element(s) to which this plan applies")
		(type INSTANCE)
;+		(allowed-classes Technology_Layer %3ATechnology_Relationship)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Technology_Strategic_Plan)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Security_Strategic_Plan "Strategic Plan for elements that managed in the Security Management section of the meta model."
	(is-a Strategic_Plan)
	(role concrete)
	(multislot strategic_plan_for_element
;+		(comment "DEPRECATED - USE \\\"strategic_plan_for_elements\\\" slot: The individual architectural element(s) to which this plan applies")
		(type INSTANCE)
;+		(allowed-classes Security_Management)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Security_Strategic_Plan)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Enterprise_Strategic_Plan "A Strategic plan that impacts elements from across all layers of the enterprise"
	(is-a Strategic_Plan)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Strategic_Plan)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Roadmap_Model "A Roadmap Model defines the roadmap for change in the organisation. This is not a project plan or a programme plan but captures the transitions between different configurations of the organisation via Milestones, which capture a particular configuration. These milestones can range in granularity from very high views of the entire organisation down to specific architectures for a particular aspect of the organisation."
	(is-a Strategy_Management)
	(role concrete)
	(multislot contained_roadmap_relations
;+		(comment "The set of roadmap milestone transitions that are defined in a particular roadmap model.")
		(type INSTANCE)
;+		(allowed-classes %3ARoadmap-Model-Relation)
		(create-accessor read-write))
	(multislot contained_roadmap_model_elements
;+		(comment "The set of elements that are used to define a RoadMap model.")
		(type INSTANCE)
;+		(allowed-classes Roadmap_Model_Types)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Roadmap_Model)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot rm_roadmap
;+		(comment "The Roadmap that the Roadmap Model defines")
		(type INSTANCE)
;+		(allowed-classes Roadmap)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot roadmap_model_subject
;+		(comment "The subject(s) elements of the architecture that are the focus of the Roadmap.")
		(type INSTANCE)
;+		(allowed-classes EA_Class EA_Relation)
		(create-accessor read-write)))

(defclass Roadmap_Model_Types "Superclass of all types that can appear in a Roadmap Model."
	(is-a Strategy_Management)
	(role abstract)
	(single-slot used_in_roadmap_model
;+		(comment "Slot holding the RoadMap Model in which this element is used.")
		(type INSTANCE)
;+		(allowed-classes Roadmap_Model)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot roadmap_model_type_label
;+		(comment "A textual label for a Roadmap Model element as it appears on a roadmap diagram")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Roadmap_Model_Types)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Roadmap_Milestone "A milestone on a Roadmap Model defines a particular configuration of the organisation at a point on a roadmap. This configuration itself is defined by an Architecture State"
	(is-a Roadmap_Model_Types)
	(role concrete)
	(multislot milestone_supports_objectives
;+		(comment "The set of Objectives (Business, Application, Information or Technology Architecture) that are supported by reaching a Roadmap Milestone. These can reported on against the Objectives supported by the Strategic Plans associated with a transition on the Roadmap")
		(type INSTANCE)
;+		(allowed-classes Information_Architecture_Objective Technology_Architecture_Objective Application_Architecture_Objective Business_Objective)
		(create-accessor read-write))
	(single-slot milestone_architecture_state
;+		(comment "Slot defining the Architecture State that is being used to define a Roadmap_Milestone.")
		(type INSTANCE)
;+		(allowed-classes Architecture_State)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Roadmap_Milestone)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Roadmap_Timeline_Point "A point on a timeline in a Roadmap Model that  defines when a milestone is expected to be reached on the roadmap. These timelines provide simple but flexible ways of defining the time-point, e.g. 'Oct 2009', 'Q3 2010'."
	(is-a Roadmap_Model_Types)
	(role concrete)
	(single-slot time_point
;+		(comment "The instance of Time represented by this timeline point")
		(type INSTANCE)
;+		(allowed-classes Time)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot time_point_iso_8601
;+		(comment "The date  in ISO 8601 format (yyyy-mm-dd) represented by this timeline point")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot roadmap_model_type_label
;+		(comment "A textual value to capture the time point.")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Roadmap_Timeline_Point)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Roadmap_Start "Class to indicate the starting point for any roadmap. No other semantics associated with this class."
	(is-a Roadmap_Model_Types)
	(role concrete)
	(single-slot roadmap_model_type_label
;+		(comment "A textual label for a Roadmap Model element as it appears on a roadmap diagram")
		(type STRING)
		(default "Start")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Roadmap_Start)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Assumption "Represents an assumption that exists across one or EA elements."
	(is-a Strategy_Management)
	(role concrete)
	(multislot technology_assumptions
;+		(comment "The technology elements that are relevant to the assumption")
		(type INSTANCE)
;+		(allowed-classes Technology_Layer)
		(create-accessor read-write))
	(multislot business_assumptions
;+		(comment "The business elements relevant to the assumption")
		(type INSTANCE)
;+		(allowed-classes Business_Layer)
		(create-accessor read-write))
	(multislot ea_support_assumptions
;+		(comment "EA Support elements that are relevant to the assumption")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
		(create-accessor read-write))
	(multislot information_assumptions
;+		(comment "The information elements that are relevant to the assumption")
		(type INSTANCE)
;+		(allowed-classes Information_Layer)
		(create-accessor read-write))
	(multislot application_assumptions
;+		(comment "The application elements that are relevant to the assumption")
		(type INSTANCE)
;+		(allowed-classes Application_Layer)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Strategy_Management)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Constraint "Class to define and manage constraints that have been identified in the architecture. A constraint relates to a specific element in the model but can have related elements from the other layers (Business, Information, Application, Technology and EA Support)"
	(is-a Strategy_Management)
	(role concrete)
	(multislot constraint_related_support
;+		(comment "The set of EA Support elements that are related to the constraint.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
		(create-accessor read-write))
	(single-slot constraint_target
;+		(comment "The element in the model to which a constraint applies to or is caused by.")
		(type INSTANCE)
;+		(allowed-classes EA_Class)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot constraint_related_application
;+		(comment "The set of application elements that are related to the constraint.")
		(type INSTANCE)
;+		(allowed-classes Application_Layer)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Strategy_Management)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot constraint_related_business
;+		(comment "The set of business elements that are related to the constraint.")
		(type INSTANCE)
;+		(allowed-classes Business_Layer)
		(create-accessor read-write))
	(multislot constraint_related_technology
;+		(comment "The set of technology elements that are related to the constraint.")
		(type INSTANCE)
;+		(allowed-classes Technology_Layer)
		(create-accessor read-write))
	(multislot constraint_related_information
;+		(comment "The set of informtion elements that are related to the constraint.")
		(type INSTANCE)
;+		(allowed-classes Information_Layer)
		(create-accessor read-write)))

(defclass Strategic_Requirement "Abstract class for managing requirements."
	(is-a Strategy_Management)
	(role abstract)
	(multislot sr_requirement_for_elements
;+		(comment "The elements for which this is a strategic requirement")
		(type INSTANCE)
;+		(allowed-classes EA_Relation %3AEA_Graph_Relation Business_Layer Application_Layer Information_Layer Technology_Layer)
		(create-accessor read-write))
	(multislot resolved_by
;+		(comment "The strategic plans that have been defined to resolve the issue")
		(type INSTANCE)
;+		(allowed-classes Strategic_Plan)
		(create-accessor read-write))
	(multislot sr_ideas
;+		(comment "The list of ideas that have been generated to potentially address the requirement")
		(type INSTANCE)
;+		(allowed-classes Idea_Option)
		(create-accessor read-write))
	(single-slot sr_required_from_date_ISO8601
;+		(comment "The date from when this requriement needs to be addressed")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot sr_geo_scope
;+		(comment "The geeographic regions that are considered in scope for the requirement")
		(type INSTANCE)
;+		(allowed-classes Geographic_Region)
		(create-accessor read-write))
	(multislot issue_categories
;+		(comment "A classification of this issue or need  (i.e. tagging)")
		(type INSTANCE)
;+		(allowed-classes Issue_Category)
		(create-accessor read-write))
	(single-slot sr_required_by_date_ISO8601
;+		(comment "The date by when this strategic requirement needs to be addressed")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot sr_target_service_quality_changes
;+		(comment "The relative changes that are expected to occur for service qualities, if the requirement is met")
		(type INSTANCE)
;+		(allowed-classes Service_Quality_Change)
		(create-accessor read-write))
	(single-slot requirement_status
;+		(comment "")
		(type INSTANCE)
;+		(allowed-classes Requirement_Status)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot sr_rationale_statements
;+		(comment "A summary of the reasons behind, or benefits realised if the requirement is met")
		(type INSTANCE)
;+		(allowed-classes Commentary)
		(create-accessor read-write))
	(single-slot sr_lifecycle_status
;+		(comment "Defines the current status of the requirement")
		(type INSTANCE)
;+		(allowed-classes Strategic_Requirement_Lifecycle_Status)
		(default [essential_baseline_6.5.4_Class71])
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot sr_idea_submission_date_iso8601
;+		(comment "The date (in ISO 8601 format) by when ideas to address the Strategic Requirement should be submitted")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot sr_target_personas
;+		(comment "")
		(type INSTANCE)
;+		(allowed-classes Persona)
		(create-accessor read-write))
	(multislot sr_org_scope
;+		(comment "The organisations for which this requirements specifically applies")
		(type INSTANCE)
;+		(allowed-classes Group_Actor)
		(create-accessor read-write))
	(multislot sr_for_strat_trend_implications
;+		(comment "Represents the Strategic Trend Implications that could be partially, or fully addressed if the requirement is met")
		(type INSTANCE)
;+		(allowed-classes Strategic_Trend_Implication)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Strategy_Management)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot sr_goal_statements
;+		(comment "A summary of the goals that the personas are looking to achieve if the requirement is met")
		(type INSTANCE)
;+		(allowed-classes Commentary)
		(create-accessor read-write))
	(multislot sr_target_revenue_changes
;+		(comment "The relative changes to revenues that are expected to occur, if the requirement is met")
		(type INSTANCE)
;+		(allowed-classes Revenue_Component_Change)
		(create-accessor read-write))
	(multislot sr_target_cost_changes
;+		(comment "The relative changes to costs that are expected to occur, if the requirement is met")
		(type INSTANCE)
;+		(allowed-classes Cost_Component_Change)
		(create-accessor read-write)))

(defclass Issue "Represents an issue that exists across one or EA elements. Also provides a means to define the Strategic Plans that are expected to resolve the issue."
	(is-a Strategic_Requirement)
	(role concrete)
	(multislot related_business_elements
;+		(comment "DEPRECATED: Business EA elements that are related to this issue\\n\\nREPLACED BY: sr_requirement_for_elements")
		(type INSTANCE)
;+		(allowed-classes Business_Capability Business_Process Physical_Process Actor)
		(create-accessor read-write))
	(multislot issue_impact
;+		(comment "The relative impact of the issue")
		(type INSTANCE)
;+		(allowed-classes Requirement_Impact Service_Quality)
		(create-accessor read-write))
	(single-slot issue_priority
;+		(comment "The relative priority of the issue")
		(type SYMBOL)
		(allowed-values High Medium Low)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot related_application_elements
;+		(comment "DEPRECATED: Application EA elements that are related to this issue\\n\\nREPLACED BY: sr_requirement_for_elements")
		(type INSTANCE)
;+		(allowed-classes Application_Service Application_Provider Application_Capability Application_Deployment)
		(create-accessor read-write))
	(multislot related_information_elements
;+		(comment "DEPRECATED: Information EA elements that are related to this issue\\n\\nREPLACED BY: sr_requirement_for_elements")
		(type INSTANCE)
;+		(allowed-classes Information_Layer)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Strategy_Management)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot related_technology_elements
;+		(comment "DEPRECATED: Technology EA elements that are related to this issue\\n\\nREPLACED BY: sr_requirement_for_elements")
		(type INSTANCE)
;+		(allowed-classes Technology_Capability Technology_Component Technology_Provider Technology_Instance)
		(create-accessor read-write))
	(single-slot issue_source
;+		(comment "The actor who has raised the issue")
		(type INSTANCE)
;+		(allowed-classes Actor)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Need "Represents an need that exists across one or EA elements. Also provides a means to define the Strategic Plans that are expected to meet the need."
	(is-a Strategic_Requirement)
	(role concrete)
	(multislot need_related_information
;+		(comment "DEPRECATED: The set of information elements that are related to the need.\\n\\nREPLACED BY: sr_requirement_for_elements")
		(type INSTANCE)
;+		(allowed-classes Information_Layer)
		(create-accessor read-write))
	(multislot need_related_technology
;+		(comment "DEPRECATED: The set of technology elements related to the need.\\n\\nREPLACED BY: sr_requirement_for_elements")
		(type INSTANCE)
;+		(allowed-classes Technology_Layer)
		(create-accessor read-write))
	(multislot need_related_business
;+		(comment "DEPRECATED: The set of business elements that are related to the need.\\n\\nREPLACED BY: sr_requirement_for_elements")
		(type INSTANCE)
;+		(allowed-classes Business_Layer)
		(create-accessor read-write))
	(single-slot sr_lifecycle_status
;+		(comment "Defines the current status of the requirement")
		(type INSTANCE)
;+		(allowed-classes Strategic_Requirement_Lifecycle_Status)
		(default [essential_baseline_6.5.4_Class73])
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot need_source
;+		(comment "The actor who has identified the need.")
		(type INSTANCE)
;+		(allowed-classes Actor)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot need_related_application
;+		(comment "DEPRECATED: The set of application elements that are related to the need\\n\\nREPLACED BY: sr_requirement_for_elements")
		(type INSTANCE)
;+		(allowed-classes Application_Layer)
		(create-accessor read-write))
	(single-slot system_content_lifecycle_status
;+		(comment "Defines the lifecycle status of an EA element in support of content approval")
		(type INSTANCE)
;+		(allowed-classes SYS_CONTENT_APPROVAL_STATUS)
		(default [essential_baseline_6.5.4_Class74])
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot need_priority
;+		(comment "The priority of the need")
		(type SYMBOL)
		(allowed-values High Medium Low)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot need_impact
;+		(comment "The impact of the need")
		(type INSTANCE)
;+		(allowed-classes Requirement_Impact Service_Quality)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Strategy_Management)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Strategy_Compliance "Abstract class for classes related to managing compliance against architecture principles supporting the implementation of a strategy"
	(is-a Strategy_Management)
	(role abstract)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Strategy_Management)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Principle_Compliance_Assessment "Abstract class for classes that capture the level of compliance for an EA element against an architecture principle"
	(is-a Strategy_Compliance)
	(role abstract)
	(single-slot pca_element_assessed
;+		(comment "The element that is being assessed against a principle")
		(type INSTANCE)
;+		(allowed-classes EA_Class)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Strategy_Management)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot pca_principle_assessed
;+		(comment "The principle against which an EA element is being assessed")
		(type INSTANCE)
;+		(allowed-classes Security_Principle Information_Architecture_Principle Business_Principle Application_Architecture_Principle Technology_Architecture_Principle)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot pca_compliance_assessment_value
;+		(comment "The level of compliance assessed for the EA aset")
		(type INSTANCE)
;+		(allowed-classes Principle_Compliance_Level)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass Business_Principle_Compliance_Assessment "Capture the level of compliance for an EA element against a business architecture principle"
	(is-a Principle_Compliance_Assessment)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Strategy_Management)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot pca_principle_assessed
;+		(comment "The principle against which an EA element is being assessed")
		(type INSTANCE)
;+		(allowed-classes Business_Principle)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass Application_Principle_Compliance_Assessment "Capture the level of compliance for an EA element against an application architecture principle"
	(is-a Principle_Compliance_Assessment)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Strategy_Management)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot pca_principle_assessed
;+		(comment "The principle against which an EA element is being assessed")
		(type INSTANCE)
;+		(allowed-classes Application_Architecture_Principle)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass Information_Principle_Compliance_Assessment "Capture the level of compliance for an EA element against an information/data architecture principle"
	(is-a Principle_Compliance_Assessment)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Strategy_Management)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot pca_principle_assessed
;+		(comment "The principle against which an EA element is being assessed")
		(type INSTANCE)
;+		(allowed-classes Information_Architecture_Principle)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass Technology_Principle_Compliance_Assessment "Capture the level of compliance for an EA element against a technology architecture principle"
	(is-a Principle_Compliance_Assessment)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Strategy_Management)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot pca_principle_assessed
;+		(comment "The principle against which an EA element is being assessed")
		(type INSTANCE)
;+		(allowed-classes Technology_Architecture_Principle)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass Security_Principle_Compliance_Assessment "Capture the level of compliance for an EA element against a security architecture principle"
	(is-a Principle_Compliance_Assessment)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Strategy_Management)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot pca_principle_assessed
;+		(comment "The principle against which an EA element is being assessed")
		(type INSTANCE)
;+		(allowed-classes Security_Principle)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass Roadmap_Model_Group "A Roadmap Model Group provides a means to group roadmap models together and to filter that group by specific instances in the repository."
	(is-a Strategy_Management)
	(role concrete)
	(multislot rmg_roadmap_models
;+		(comment "The roadmap models contained within this roadmap model group")
		(type INSTANCE)
;+		(allowed-classes Roadmap_Model Roadmap)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(multislot roadmap_model_group_subjects
;+		(comment "The subject(s) elements that are the focus for the Roadmaps contained in this group")
		(type INSTANCE)
;+		(allowed-classes EA_Relation EA_Class)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Strategy_Management)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Roadmap "Defines the evolution of a enterprise elements in terms of a collection of Architecture States and/or Strategic Plans"
	(is-a Strategy_Management)
	(role concrete)
	(single-slot roadmap_model
;+		(comment "A Roadmap Model that defiens the transitions between the contained Architecture States")
		(type INSTANCE)
;+		(allowed-classes Roadmap_Model)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot roadmap_architecture_states
;+		(comment "The collection of Architecture States that comprise the Roadmap. Together they provide a coarse grained view of the changes to be undertaken")
		(type INSTANCE)
;+		(allowed-classes Architecture_State)
		(create-accessor read-write))
	(single-slot roadmap_subject
;+		(comment "The main subject about which the Roadmap is defined")
		(type INSTANCE)
;+		(allowed-classes EA_Relation EA_Class)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Strategy_Management)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot roadmap_strategic_plans
;+		(comment "The strategic plans to be undertaken in order to deliver the target state of the roadmap. Together they provide a finer grained view of the changes to be undertaken")
		(type INSTANCE)
;+		(allowed-classes Strategic_Plan)
		(create-accessor read-write)))

(defclass Strategic_Trend_Management "Classes related to the definition and impact analysis of strategic trends on the enterprise"
	(is-a Strategy_Management)
	(role abstract)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Strategy_Management)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Strategic_Trend "Defines a trend that has the potential to impact the external environment, eco-system or internal operating model of the enterprise"
	(is-a Strategic_Trend_Management)
	(role concrete)
	(single-slot strategic_trend_confidence_percent
;+		(comment "The confidence in percenatage terms that the trend is valid")
		(type FLOAT)
		(range 0.0 1.0)
		(default 1.0)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot strategic_trend_from_year_iso8601
;+		(comment "The year from when the strategic trend is expected to start taking effect")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot strategic_trend_implications
;+		(comment "The implications that may result from the strategic trend")
		(type INSTANCE)
;+		(allowed-classes Strategic_Trend_Implication)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Strategy_Management)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Strategic_Trend_Implication "Defines a potential implication resulting from a trend, described in terms of impacts to the external environment, internal operating model of the enterprise, costs, revenues or business outcomes"
	(is-a Strategic_Trend_Management)
	(role concrete)
	(multislot sti_cost_impacts
;+		(comment "The types of cost that are impacted if the implication is realised")
		(type INSTANCE)
;+		(allowed-classes Cost_Component_Change)
		(create-accessor read-write))
	(multislot sti_geo_scope
;+		(comment "Defines the geographies that are in scope for the impacts of the trend implication")
		(type INSTANCE)
;+		(allowed-classes Geographic_Region)
		(create-accessor read-write))
	(single-slot sti_latest_impact_date_iso_8601
;+		(comment "The latest date from when the impacts of the trend implication are expected to take effect")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot sti_implication_for_trend
;+		(comment "The strategic trend that may lead to this implication")
		(type INSTANCE)
;+		(allowed-classes Strategic_Trend)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot sti_lifecycle_status
;+		(comment "The current status of the Trend Implication")
		(type INSTANCE)
;+		(allowed-classes Strategic_Trend_Implication_Lifecycle_Status)
		(default [essential_baseline_6.5.4_Class81])
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot sti_business_environment_impacts
;+		(comment "The business environment impacts that occur if the implication is realised")
		(type INSTANCE)
;+		(allowed-classes Business_Environment_Factor_Change)
		(create-accessor read-write))
	(multislot bus_env_factor_weighted_dependencies
;+		(comment "The weighted dependencies on Business Environment Factors")
		(type INSTANCE)
;+		(allowed-classes Business_Environment_Weighted_Dependency)
		(create-accessor read-write))
	(single-slot sti_priority_score
;+		(comment "The relative priority score for the Trend Implication")
		(type INTEGER)
		(default 5)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot sti_implication_confidence_level
;+		(comment "The confidence level that the trend implication will occur. Defined as a percentage from 0.0 - 1.0")
		(type FLOAT)
		(range 0.0 1.0)
		(default 0.5)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot sti_revenue_impacts
;+		(comment "The types of revenue stream that are impacted if the implication is realised")
		(type INSTANCE)
;+		(allowed-classes Revenue_Component_Change)
		(create-accessor read-write))
	(multislot sti_enterprise_impacts
;+		(comment "The impacts on EA elements that occur if the implication is realised")
		(type INSTANCE)
;+		(allowed-classes STRAT_TREND_IMPLICATION_TO_ELEMENT_RELATION)
		(create-accessor read-write))
	(single-slot sti_label
;+		(comment "A short name for the strategic trend implication")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot sti_earliest_impact_date_iso_8601
;+		(comment "The earliest date from when the impacts of the trend implication are expected to take effect")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot sti_service_quality_impacts
;+		(comment "The service quality changes that occur if the implication is realised")
		(type INSTANCE)
;+		(allowed-classes Service_Quality_Change)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Strategy_Management)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Change_Management "Category for classes that support change management, such as programmes, projects etc."
	(is-a EA_Support)
	(role abstract)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Change_Management)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Change_Activity "An abstract parent class for change programmes, projects and project activities"
	(is-a Change_Management)
	(role abstract)
	(single-slot ca_target_end_date_iso_8601
;+		(comment "The date when a change activity is expected to be completed in ISO 8601 format (yyyy-mm-dd)")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ca_target_end_date
;+		(comment "The date when a change activity is expected to be completed")
		(type INSTANCE)
;+		(allowed-classes Time)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ca_proposed_start_date_iso_8601
;+		(comment "The date from when a change activity is expected to start in ISO 8601 format (yyyy-mm-dd)")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ca_actual_start_date
;+		(comment "The date from when a change activity actually started")
		(type INSTANCE)
;+		(allowed-classes Time)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ca_criticality
;+		(comment "Defines the relative business criticality of the change activity")
		(type INSTANCE)
;+		(allowed-classes Business_Criticality)
		(default [essential_prj_CC_v1.4.2_Instance_60025])
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ca_approval_status
;+		(comment "Represents the approval status of a change activity")
		(type INSTANCE)
;+		(allowed-classes Project_Approval_Status)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ca_forecast_end_date_iso_8601
;+		(comment "The date by when the change activity is forecast to end in ISO 8601 format (yyyy-mm-dd)")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot allocated_resources
;+		(comment "Resources (in FTEs) that have been allocated to this element")
		(type INSTANCE)
;+		(allowed-classes Resource_Allocation)
		(create-accessor read-write))
	(multislot ca_impacted_elements
		(type INSTANCE)
;+		(allowed-classes %3AEA_Graph_Relation EA_Relation EA_Class)
		(create-accessor read-write))
	(single-slot ca_proposed_start_date
;+		(comment "The date from when a change activity is expected to start")
		(type INSTANCE)
;+		(allowed-classes Time)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ca_actual_start_date_iso_8601
;+		(comment "The date from when the change activity actually started in ISO 8601 format (yyyy-mm-dd)")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ca_change_budget
;+		(comment "Used to capture the budget allocation for a change activity")
		(type INSTANCE)
;+		(allowed-classes Budget)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot ca_strategic_plans_supported
;+		(comment "The set of Strategic Plans that a change activity is supporting through its execution and the outputs that it delivers.")
		(type INSTANCE)
;+		(allowed-classes Strategic_Plan)
		(create-accessor read-write))
	(multislot ca_planned_changes
;+		(comment "The planned changes that the change activity will deliver")
		(type INSTANCE)
;+		(allowed-classes PLAN_TO_ELEMENT_RELATION)
		(create-accessor read-write))
	(multislot ca_milestones
;+		(comment "Defines the milestones associated with this change activity")
		(type INSTANCE)
;+		(allowed-classes Change_Milestone)
		(create-accessor read-write))
	(single-slot ca_target_rate_of_return
;+		(comment "Defines the target percentage rate of return for the change activity as a decimal, between 0.0 and 1.0")
		(type FLOAT)
		(range 0.0 1.0)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ca_net_present_value
;+		(comment "Defines the current value, in contrast to some future value the change activity will have when it has been completed, given the compounded target rate of return.")
		(type FLOAT)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot required_fte_resources
;+		(comment "The resources (in FTEs) required")
		(type INSTANCE)
;+		(allowed-classes Resource_Requirement)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Change_Management)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ca_forecast_end_date
;+		(comment "The date by when the change activity is forecast to end")
		(type INSTANCE)
;+		(allowed-classes Time)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Programme "Meta class to capture a programme of work"
	(is-a Change_Activity)
	(role concrete)
	(single-slot programme_business_priority
;+		(comment "Describes the relative business priority of this Programme")
		(type SYMBOL)
		(allowed-values High Medium Low)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot programme_target_end_date
;+		(comment "DEPRECATED. the target end date for the programme")
		(type INSTANCE)
;+		(allowed-classes Time)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot programme_start_date
;+		(comment "DEPRECATED. the start date for the programme")
		(type INSTANCE)
;+		(allowed-classes Time)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot projects_for_programme
;+		(comment "Slot to manage the set of Projects that are part of a Programme")
		(type INSTANCE)
;+		(allowed-classes Project)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Programme)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot programme_manager
;+		(comment "DEPRECATED. USE STAKEHOLDER SLOT. \nThe individual responsible for the delivery of the programme")
		(type INSTANCE)
;+		(allowed-classes Actor)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Project "Meta class for a change project"
	(is-a Change_Activity)
	(role concrete)
	(single-slot project_lifecycle_status
;+		(comment "Represents the lifecycle status or phase of a change project")
		(type INSTANCE)
;+		(allowed-classes Project_Lifecycle_Status)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot contained_in_programme
;+		(comment "the programme that this project is part of")
		(type INSTANCE)
;+		(allowed-classes Programme)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot project_activities
;+		(comment "the set of activities that comprise this project")
		(type INSTANCE)
;+		(allowed-classes Project_Activity)
		(create-accessor read-write))
	(single-slot project_manager
;+		(comment "DEPRECATED. USE THE STAKEHOLDERS SLOT. The individual responsible for the delivery of the project")
		(type INSTANCE)
;+		(allowed-classes Actor)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot status
;+		(comment "DEPRECATED")
		(type SYMBOL)
		(allowed-values Planned Active Complete Suspended)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot project_end_date
;+		(comment "DEPRECATED. the target end date for the project")
		(type INSTANCE)
;+		(allowed-classes Time)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot project_start_date
;+		(comment "DEPRECATED. the start date for the project")
		(type INSTANCE)
;+		(allowed-classes Time)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot project_strategic_plans_supported
;+		(comment "DEPRECATED. The set of Strategic Plans that a project is supporting through its implementation and the outputs that it delivers.")
		(type INSTANCE)
;+		(allowed-classes Strategic_Plan)
		(create-accessor read-write))
	(single-slot project_goal_state
;+		(comment "DEPRECATED: The Architecture State representing the goal configuration that this Project will produce. Include the relevant scope of architecture components. e.g. Technology Requirements are captured in the Technology Conceptual part of the Architecture State")
		(type INSTANCE)
;+		(allowed-classes Architecture_State)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot project_business_priority
;+		(comment "the relative priority of this project")
		(type SYMBOL)
		(allowed-values High Medium Low)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot project_start_state
;+		(comment "DEPRECATED: The architecture state describing the relevant starting configuration for this project. This state can cover all layers of the architecture")
		(type INSTANCE)
;+		(allowed-classes Architecture_State)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot project_technology_requirements
;+		(comment "DEPRECATED. The technology capabilities required by the solution that a project is implementing")
		(type INSTANCE)
;+		(allowed-classes Technology_Capability)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Project)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot project_technology_architecture
;+		(comment "DEPRECATED. The architecture of the technology products used for the solution that a project is implementing")
		(type INSTANCE)
;+		(allowed-classes Technology_Provider)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Project_Activity "Meta class that defines an activity that is undertaken in a change project."
	(is-a Change_Activity)
	(role concrete)
	(single-slot project_activity_end_date
;+		(comment "DEPRECATED.")
		(type INSTANCE)
;+		(allowed-classes Time)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot project_activity_label
;+		(comment "")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot project_activity_start_date
;+		(comment "DEPRECATED.")
		(type INSTANCE)
;+		(allowed-classes Time)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot contained_in_project
;+		(comment "the project that this project activity is part of")
		(type INSTANCE)
;+		(allowed-classes Project)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Project_Activity)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Initiative "A long term strategic change activity intended to meet the medium to long term transformational needs of the enterprise"
	(is-a Change_Activity)
	(role concrete)
	(multislot initiative_delivery_roadmaps
;+		(comment "The roadmap that defines the set of Strategic Plans that need to be completed to deliver the requirements of the Initiative")
		(type INSTANCE)
;+		(allowed-classes Roadmap)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Change_Management)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot initiative_business_models
;+		(comment "The Business Models that are identified as being in scope for the strategic initiative")
		(type INSTANCE)
;+		(allowed-classes Business_Model)
		(create-accessor read-write))
	(single-slot initiative_requirements_roadmap
;+		(comment "The roadmap that defines the sequence in which the Initiative’s Business Models are to be introduced to the enterprise")
		(type INSTANCE)
;+		(allowed-classes Roadmap)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Budget "Represents a set of budgetary elements that have been allocated to a project or programme over a given period of time"
	(is-a Change_Management)
	(role concrete)
	(single-slot budget_currency
;+		(comment "The currency in which the budgetary element amounts are defined")
		(type INSTANCE)
;+		(allowed-classes Currency)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot budget_for_change_activity
;+		(comment "The change activity against this budget has been allocated")
		(type INSTANCE)
;+		(allowed-classes Change_Activity)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot budget_allocated_to_element
;+		(comment "The element against which this Budget has been allocated")
		(type INSTANCE)
;+		(allowed-classes EA_Class EA_Relation %3AEA_Graph_Relation)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot budgetary_elements
;+		(comment "The budgetary elements that are associated with a budget")
		(type INSTANCE)
;+		(allowed-classes Budgetary_Element)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Budget)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot budget_category
;+		(comment "The category that defines the overall intended purpose of the budget")
		(type INSTANCE)
;+		(allowed-classes Budget_Category)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Budgetary_Element "Represents an amount of money allocated to a project or programme over a given period"
	(is-a Change_Management)
	(role abstract)
	(single-slot budget_end_date_iso_8601
;+		(comment "The end date in ISO 8601 format (yyyy-mm-dd) up to which a budgetary element is defined")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot budget_approval_status
;+		(comment "The approval status of the BUdgetary Element")
		(type INSTANCE)
;+		(allowed-classes Budget_Approval_Status)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot budget_amount
;+		(comment "The amount of money being budgeted")
		(type FLOAT)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot budgetary_element_of_budget
;+		(comment "The budget that contains this budgetary element")
		(type INSTANCE)
;+		(allowed-classes Budget)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot budgetary_element_for_cost_component_types
;+		(comment "The types of cost for which this budgetary element has been allocated")
		(type INSTANCE)
;+		(allowed-classes Cost_Component_Type)
		(create-accessor read-write))
	(single-slot budget_start_date_iso_8601
;+		(comment "The start date in ISO 8601 format (yyyy-mm-dd) from which a budgetary element is defined")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Budgetary_Element)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Annual_Budgetary_Element "Represents an amount of money allocated to a project or programme for a given year"
	(is-a Budgetary_Element)
	(role concrete)
	(single-slot budget_year_iso_8601
;+		(comment "The year for which a budgetary element is defined in ISO 8601 format (yyyy)")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot budget_year
;+		(comment "The year for which a budgetary element is defined")
		(type INSTANCE)
;+		(allowed-classes Year)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Budgetary_Element)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Quarterly_Budgetary_Element "Represents an amount of money allocated to a project or programme for a 3 month period (i.e. quarter) in a year"
	(is-a Budgetary_Element)
	(role concrete)
	(single-slot budget_quarter_iso_8601
;+		(comment "The start date for a quarter in ISO 8601 format (yyyy-mm-dd) for which a quarterly budgetary element is defined")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot budget_quarter
;+		(comment "The year and quarter for which a quarterly budgetary element is defined")
		(type INSTANCE)
;+		(allowed-classes Quarter)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Budgetary_Element)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Adhoc_Budgetary_Element "Represents an amount of money allocated to a project or programme over an ad-hoc period of time"
	(is-a Budgetary_Element)
	(role concrete)
	(single-slot budget_start_date
;+		(comment "The start date from which a budgetary element is defined")
		(type INSTANCE)
;+		(allowed-classes Gregorian)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot budget_end_date
;+		(comment "The end date up to which a budgetary element is defined")
		(type INSTANCE)
;+		(allowed-classes Gregorian)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Budgetary_Element)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Monthly_Budgetary_Element "A component of a budget that is allocated on a monthly basis"
	(is-a Budgetary_Element)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Budgetary_Element)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Change_Milestone "Represents a milestone for change activities"
	(is-a Change_Management)
	(role concrete)
	(single-slot cm_date_iso_8601
;+		(comment "The date for the milestone in ISO 8601 format (yyyy-mm-dd)")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Change_Management)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot cm_change_activity
;+		(comment "The change activity with which this miletsone is associated")
		(type INSTANCE)
;+		(allowed-classes Change_Activity)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot cm_date
;+		(comment "The date for the milestone")
		(type INSTANCE)
;+		(allowed-classes Time)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass Standards_Management "Category for classes that support the management of architecture standards"
	(is-a EA_Support)
	(role abstract)
	(single-slot sm_standard_strength
;+		(comment "Slot to capture the strength of the standard in terms of values such as Mandatory, Recommended, Permitted.")
		(type INSTANCE)
;+		(allowed-classes Standard_Strength)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot sm_geographic_scope
;+		(comment "The geograpghic scope for which a standard should be applied")
		(type INSTANCE)
;+		(allowed-classes Geographic_Region Geographic_Location)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot sm_organisational_scope
;+		(comment "The organisational scope for which a standard should be applied")
		(type INSTANCE)
;+		(allowed-classes Group_Actor)
		(create-accessor read-write)))

(defclass Business_Standards_Management "Category for classes that support the definition and maintenance of business architecture standards"
	(is-a Standards_Management)
	(role abstract)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Business_Process_Standard_Specification "Specifies a standard business process that should be adopted to deliver a given business capability"
	(is-a Business_Standards_Management)
	(role concrete)
	(single-slot bps_standardised_business_capability
;+		(comment "The business capability for which the business process standard has been defined")
		(type INSTANCE)
;+		(allowed-classes Business_Capability)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot name_
;+		(comment "A descriptive name of the element in the model.\\n(NOTE: A unique, internal reference is managed separately by the system.)")
		(type STRING)
		(default "<ORG/GEO SCOPE>:<BUSINESS CAPABILITY NAME> Standard - <BUSINESS PROCESS NAME>")
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot bps_standard_business_process
;+		(comment "A business process defined as the standards for the related business capability")
		(type INSTANCE)
;+		(allowed-classes Business_Process_Type)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Physical_Process_Standard_Specification "Specifies a standard physical process representing a business process that should be performed by a specific organisation"
	(is-a Business_Standards_Management)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot pps_standard_physical_process
;+		(comment "Defines the physical process representing a business process performed by a specific organisation as a standard")
		(type INSTANCE)
;+		(allowed-classes Physical_Process_Type)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass Business_Operating_Model_Standard_Specification "Specifies a Group Business Role as the anchor point for a blueprint that provides a logical representation of a standard business operating model in terns of organisational structure, processes performed, supporting application services and required technology components"
	(is-a Business_Standards_Management)
	(role concrete)
	(single-slot boms_standard_group_business_role
;+		(comment "Defines the logical Group Business Role that is the anchor point for the Business Operating Model standard")
		(type INSTANCE)
;+		(allowed-classes Group_Business_Role)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Business_Reference_Modelling "A collection of classes that support the definition of logical business architecture blueprints that can be used as a starting point for the design and implementation of organisations"
	(is-a Business_Standards_Management)
	(role abstract)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Business_Reference_Architecture "A logical Business Architecture blueprint that can comprise business processes and other Business Reference Architectures"
	(is-a Business_Reference_Modelling)
	(role concrete)
	(multislot business_reference_architecture_dependencies
;+		(comment "The dependencies that exist between the business processes that comprise the Business Reference Architecture")
		(type INSTANCE)
;+		(allowed-classes %3ABusiness-Ref-Arch-Model-Relation)
		(create-accessor read-write))
	(single-slot bra_supporting_app_reference_architectures
;+		(comment "The Application Reference Architectures that support this Business Reference Architecture")
		(type INSTANCE)
;+		(allowed-classes)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot business_reference_architecture_elements
;+		(comment "The usages of Business Processes that comprise the Business Reference Architecure")
		(type INSTANCE)
;+		(allowed-classes Business_Reference_Architecture_Type)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Business_Reference_Architecture_Type "Usages of the logical business elements that can comprise Business Reference Architectures"
	(is-a Business_Reference_Modelling)
	(role abstract)
	(single-slot bramt_used_in_business_reference_architecture
;+		(comment "The Business Reference Architecture Model in which this usage of a Business Process is used")
		(type INSTANCE)
;+		(allowed-classes Business_Reference_Architecture)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot usage_label
;+		(comment "The label for this usage")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Business_Process_Reference_Usage "The usage of a Business Process in the context of a Business Reference Architecture"
	(is-a Business_Reference_Architecture_Type)
	(role concrete)
	(single-slot bpru_usage_of_business_process
;+		(comment "The Business Process that is being used as part of a Business Reference Architecure Model")
		(type INSTANCE)
;+		(allowed-classes Business_Process_Type)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Business_Reference_Architecture_Usage "The usage of a Business Reference Architecture in the context of another Business Reference Architecture"
	(is-a Business_Reference_Architecture_Type)
	(role concrete)
	(single-slot brau_usage_of_business_reference_architecture
;+		(comment "The Business Reference Architecture that is being used in the context of another Business Reference Architecture")
		(type INSTANCE)
;+		(allowed-classes Business_Reference_Architecture)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Application_Standards_Management "Category for classes that support the definition and maintenance of application architecture standards"
	(is-a Standards_Management)
	(role abstract)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Application_Provider_Standard_Specification "Specifies a standard application provider that should be adopted to implement a given application service"
	(is-a Application_Standards_Management)
	(role concrete)
	(multislot aps_standard_usage
;+		(comment "Defines the business processes for which this application standard should be applied")
		(type INSTANCE)
;+		(allowed-classes Business_Process_Type)
		(create-accessor read-write))
	(single-slot aps_standard_app_provider_role
;+		(comment "The application provider role that has been defined as a standard")
		(type INSTANCE)
;+		(allowed-classes Application_Provider_Role)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot name_
;+		(comment "A descriptive name of the element in the model.\\n(NOTE: A unique, internal reference is managed separately by the system.)")
		(type STRING)
		(default "<ORG/GEO SCOPE>:<APPLICATION SERVICE NAME> Standard - <APPLICATION PROVIDER NAME>")
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Application_Reference_Modelling "A collection of classes that support the definition of logical application architecture blueprints that can be used as a starting point for the design and implementation of IT-driven business solutions"
	(is-a Application_Standards_Management)
	(role abstract)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Application_Reference_Architecture "A logical Application Architecture blueprint describing a 'pure' design of Application Services that collectivley deliver a coherent set of functionality to the business"
	(is-a Application_Reference_Modelling)
	(role concrete)
	(multislot application_reference_architecture_elements
;+		(comment "The elements that comprise the Application Reference Architecture")
		(type INSTANCE)
;+		(allowed-classes Application_Reference_Architecture_Type)
		(create-accessor read-write))
	(multislot ara_realised_by_app_reference_implementations
;+		(comment "The Application Reference Implementations that realise this Application Reference Architecture")
		(type INSTANCE)
;+		(allowed-classes Application_Reference_Implementation)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Application_Reference_Architecture_Type "Usages of the logical application elements that can comprise Application Reference Architectures"
	(is-a Application_Reference_Modelling)
	(role abstract)
	(single-slot arat_used_in_application_reference_architecture
;+		(comment "The Application Reference Architecture in which this element is used")
		(type INSTANCE)
;+		(allowed-classes Application_Reference_Architecture)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot usage_label
;+		(comment "The label for this usage")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Reference_Application_Service_Usage "The usage of an Application Service in the context of an Application Reference Architecture"
	(is-a Application_Reference_Architecture_Type)
	(role concrete)
	(single-slot asru_usage_of_application_service
;+		(comment "The Application Service that is being used in the Applicaton Reference Architecture")
		(type INSTANCE)
;+		(allowed-classes Application_Service)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Application_Reference_Implementation "A logical Application Architecture blueprint describing an 'implementation' design of Applications that together provide the functionality defined in one or more Application Reference Architectures"
	(is-a Application_Reference_Modelling)
	(role concrete)
	(multislot ari_realises_app_reference_architectures
;+		(comment "The Application Reference Architectures that are realised by this Application Reference Implementation")
		(type INSTANCE)
;+		(allowed-classes Application_Reference_Architecture)
		(create-accessor read-write))
	(multislot application_reference_implementation_elements
;+		(comment "The elements that comprise the Application Reference Implementation Model")
		(type INSTANCE)
;+		(allowed-classes Application_Reference_Implementation_Type)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot application_reference_implementation_dependencies
;+		(comment "The dependencies that exist between elements used in the Application Reference Implemenation Model")
		(type INSTANCE)
;+		(allowed-classes %3AApplication-Ref-Impl-Model-Relation)
		(create-accessor read-write)))

(defclass Application_Reference_Implementation_Type "Usages of the logical application elements that can comprise Application Reference Implementations"
	(is-a Application_Reference_Modelling)
	(role abstract)
	(single-slot usage_label
;+		(comment "The label for this usage")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot arimt_used_in_application_reference_implementation
;+		(comment "The Application Reference Implementation Model in which this element is used")
		(type INSTANCE)
;+		(allowed-classes Application_Reference_Implementation)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass Application_Provider_Reference_Usage "The usage of an Application Provider in the context of an Application Reference Implementation"
	(is-a Application_Reference_Implementation_Type)
	(role concrete)
	(single-slot apru_usage_of_application_provider
;+		(comment "The Application that is being used in an Application Reference Implementation Model")
		(type INSTANCE)
;+		(allowed-classes Application_Provider_Role)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Application_Reference_Implementation_Usage "The usage of an Application Reference Implementation in the context of another Reference Application Implementation"
	(is-a Application_Reference_Implementation_Type)
	(role concrete)
	(single-slot ariu_usage_of_app_reference_implementation
;+		(comment "The Application Reference Implementation that is being used as part of another Application Reference Implementation")
		(type INSTANCE)
;+		(allowed-classes Application_Reference_Implementation)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Technology_Standards_Management "Category for classes that support the definition and maintenance of technology architecture standards"
	(is-a Standards_Management)
	(role abstract)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Technology_Provider_Standard_Specification "Specifies a standard technology provider that should be adopted to implement a given technology component"
	(is-a Technology_Standards_Management)
	(role concrete)
	(single-slot name_
;+		(comment "A descriptive name of the element in the model.\\n(NOTE: A unique, internal reference is managed separately by the system.)")
		(type STRING)
		(default "<ORG/GEO SCOPE>:<TECHNOLOGY COMPONENT NAME> Standard - <TECHNOLOGY PRODUCT NAME>")
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot tps_standard_usage
;+		(comment "Defines the types of application service for which his technology standard should be applied")
		(type INSTANCE)
;+		(allowed-classes Application_Service)
		(create-accessor read-write))
	(single-slot tps_standard_tech_provider_role
;+		(comment "The technology provider role that has been defined as a standard")
		(type INSTANCE)
;+		(allowed-classes Technology_Provider_Role)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Info_Data_Standards_Management "The category for classes that support the definition and maintenance of information and data standards"
	(is-a Standards_Management)
	(role abstract)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Info_Data_Standards_Management)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Info_Data_Standard "A Data Standard is a collection of specifications that describes the required content and format in which a particular set of Data Objects and/or Data Object Attributes are to be stored, presented and exchanged"
	(is-a Info_Data_Standards_Management)
	(role concrete)
	(multislot info_view_standard_specs
;+		(comment "The set of Information View Standard Specifications associated with the Data Standard")
		(type INSTANCE)
;+		(allowed-classes Info_View_Standard_Specification)
		(create-accessor read-write))
	(multislot data_standard_service_qualities
;+		(comment "The set of service qualities for the Data Standard.")
		(type INSTANCE)
;+		(allowed-classes Service_Quality_Value)
		(create-accessor read-write))
	(multislot data_object_att_standard_specs
;+		(comment "The set of Data Object Attribute Standard Specifications associated with the Data Standard")
		(type INSTANCE)
;+		(allowed-classes Data_Object_Attribute_Standard_Specification)
		(create-accessor read-write))
	(multislot data_standard_related_information
;+		(comment "The set of Information Views and Representations that are related to this Data Standard")
		(type INSTANCE)
;+		(allowed-classes Information_Representation_Type Information_View)
		(create-accessor read-write))
	(multislot data_standard_allowed_formats
;+		(comment "Defines the technology formats that are permitted for this information/data standard")
		(type INSTANCE)
;+		(allowed-classes Technology_Product_Role)
		(create-accessor read-write))
	(single-slot data_standard_owning_organisation
;+		(comment "DEPRECATED. USE STAKEHOLDERS SLOT. Captures the organisation that is responsible for governing the Data Standard")
		(type INSTANCE)
;+		(allowed-classes ACTOR_TO_ROLE_RELATION)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot data_standard_user_roles
;+		(comment "Slot to capture the set of user roles that make use of a Data Standard.")
		(type INSTANCE)
;+		(allowed-classes Business_Role)
		(create-accessor read-write))
	(single-slot data_standard_custodian
;+		(comment "DEPRECATED. USE STAKEHOLDERS SLOT. Captures the individual that is responsible for managing the Data Standard on behalf of the owning organisation")
		(type INSTANCE)
;+		(allowed-classes ACTOR_TO_ROLE_RELATION)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot data_standard_relationships
;+		(comment "The set of relationships between that a Data Standard has with other Data Standards")
		(type INSTANCE)
;+		(allowed-classes Info_Data_Standard_Relationship)
		(create-accessor read-write))
	(multislot data_standard_allowed_protocols
;+		(comment "Defines the technology protocols that are permitted for transmitting information/data for this standard")
		(type INSTANCE)
;+		(allowed-classes Technology_Protocol)
		(create-accessor read-write))
	(multislot data_standard_reference_implementations
;+		(comment "Reference implementations for how the Data Standard should be applied")
		(type INSTANCE)
;+		(allowed-classes Application_Provider)
		(create-accessor read-write))
	(multislot data_object_standard_specs
;+		(comment "The set of Data Object Standard Specifications associated with the Data Standard")
		(type INSTANCE)
;+		(allowed-classes Data_Object_Standard_Specification)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Info_Data_Standards_Management)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Info_Data_Standard_Relationship "Defines relationships between Data Standards with the attributes of that relationship. e.g. The relationship type slot defines the nature of the relationship."
	(is-a Info_Data_Standards_Management)
	(role concrete)
	(single-slot to_data_standard_relation
;+		(comment "The Data Standard that is the target (to end) of the relationship")
		(type INSTANCE)
;+		(allowed-classes Info_Data_Standard)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot data_standard_relation_type
;+		(comment "Describes the nature of the relationship between the two Data Standards that are being related")
		(type INSTANCE)
;+		(allowed-classes Data_Standard_Relationship_Type)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Info_Data_Standards_Management)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot from_data_standard_relation
;+		(comment "The Data Standard from which the relationship starts")
		(type INSTANCE)
;+		(allowed-classes Info_Data_Standard)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass Data_Object_Standard_Specification "A Data Object Standard Specification provides a standard semantic definition of a particular Data Object as well as relationships to any standards associated with specific attributes of the Data Object"
	(is-a Info_Data_Standards_Management)
	(role concrete)
	(multislot compliant_deployments
;+		(comment "The deployed physical data objects that comply with a Data Standard.")
		(type INSTANCE)
;+		(allowed-classes Physical_Data_Object)
		(create-accessor read-write))
	(multislot supporting_doa_standard_specs
;+		(comment "The set of related Data Object Attribute Standard Specifications")
		(type INSTANCE)
;+		(allowed-classes Data_Object_Attribute_Standard_Specification)
		(create-accessor read-write))
	(single-slot data_object_standard_name
;+		(comment "This is the name that this standard uses for the associated logical Data Object")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot doss_parent_data_standard
;+		(comment "The parent Data Standard for this specification")
		(type INSTANCE)
;+		(allowed-classes Info_Data_Standard)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot data_object_standard_definition
;+		(comment "This is the semantic definition that this standard uses for the associated logical Data Object")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot compliant_implementations
;+		(comment "Describes the Data_Representations that comply with the standard and can be used to implement the Data Object Standard")
		(type INSTANCE)
;+		(allowed-classes Data_Representation)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Info_Data_Standards_Management)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot standard_spec_for_data_object
;+		(comment "The Data Object against which this standard specification is defined")
		(type INSTANCE)
;+		(allowed-classes Data_Object)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass Data_Object_Attribute_Standard_Specification "A Data Object Attribute Standard Specification provides a standard semantic definition of a particular Data Object Attribute as well as the required content and format in which the attribute should be stored, presented and exchanged"
	(is-a Info_Data_Standards_Management)
	(role concrete)
	(single-slot data_object_attribute_standard_definition
;+		(comment "")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot data_object_attribute_standard_name
;+		(comment "")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot standard_spec_for_data_object_att
;+		(comment "The Data Object Atribute against which this standard specification is defined")
		(type INSTANCE)
;+		(allowed-classes Data_Object_Attribute)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Info_Data_Standards_Management)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot doass_parent_data_standard
;+		(comment "The parent Data Standard for this specification")
		(type INSTANCE)
;+		(allowed-classes Info_Data_Standard)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot parent_data_object_standard_spec
;+		(comment "The Data Object Standard Specification that is the parent of this specification")
		(type INSTANCE)
;+		(allowed-classes Data_Object_Standard_Specification)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Info_View_Standard_Specification "Specifies a standard information representation that should be used to provide a given information view"
	(is-a Info_Data_Standards_Management)
	(role concrete)
	(multislot ivs_standard_usage
;+		(comment "Defines the business processes for which this information standard should be applied")
		(type INSTANCE)
;+		(allowed-classes Business_Process_Type)
		(create-accessor read-write))
	(single-slot name_
;+		(comment "A descriptive name of the element in the model.\\n(NOTE: A unique, internal reference is managed separately by the system.)")
		(type STRING)
		(default "<ORG/GEO SCOPE>:<INFORMATION VIEW NAME> Standard - <INFORMATION REPRESENTATION NAME>")
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot ivs_standardised_info_view
;+		(comment "Select the information view that is being standardised")
		(type INSTANCE)
;+		(allowed-classes Information_View)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot ivs_parent_data_standard
;+		(comment "Defines the Information/Data to which this specification belongs")
		(type INSTANCE)
;+		(allowed-classes Info_Data_Standard)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ivs_standard_info_rep
;+		(comment "The information representation that is a standard for the information view")
		(type INSTANCE)
;+		(allowed-classes Information_Representation)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Info_Data_Standards_Management)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Governance "Category for classes that support governance across architecture layers"
	(is-a EA_Support)
	(role abstract)
	(single-slot governance_reference
;+		(comment "Reference identifier for all governance instances")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Policy "Category for classes managing policies across all the architecture layers."
	(is-a Governance)
	(role abstract)
	(multislot policy_controls
;+		(comment "The Controls that have been established to ensure compliance with the Policy")
		(type INSTANCE)
;+		(allowed-classes Control)
		(create-accessor read-write))
	(single-slot policy_implications
;+		(comment "Describes the implications of applying the policy for the enterprise")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot policy_rationale
;+		(comment "Describes the reasons why the Policy has been put in place")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Business_Management_Policy "Represents the definition and assignment of a responsibilities (e.g. owner) for a management policy related to one or more business related elements."
	(is-a Policy)
	(role concrete)
	(multislot bmp_assigned_business_elements
;+		(comment "Describes the Business element to which this policy applies")
		(type INSTANCE)
;+		(allowed-classes Business_Role Product_Type Business_Process_Type Business_Role_Type Physical_Process_Type Channel Product Product_Concept Business_Capability Site_Category Brand Product_Feature Business_Domain Site Actor)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(multislot bmp_responsible_roles
;+		(comment "The roles that are responsible for adherence to this policy")
		(type INSTANCE)
;+		(allowed-classes Business_Role)
		(create-accessor read-write))
	(single-slot bmp_escalation_policy
;+		(comment "Describes the Business Management Policy to which this policy escalates issues or conflicts")
		(type INSTANCE)
;+		(allowed-classes Business_Management_Policy)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Info_Data_Management_Policy "Represents the assignment of a specific data management responsibility (e.g. owner, steward) for a Data Object to one or more Business Roles. This class effectively describes the logical design of the Data Governance Structure"
	(is-a Policy)
	(role concrete)
	(single-slot dmp_reponsibility_aspect
;+		(comment "Defines the aspect of data governance for which the policy is being defined")
		(type INSTANCE)
;+		(allowed-classes InfoData_Responsibilty_Aspect)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot dmp_escalation_policy
;+		(comment "Describes the Data Management Responsibility to which thisresponsibility escalates issues or conflicts")
		(type INSTANCE)
;+		(allowed-classes Info_Data_Management_Policy)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot dmp_responsible_roles
;+		(comment "The Business Roles that have been assigned the data management responsibility for the data object")
		(type INSTANCE)
;+		(allowed-classes Business_Role Actor)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(single-slot dmp_responsibility
;+		(comment "The data management responsibility being assigned")
		(type INSTANCE)
;+		(allowed-classes Business_Role Group_Actor)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot dmp_assigned_info_data_object
;+		(comment "The information view or data object to which the responsibility is being assigned")
		(type INSTANCE)
;+		(allowed-classes Data_Object Information_View_Type)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Info_Data_Management_Policy)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot dmp_org_scope
;+		(comment "Defines the organisatonal scope for which the policy os relevant")
		(type INSTANCE)
;+		(allowed-classes Group_Actor)
		(create-accessor read-write)))

(defclass Record_Management_Policy "Specialisation of the Information / Data Management Policy used to define Records Management polices and retention schedules for Records defined by Information Views. Information Representations and Information Stores inherit the policy from the Views that they realise."
	(is-a Info_Data_Management_Policy)
	(role concrete)
	(single-slot retention_period
;+		(comment "The retention period that applies in this records management policy.")
		(type INSTANCE)
;+		(allowed-classes Retention_Period)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Info_Data_Management_Policy)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Application_Management_Policy "Represents the definition and assignment of responsibilities (e.g. owner) for a management policy related to one or more Application related elements."
	(is-a Policy)
	(role concrete)
	(single-slot amp_escalation_policy
;+		(comment "Describes the Application Management Policy to which this policy escalates issues or conflicts")
		(type INSTANCE)
;+		(allowed-classes Application_Management_Policy)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot amp_responsible_roles
;+		(comment "The roles that are responsible for adherence to this policy")
		(type INSTANCE)
;+		(allowed-classes Business_Role)
		(create-accessor read-write))
	(multislot amp_assigned_application_elements
;+		(comment "The application elements to which this policy applies")
		(type INSTANCE)
;+		(allowed-classes Application_Function Application_Deployment Application_Service Software_Component Application_Deployment_Group Application_Family Application_Provider_Type)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Technology_Management_Policy "Represents the definition and assignment of responsibilities (e.g. owner) for a management policy related to one or more Technology related elements."
	(is-a Policy)
	(role concrete)
	(multislot tmp_responsible_roles
;+		(comment "The roles that are responsible for adherence to this policy")
		(type INSTANCE)
;+		(allowed-classes Business_Role)
		(create-accessor read-write))
	(single-slot tmp_escalation_policy
;+		(comment "Describes the Technology Management Policy to which this policy escalates issues or conflicts")
		(type INSTANCE)
;+		(allowed-classes Technology_Management_Policy)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot tmp_assigned_technology_elements
;+		(comment "The technology elements to which this policy applies")
		(type INSTANCE)
;+		(allowed-classes Technology_Node Technology_Deployment_Group Technology_Instance Technology_Domain Technology_Protocol Technology_Function Technology_Product_Family Technology_Provider Technology_Capability Technology_Provider_Role)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Security_Policy "Models how the enterprise will protect one or more resources. Security Policies define how security SHOULD be applied to the specified resources."
	(is-a Policy)
	(role concrete)
	(single-slot sp_action
;+		(comment "An action that the Business Role, Actor or Security Clearance Level can make against the secured resource")
		(type INSTANCE)
;+		(allowed-classes Secured_Action)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot sp_resources
;+		(comment "The resources against which the Security Policy is defined")
		(type INSTANCE)
;+		(allowed-classes Business_Role Business_Process_Type Site Information_View_Type Data_Object_Type Technology_Node Security_Classification Data_Representation_Type Information_Representation_Type)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(multislot sp_realises_principles
;+		(comment "The Security Principles that this security policies realises")
		(type INSTANCE)
;+		(allowed-classes Security_Principle)
		(create-accessor read-write))
	(single-slot sp_implements_security_capability
;+		(comment "The security capability that this Security Policy implements")
		(type INSTANCE)
;+		(allowed-classes Security_Capability)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot sp_actor
;+		(comment "Defines a Business Role, Actor or Security Clearance Level to which the Security Policy applies")
		(type INSTANCE)
;+		(allowed-classes Business_Role Actor Security_Clearance_Level)
		(create-accessor read-write)))

(defclass Exception "Category for classes managing exceptions to policy and / or standards across all the architecture layers."
	(is-a Governance)
	(role abstract)
	(multislot exception_resolution_plan
;+		(comment "Relationship to the Strategic Plan(s) that will bring the elements related to the exception back into line with the Policy or Standard.")
		(type INSTANCE)
;+		(allowed-classes Strategic_Plan)
		(create-accessor read-write))
	(single-slot exception_to_policy
;+		(comment "Relationship to the policy for which this is an exception.")
		(type INSTANCE)
;+		(allowed-classes Policy)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot exception_expiry_date_iso_8601
;+		(comment "The date on which this exception expires in ISO 8601 format (yyyy-mm-dd)")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot exception_to_standard
;+		(comment "Relationship to the Standard for which this is an exception.")
		(type INSTANCE)
;+		(allowed-classes Standards_Management)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot exception_expiry_date
;+		(comment "The date on which this exception expires")
		(type INSTANCE)
;+		(allowed-classes Time)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot exception_granted_date
;+		(comment "The date on which the exception was granted.")
		(type INSTANCE)
;+		(allowed-classes Time)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot exception_for_elements
;+		(comment "Relationship to the element(s) for which the exception is granted.")
		(type INSTANCE)
;+		(allowed-classes EA_Class %3AEA_Graph_Relation EA_Relation)
		(create-accessor read-write))
	(single-slot exception_granted_date_iso_8601
;+		(comment "The date on which the exception was granted in ISO 8601 format (yyyy-mm-dd)")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Business_Exception "Class to manage exceptions for elements from the Business Layer of the architecture."
	(is-a Exception)
	(role concrete)
	(single-slot exception_to_policy
;+		(comment "Relationship to the policy for which this is an exception.")
		(type INSTANCE)
;+		(allowed-classes Business_Management_Policy)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot exception_to_standard
;+		(comment "Relationship to the Standard for which this is an exception.")
		(type INSTANCE)
;+		(allowed-classes Business_Standards_Management)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot exception_for_elements
;+		(comment "Relationship to the element(s) for which the exception is granted.")
		(type INSTANCE)
;+		(allowed-classes Business_Layer %3ABusiness_Relationship Business_Relationship)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Application_Exception "Class to manage exceptions for elements from the Application Layer of the architecture."
	(is-a Exception)
	(role concrete)
	(single-slot exception_to_policy
;+		(comment "Relationship to the policy for which this is an exception.")
		(type INSTANCE)
;+		(allowed-classes Application_Management_Policy)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot exception_to_standard
;+		(comment "Relationship to the Standard for which this is an exception.")
		(type INSTANCE)
;+		(allowed-classes Application_Standards_Management)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot exception_for_elements
;+		(comment "Relationship to the element(s) for which the exception is granted.")
		(type INSTANCE)
;+		(allowed-classes %3AApplication_Relationship Application_Relationship Application_Layer)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Information_Exception "Class to manage exceptions for elements from the Information Layer of the architecture."
	(is-a Exception)
	(role concrete)
	(single-slot exception_to_policy
;+		(comment "Relationship to the policy for which this is an exception.")
		(type INSTANCE)
;+		(allowed-classes Info_Data_Management_Policy)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot exception_to_standard
;+		(comment "Relationship to the Standard for which this is an exception.")
		(type INSTANCE)
;+		(allowed-classes Info_Data_Standards_Management)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot exception_for_elements
;+		(comment "Relationship to the element(s) for which the exception is granted.")
		(type INSTANCE)
;+		(allowed-classes Information_Relationship Information_Layer %3AInformation_Relationship)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Technology_Exception "Class to manage exceptions for elements from the Technology Layer of the architecture."
	(is-a Exception)
	(role concrete)
	(single-slot exception_to_policy
;+		(comment "Relationship to the policy for which this is an exception.")
		(type INSTANCE)
;+		(allowed-classes Technology_Management_Policy)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot exception_to_standard
;+		(comment "Relationship to the Standard for which this is an exception.")
		(type INSTANCE)
;+		(allowed-classes Technology_Standards_Management)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot exception_for_elements
;+		(comment "Relationship to the element(s) for which the exception is granted.")
		(type INSTANCE)
;+		(allowed-classes Technology_Layer %3ATechnology_Relationship)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Security_Exception "Class to manage exceptions security policy or standards."
	(is-a Exception)
	(role concrete)
	(single-slot exception_to_policy
;+		(comment "Relationship to the policy for which this is an exception.")
		(type INSTANCE)
;+		(allowed-classes Security_Policy)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Decision "Category of classes that manage the governance decisions that have been across the architecture layers."
	(is-a Governance)
	(role abstract)
	(single-slot decision_made_by_actor
;+		(comment "Relationship to the Actor that has made the decision")
		(type INSTANCE)
;+		(allowed-classes Actor)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot decision_from_meeting
;+		(comment "Defines the Governance Meeting in which the decision was made")
		(type INSTANCE)
;+		(allowed-classes Governance_Meeting)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot decision_comments
;+		(comment "Slot to manage one or more comments about the decision.")
		(type INSTANCE)
;+		(allowed-classes Commentary)
		(create-accessor read-write))
	(multislot decision_context
;+		(comment "The context in which the decision was made, e.g. a Project, a Strategic Plan, a Principle")
		(type INSTANCE)
;+		(allowed-classes EA_Class EA_Relation)
		(create-accessor read-write))
	(single-slot decision_date
;+		(comment "The date capturing when the decision was made.")
		(type INSTANCE)
;+		(allowed-classes Time)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot decision_elements
;+		(comment "The elements that are the subject of the decision.")
		(type INSTANCE)
;+		(allowed-classes %3AEA_Graph_Relation EA_Relation EA_Class)
		(create-accessor read-write))
	(single-slot decision_date_iso_8601
;+		(comment "The date capturing when the decision was made in ISO 8601 format (yyyy-mm-dd)")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot decision_result
;+		(comment "Defines the fundamental outcome of the Decision")
		(type INSTANCE)
;+		(allowed-classes Decision_Result)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot decision_type
;+		(comment "Defines the nature of the Decision that was made, e.g. e.g. Data Standards Review, Project Prioritisation")
		(type INSTANCE)
;+		(allowed-classes Decision_Type)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Business_Decision "Class to manage decisions that are made about elements from the Business Layer."
	(is-a Decision)
	(role concrete)
	(multislot decision_elements
;+		(comment "The elements that are the subject of the decision.")
		(type INSTANCE)
;+		(allowed-classes Business_Relationship Business_Layer %3ABusiness_Relationship)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Application_Decision "Class to manage decisions that are made about elements from the Application Layer."
	(is-a Decision)
	(role concrete)
	(multislot decision_elements
;+		(comment "The elements that are the subject of the decision.")
		(type INSTANCE)
;+		(allowed-classes %3AApplication_Relationship Application_Relationship Application_Layer)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Information_Decision "Class to manage decisions that are made about elements from the Information Layer."
	(is-a Decision)
	(role concrete)
	(multislot decision_elements
;+		(comment "The elements that are the subject of the decision.")
		(type INSTANCE)
;+		(allowed-classes Information_Relationship Information_Layer %3AInformation_Relationship)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Technology_Decision "Class to manage decisions that are made about elements from the Technology Layer."
	(is-a Decision)
	(role concrete)
	(multislot decision_elements
;+		(comment "The elements that are the subject of the decision.")
		(type INSTANCE)
;+		(allowed-classes Technology_Layer %3ATechnology_Relationship)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Enterprise_Decision "Class to manage decisions that are made about elements from any aspect of the architecture."
	(is-a Decision)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Control "Activities implemented by management that are designed to eliminate or reduce risk, and thereby provide reasonable assurance regarding the achivement of objectives."
	(is-a Governance)
	(role concrete)
	(single-slot control_assessment_frequency
;+		(comment "The frequency in which the Control should be assessed")
		(type INSTANCE)
;+		(allowed-classes Control_Assessment_Frequency)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot control_index
;+		(comment "Allows for sequencing of controls")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot control_weighting
;+		(comment "A relative weighting score that applies to the Control")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot control_supported_by_information
;+		(comment "DEPRECATED: The information elements that support the implementation of this control\\n\\nSUPERCEDED BY: control_implemented_by_solutions")
		(type INSTANCE)
;+		(allowed-classes Information_Layer)
		(create-accessor read-write))
	(multislot control_related_technology
;+		(comment "DEPRECATED: The set of technology elements that are related to the control\\n\\nSUPERCEDED BY: controlled_elements")
		(type INSTANCE)
;+		(allowed-classes Technology_Layer)
		(create-accessor read-write))
	(multislot control_implemented_by_solutions
;+		(comment "The business, information and/or IT solutions that are in place to implement this control")
		(type INSTANCE)
;+		(allowed-classes Control_Solution)
		(create-accessor read-write))
	(multislot control_related_support
;+		(comment "DEPRECATED: The set of management elements that are related to the control\\n\\nSUPERCEDED BY: controlled_elements")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
		(create-accessor read-write))
	(multislot control_related_information
;+		(comment "DEPRECATED: The set of information/data elements that are related to the control\\n\\nSUPERCEDED BY: controlled_elements")
		(type INSTANCE)
;+		(allowed-classes Information_Layer)
		(create-accessor read-write))
	(multislot control_supported_by_business
;+		(comment "DEPRECATED:  The business elements that support the implementation of this control\\n\\nSUPERCEDED BY: control_implemented_by_solutions")
		(type INSTANCE)
;+		(allowed-classes Business_Layer)
		(create-accessor read-write))
	(multislot controlled_elements
		(type INSTANCE)
;+		(allowed-classes CONTROL_TO_ELEMENT_RELATION)
		(create-accessor read-write))
	(multislot control_supported_by_application
;+		(comment "DEPRECATED: The application elements that support the implementation of this control\\n\\nSUPERCEDED BY: control_implemented_by_solutions")
		(type INSTANCE)
;+		(allowed-classes Application_Layer)
		(create-accessor read-write))
	(multislot control_related_policy
;+		(comment "Relationship to the Policies that is being implemented by this Control")
		(type INSTANCE)
;+		(allowed-classes Policy)
		(create-accessor read-write))
	(multislot control_related_business
;+		(comment "DEPRECATED: The set of business elements that are related to the control\\n\\nSUPERCEDED BY: controlled_elements")
		(type INSTANCE)
;+		(allowed-classes Business_Layer)
		(create-accessor read-write))
	(multislot control_supported_by_technology
;+		(comment "DEPRECATED: The technology elements that support the implementation of this control\\n\\nSUPERCEDED BY: control_implemented_by_solutions")
		(type INSTANCE)
;+		(allowed-classes Technology_Layer)
		(create-accessor read-write))
	(multislot control_related_risk
;+		(comment "The set of risks that are mitigated by this control")
		(type INSTANCE)
;+		(allowed-classes Risk)
		(create-accessor read-write))
	(multislot control_assessments
;+		(comment "DEPRECATED: One or more assessments of the operation of the Control\\n\\nSUPERCEDED BY: controlled_elements")
		(type INSTANCE)
;+		(allowed-classes Control_Assessment)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot control_related_application
;+		(comment "DEPRECATED: The set of application elements that are related to the control\\n\\nSUPERCEDED BY: controlled_elements")
		(type INSTANCE)
;+		(allowed-classes Application_Layer)
		(create-accessor read-write))
	(single-slot control_group
;+		(comment "The category for the control")
		(type INSTANCE)
;+		(allowed-classes Control_Group)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Control_Assessment "Class to capture assessments of elements against a Control."
	(is-a Governance)
	(role concrete)
	(single-slot assessment_date
;+		(comment "The date on which the assessment was performed")
		(type INSTANCE)
;+		(allowed-classes Time)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot assessment_date_iso_8601
;+		(comment "The date on which the assessment was performed in ISO 8601 format (yyyy-mm-dd)")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot ca_remediation_plans
;+		(comment "The plans that have been defined to remediate against the assessment findings")
		(type INSTANCE)
;+		(allowed-classes Strategic_Plan)
		(create-accessor read-write))
	(multislot assessment_for_elements
;+		(comment "DEPRECATED: Relationship to the elements that have been assessed.")
		(type INSTANCE)
;+		(allowed-classes %3AEA_Graph_Relation EA_Relation EA_Class)
		(create-accessor read-write))
	(single-slot ca_reasons_for_finding
;+		(comment "A summary of the reasons for the assessment findings")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ca_remediation_completion_date_ISO8601
;+		(comment "The target in which the assessment finding was remediated")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ca_finding_impact_comments
;+		(comment "A summary of the impact of the assessment findings")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot assessment_control
;+		(comment "DEPRECATED: Relationship to the Control against which the elements are being assessed\\n\\nSUPERCEDED BY: control_assessed_element")
		(type INSTANCE)
;+		(allowed-classes Control)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ca_non_operation_periods
;+		(comment "A summary of the dates between which the Control was not in operation")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ca_remediation_level
;+		(comment "The relative level of effort required to remediate non-complianace with the Control being assessed")
		(type INSTANCE)
;+		(allowed-classes Control_Remediation_Level)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot control_assessor
;+		(comment "The Actor performing or has performed the assessment")
		(type INSTANCE)
;+		(allowed-classes Actor)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ca_remediation_target_date_ISO8601
;+		(comment "The target by when the assessment finding should be remediated")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot control_assessed_element
		(type INSTANCE)
;+		(allowed-classes CONTROL_TO_ELEMENT_RELATION)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot assessment_comments
;+		(comment "Slot to capture one or more comments about the assessment.")
		(type INSTANCE)
;+		(allowed-classes Commentary)
		(create-accessor read-write))
	(multislot assessment_finding
;+		(comment "The results of the assessment, defined in terms of a vocabulary of allowed values or service quality values")
		(type INSTANCE)
;+		(allowed-classes Control_Assessment_Finding Service_Quality_Value)
		(create-accessor read-write))
	(single-slot ca_remediation_actions
;+		(comment "A summary of the recommended actions needed to remediate against the assessment findings")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Control_Framework ""
	(is-a Governance)
	(role concrete)
	(multislot cf_controls
;+		(comment "")
		(type INSTANCE)
;+		(allowed-classes Control)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Framework_Management "Category for classes that support the definition and scoping of frameworks that are in use across the enterprise"
	(is-a Governance)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Management_Framework "A specific, well-defined method or approach to managing an aspect or activity of the enterprise, e.g. TOGAF EA Framework, ITIL Service Management Framework"
	(is-a Framework_Management)
	(role concrete)
	(multislot mf_managed_information_elements
;+		(comment "Defines the scope of information/data elements that are managed by this framework")
		(type INSTANCE)
;+		(allowed-classes Information_Relationship Information_Layer)
		(create-accessor read-write))
	(multislot mf_managed_business_elements
;+		(comment "Defines the scope of business elements that are managed by this framework")
		(type INSTANCE)
;+		(allowed-classes Business_Relationship Business_Layer)
		(create-accessor read-write))
	(multislot mf_implements_framework_types
;+		(comment "Defines the types of management framework that this framework implements")
		(type INSTANCE)
;+		(allowed-classes Management_Framework_Type)
		(create-accessor read-write))
	(multislot mf_managed_application_elements
;+		(comment "Defines the scope of application elements that are managed by this framework")
		(type INSTANCE)
;+		(allowed-classes Application_Relationship Application_Layer)
		(create-accessor read-write))
	(multislot mf_managed_technology_elements
;+		(comment "Defines the scope of technology elements that are managed by this framework")
		(type INSTANCE)
;+		(allowed-classes Technology_Layer)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot mf_managed_support_elements
;+		(comment "Defines the scope of business/IT management elements that are managed by this framework")
		(type INSTANCE)
;+		(allowed-classes EA_Support_Relationship EA_Support)
		(create-accessor read-write)))

(defclass Management_Framework_Type "Class to capture types of management frameworks that are adopted by the enterprise. Management Framework Types group the actual, concrete management frameworks. E.g.  TOGAF (Management Framework) is an implementation of an EA Framework (Management Framework Type)"
	(is-a Framework_Management)
	(role concrete)
	(multislot mft_managed_information_scope
;+		(comment "Defines the scope of information/data elements that are controlled by this type of management framework")
		(type INSTANCE)
;+		(allowed-classes Information_Relationship Information_Layer)
		(create-accessor read-write))
	(multislot mft_managed_business_scope
;+		(comment "Defines the scope of business elements that are controlled by this type of management framework")
		(type INSTANCE)
;+		(allowed-classes Business_Relationship Business_Layer)
		(create-accessor read-write))
	(multislot mft_managed_technology_scope
;+		(comment "Defines the scope of technology elements that are controlled by this type of management framework")
		(type INSTANCE)
;+		(allowed-classes Technology_Layer)
		(create-accessor read-write))
	(multislot mft_managed_class_scope
;+		(comment "Defines the meta-classes of the elements that are in scope for this framework type")
		(type INSTANCE)
;+		(allowed-classes %3AESSENTIAL-CLASS)
		(create-accessor read-write))
	(multislot mft_managed_support_scope
;+		(comment "Defines the scope of business/IT management elements that are controlled by this type of management framework")
		(type INSTANCE)
;+		(allowed-classes EA_Support_Relationship EA_Support)
		(create-accessor read-write))
	(multislot mft_managed_application_scope
;+		(comment "Defines the scope of application elements that are controlled by this type of management framework")
		(type INSTANCE)
;+		(allowed-classes Application_Relationship Application_Layer)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Governance_Body "An organisation or collection of individuals that is responsible for the definition of policies and/or assessing adherence to them."
	(is-a Governance)
	(role concrete)
	(single-slot gb_group_actor
;+		(comment "The Group Actor representing the Governance Body’s relationships to business processes, roles")
		(type INSTANCE)
;+		(allowed-classes Group_Actor)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot gb_established_date_iso8601
;+		(comment "The date when the Governance Body was first established")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot gb_meetings
;+		(comment "The meetings that have been held, or will be held by the Governance Body")
		(type INSTANCE)
;+		(allowed-classes Governance_Meeting)
		(create-accessor read-write)))

(defclass Governance_Meeting "An occurrence of a Governance Body meeting to make Decisions"
	(is-a Governance)
	(role concrete)
	(multislot gm_decisions
;+		(comment "The Decisions that resulted from the Governance Meeting")
		(type INSTANCE)
;+		(allowed-classes Decision)
		(create-accessor read-write))
	(single-slot gm_meeting_of_body
;+		(comment "The Governance Body that holds the Governance Meeting")
		(type INSTANCE)
;+		(allowed-classes Governance_Body)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot gm_meeting_date_iso8601
;+		(comment "The date upon which the Governance Meeting is held")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Control_Solution "A collection of business, information, application or technology elements that has been put in place to implement a specific control"
	(is-a Governance)
	(role concrete)
	(multislot control_solution_application_elements
;+		(comment "The application elements that form part of this control solution")
		(type INSTANCE)
;+		(allowed-classes Application_Logical Application_Physical)
		(create-accessor read-write))
	(multislot control_solution_technology_elements
;+		(comment "The technology elements that form part of this control solution")
		(type INSTANCE)
;+		(allowed-classes Technology_Logical Technology_Physical)
		(create-accessor read-write))
	(multislot control_solution_for_controls
;+		(comment "The controls that this solution impements")
		(type INSTANCE)
;+		(allowed-classes Control)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(multislot control_solution_information_elements
;+		(comment "The information elements that form part of this control solution")
		(type INSTANCE)
;+		(allowed-classes Information_Logical Information_Physical)
		(create-accessor read-write))
	(multislot control_solution_assessments
;+		(comment "The assessments that have been made against the Control Solution")
		(type INSTANCE)
;+		(allowed-classes Control_Solution_Assessment)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot control_solution_business_elements
;+		(comment "The business elements that form part of this control solution")
		(type INSTANCE)
;+		(allowed-classes Business_Logical Business_Physical)
		(create-accessor read-write)))

(defclass Control_Solution_Assessment "An assessment of a Control Solution comprising business, information and/or IT elements that is in place to implement one or more Controls"
	(is-a Governance)
	(role concrete)
	(single-slot assessment_date_iso_8601
;+		(comment "The date on which the assessment was performed in ISO 8601 format (yyyy-mm-dd)")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot ca_remediation_plans
;+		(comment "The plans that have been defined to remediate against the assessment findings")
		(type INSTANCE)
;+		(allowed-classes Strategic_Plan)
		(create-accessor read-write))
	(single-slot ca_reasons_for_finding
;+		(comment "A summary of the reasons for the assessment findings")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ca_remediation_completion_date_ISO8601
;+		(comment "The target in which the assessment finding was remediated")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ca_finding_impact_comments
;+		(comment "A summary of the impact of the assessment findings")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ca_non_operation_periods
;+		(comment "A summary of the dates between which the Control was not in operation")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ca_remediation_level
;+		(comment "The relative level of effort required to remediate non-complianace with the Control being assessed")
		(type INSTANCE)
;+		(allowed-classes Control_Remediation_Level)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ca_remediation_target_date_ISO8601
;+		(comment "The target by when the assessment finding should be remediated")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot control_solution_assessor
;+		(comment "The individual or organisation that undertook the assessment")
		(type INSTANCE)
;+		(allowed-classes Actor)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot assessment_finding
;+		(comment "The results of the assessment, defined in terms of a vocabulary of allowed values or service quality values")
		(type INSTANCE)
;+		(allowed-classes Control_Assessment_Finding Service_Quality_Value)
		(create-accessor read-write))
	(single-slot ca_remediation_actions
;+		(comment "A summary of the recommended actions needed to remediate against the assessment findings")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot assessed_control_solution
;+		(comment "The Control Solution that is being assessed")
		(type INSTANCE)
;+		(allowed-classes Control_Solution)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Risk_Management "Abstract class for classes related to Risk and Risk Management"
	(is-a EA_Support)
	(role abstract)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Risk "Class to represent and manage risks that have been identified."
	(is-a Risk_Management)
	(role concrete)
	(multislot risk_leading_to
;+		(comment "The set of risks that can lead to the risk")
		(type INSTANCE)
;+		(allowed-classes Risk)
		(create-accessor read-write))
	(multislot risk_related_control
;+		(comment "Controls designed to eliminate or reduce the risk")
		(type INSTANCE)
;+		(allowed-classes Control)
		(create-accessor read-write))
	(multislot risk_related_information
;+		(comment "The set of information elements that are related to the risk")
		(type INSTANCE)
;+		(allowed-classes Information_Layer)
		(create-accessor read-write))
	(multislot risk_leads_to
;+		(comment "The set of risks that can follow from the risk")
		(type INSTANCE)
;+		(allowed-classes Risk)
		(create-accessor read-write))
	(single-slot risk_mitigation_comment
;+		(comment "A summary of the recommended Controls that should be established to mitigate the risk")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot risk_related_technology
;+		(comment "The set of technology elements that are related to the risk")
		(type INSTANCE)
;+		(allowed-classes Technology_Layer)
		(create-accessor read-write))
	(single-slot risk_indicators_comment
;+		(comment "A description of the key indicators for the Risk")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot risk_assessments
;+		(comment "One or more assessments of the impact and probablity of the Risk")
		(type INSTANCE)
;+		(allowed-classes Risk_Assessment)
		(create-accessor read-write))
	(multislot risk_impacted_objectives
;+		(comment "The strategic objectives that may be impacted if the Risk was to occur")
		(type INSTANCE)
;+		(allowed-classes Application_Objective_Type Information_Objective_Type Technology_Objective_Type Business_Objective_Type)
		(create-accessor read-write))
	(multislot risk_related_support
;+		(comment "The set of EA Support elements that are related to the risk")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
		(create-accessor read-write))
	(single-slot risk_category
;+		(comment "The category to which the Risk belongs")
		(type INSTANCE)
;+		(allowed-classes Risk_Category)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot risk_related_business
;+		(comment "The set of business elements that are related to the risk")
		(type INSTANCE)
;+		(allowed-classes Business_Layer)
		(create-accessor read-write))
	(multislot risk_related_application
;+		(comment "The set of application elements that are related to the risk")
		(type INSTANCE)
;+		(allowed-classes Application_Layer)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Risk_Assessment "Class to capture assessments of identified Risks"
	(is-a Risk_Management)
	(role concrete)
	(single-slot ra_assessment_date_ISO8601
;+		(comment "The date at which the assessment of the Risk took place")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot ra_risk_probability
;+		(comment "The probability (as a percentage between - and 100) of the Risk occurring")
		(type INTEGER)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot ra_assessed_risk
;+		(comment "The Risk being assessed")
		(type INSTANCE)
;+		(allowed-classes Risk)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot ra_risk_impact
;+		(comment "The relative impact to the enterprise if the Risk was to occur")
		(type INSTANCE)
;+		(allowed-classes Risk_Impact)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Security_Management "Abstract Base class for all meta classes that support the management of security against enterprise resources"
	(is-a EA_Support)
	(role abstract)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Security_Conceptual "The Conceptual view of Security Management. A set of meta-classes that helps to describe the security capabilities required by the enterprise"
	(is-a Security_Management)
	(role abstract)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Security_Capability "Models the conceptual security-related capabilities required by an enterprise"
	(is-a Security_Conceptual)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Security_Capability)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Security_Principle "A security related principle that governs the manner in which security is applied to enterprise resources (business and IT)"
	(is-a Security_Conceptual)
	(role concrete)
	(multislot sp_related_security_capabilities
;+		(comment "The set of security capabilities that this Security Principle applies to")
		(type INSTANCE)
;+		(allowed-classes Security_Capability)
		(create-accessor read-write))
	(single-slot principle_ref
;+		(comment "A unique internal reference for the principle")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot principle_realisation_policies
;+		(comment "The set of policies that are in place to realise a Pricinple in concrete terms")
		(type INSTANCE)
;+		(allowed-classes Policy)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Security_Principle)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Security_Logical "The Logical view of Security Management. A set of meta-classes that helps to describe the logical policies and solutions that are, or should be implemented by the enterprise"
	(is-a Security_Management)
	(role abstract)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Security_Classification_Scheme "A proprietary or standards-based scheme that is used to classify the level of security that should be applied to an enteprise resource"
	(is-a Security_Logical)
	(role concrete)
	(multislot cs_security_classifications
;+		(comment "The set of security classifications that belong to this scheme")
		(type INSTANCE)
;+		(allowed-classes Security_Classification)
		(create-accessor read-write))
	(single-slot cs_belongs_to_security_classification_framework
;+		(comment "The security classification framework within which this scheme is defined")
		(type INSTANCE)
;+		(allowed-classes Security_Classification_Framework)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Security_Classification "Models an item within a security classification scheme to be used to deteremine with level of security that should be applied to an enterprise resource"
	(is-a Security_Logical)
	(role concrete)
	(multislot sc_classified_support_resources
;+		(comment "The management and supporting resources that fall under this Security Classification")
		(type INSTANCE)
;+		(allowed-classes EA_Support EA_Support_Relationship)
		(create-accessor read-write))
	(single-slot sc_belongs_to_classification_scheme
;+		(comment "The Security Classification Scheme to which this classification belongs")
		(type INSTANCE)
;+		(allowed-classes Security_Classification_Scheme)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot sc_classified_business_resources
;+		(comment "The business resources that fall under this Security Classification")
		(type INSTANCE)
;+		(allowed-classes Business_Layer Business_Relationship)
		(create-accessor read-write))
	(multislot sc_classified_technology_resources
;+		(comment "The technology resources that fall under this Security Classification")
		(type INSTANCE)
;+		(allowed-classes Technology_Layer)
		(create-accessor read-write))
	(single-slot sc_index
;+		(comment "Represents the relative security level within its security classification scheme")
		(type INTEGER)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot sc_classified_information_resources
;+		(comment "The information and data resources that fall under this Security Classification")
		(type INSTANCE)
;+		(allowed-classes Information_Layer Information_Relationship)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot sc_classified_application_resource
;+		(comment "The application resources that fall under this Security Classification")
		(type INSTANCE)
;+		(allowed-classes Application_Layer Application_Relationship)
		(create-accessor read-write)))

(defclass Security_Clearance_Level "A means to indirectly associate an Actor or Role to a security policy"
	(is-a Security_Logical)
	(role concrete)
	(multislot scl_cleared_roles_and_actors
;+		(comment "The Business Roles and Actors that have been granted the clearance level")
		(type INSTANCE)
;+		(allowed-classes Business_Role Actor)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Security_Solution "A logical solution that is in place to implement one or more Security Policies. Security Solutions define how security is being applied and support one or more Security Policies directly. A solution has a set of BIAT solution elements that describe the set of things that are being used to realise the policy"
	(is-a Security_Logical)
	(role concrete)
	(multislot ss_information_elements
;+		(comment "The set of Information elements that are part of the Security Solution")
		(type INSTANCE)
;+		(allowed-classes Information_Representation_Type Data_Representation_Type)
		(create-accessor read-write))
	(multislot ss_solution_supports_policy
;+		(comment "The set of Security Policies that are supported by the Security Solution")
		(type INSTANCE)
;+		(allowed-classes Security_Policy)
		(create-accessor read-write))
	(multislot ss_application_elements
;+		(comment "The set of Application elements for the Security Solution")
		(type INSTANCE)
;+		(allowed-classes Application_Provider_Type)
		(create-accessor read-write))
	(multislot ss_technology_elements
;+		(comment "The set of Technology elements that are part of the Security Solution")
		(type INSTANCE)
;+		(allowed-classes Technology_Provider)
		(create-accessor read-write))
	(multislot ss_business_elements
;+		(comment "The set of business elements that are part of the Security Solution")
		(type INSTANCE)
;+		(allowed-classes Business_Process_Type Business_Role)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Security_Classification_Framework "A proprietary or standards-based framework that is used to manage the level of security that should be applied to enteprise resources"
	(is-a Security_Logical)
	(role concrete)
	(multislot scf_security_classification_schemes
;+		(comment "The schemes that are used by this framework to classify enterprise resources")
		(type INSTANCE)
;+		(allowed-classes Security_Classification_Scheme)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Security_Physical "The Physical view of Security Management. A set of meta-classes that helps to describes the physical implementation of security policies and deployment of security solutions"
	(is-a Security_Management)
	(role abstract)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Security_Deployment "A physical deployment of a Security Solution. A Security Deployment maps to 1 or more Security Solutions. The deployment mirrors the solution but the BIAT elements of the deployment are elements from the respective Physical views"
	(is-a Security_Physical)
	(role concrete)
	(multislot sd_technology_elements
;+		(comment "The set of technology elements that are part of the Security Deployment")
		(type INSTANCE)
;+		(allowed-classes Technology_Node Technology_Instance)
		(create-accessor read-write))
	(multislot sd_business_elements
;+		(comment "The set of business elements that are part of the Security Deployment")
		(type INSTANCE)
;+		(allowed-classes Physical_Process_Type Actor)
		(create-accessor read-write))
	(multislot sd_information_elements
;+		(comment "The set of information elements that are part of the Security Deployment")
		(type INSTANCE)
;+		(allowed-classes Information_Store)
		(create-accessor read-write))
	(multislot sd_implements_solutions
;+		(comment "The set of Security Solutions that are being implemented by the Security Deployment")
		(type INSTANCE)
;+		(allowed-classes Security_Solution)
		(create-accessor read-write))
	(multislot sd_application_elements
;+		(comment "The set of Application elements that are part of the Security Deployment")
		(type INSTANCE)
;+		(allowed-classes Application_Deployment)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Service_Delivery "Category for classes that support the modelling of IT service delivery"
	(is-a EA_Support)
	(role abstract)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Service_Delivery)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Service_Delivery_Model "Describes aspects of the service delivery model for an architecture element"
	(is-a Service_Delivery)
	(role abstract)
	(single-slot service_delivery_provider
;+		(comment "The person or group responsible for service delivery")
		(type INSTANCE)
;+		(allowed-classes ACTOR_TO_ROLE_RELATION)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Service_Delivery_Model)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Support_Model "Describes aspects of the support model for an architecture element"
	(is-a Service_Delivery)
	(role abstract)
	(single-slot support_provider
;+		(comment "The person or group responsible for providing support")
		(type INSTANCE)
;+		(allowed-classes ACTOR_TO_ROLE_RELATION)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Support_Model)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Managed_Service ""
	(is-a Service_Delivery)
	(role concrete)
	(multislot ms_managed_info_elements
;+		(comment "Defines the information / data elements that contribute to the service")
		(type INSTANCE)
;+		(allowed-classes Information_Relationship Information_Layer)
		(create-accessor read-write))
	(single-slot ms_deployment_role
;+		(comment "Defines the deployment role of the Managed Service")
		(type INSTANCE)
;+		(allowed-classes Managed_Service_Deployment_Role)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ms_lifecycle_status
;+		(comment "Defines the lifecycle status of the Managed Service")
		(type INSTANCE)
;+		(allowed-classes Managed_Service_Lifecycle_Status)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ms_service_scope
;+		(comment "Defines how the Managed Service is scoped")
		(type INSTANCE)
;+		(allowed-classes Managed_Service_Scope)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot ms_managed_app_elements
;+		(comment "Defines the application elements that contribute to the service")
		(type INSTANCE)
;+		(allowed-classes Application_Relationship Application_Layer)
		(create-accessor read-write))
	(single-slot ms_end_date_ISO8601
;+		(comment "Defines the date at which the managed service will no longer be available")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot ms_managed_tech_elements
;+		(comment "Defines the technology elements that contribute to the service")
		(type INSTANCE)
;+		(allowed-classes Technology_Layer)
		(create-accessor read-write))
	(single-slot ms_start_date_ISO8601
;+		(comment "Defines the date from when the managed service will become available")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot ms_managed_bus_elements
;+		(comment "Defines the business elements that contribute to the service")
		(type INSTANCE)
;+		(allowed-classes Business_Relationship Business_Layer)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Service_Delivery)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ms_criticality
;+		(comment "Defines the relative criticality of the Managed Service")
		(type INSTANCE)
;+		(allowed-classes Managed_Service_Criticality)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Obligation_Management "Container of all obligation applicable to the organisation both related to contractual and compliance"
	(is-a EA_Support)
	(role abstract)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Compliance_Obligation "Requirements with which the organisation is bound to comply, stemming from laws, regulations, licence conditions, supervisory requirements, and self-regulatory industry codes of conduct."
	(is-a Obligation_Management)
	(role concrete)
	(multislot obligation_to_regulations
;+		(comment "The regulations for which this compliance obligation  applies")
		(type INSTANCE)
;+		(allowed-classes Regulation)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(multislot obligation_applies_to
;+		(comment "The elements that this obligation specifically applies to")
		(type INSTANCE)
;+		(allowed-classes OBLIGATION_COMPONENT_RELATION)
		(create-accessor read-write))
	(single-slot compliance_obligation_lifecycle_status
;+		(comment "The lifecycle status of the obligation")
		(type INSTANCE)
;+		(allowed-classes Obligation_Lifecycle_Status)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot compliance_obligation_licenses
;+		(comment "The licenses for which this compliance obligation applies")
		(type INSTANCE)
;+		(allowed-classes License)
		(create-accessor read-write)))

(defclass Contractual_Obligation "Requirements with which the organisation is bound to comply, stemming from commercial contracts and non-legislative governmental schemes"
	(is-a Obligation_Management)
	(role concrete)
	(multislot obligation_applies_to
;+		(comment "The elements that this obligation specifically applies to")
		(type INSTANCE)
;+		(allowed-classes OBLIGATION_COMPONENT_RELATION)
		(create-accessor read-write))
	(multislot obligation_to_contracts
;+		(comment "The contracts for which this contractual obligation applies")
		(type INSTANCE)
;+		(allowed-classes Contract)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass License "Class to hold the details of a license, (e.g. Software), including its details and the type of license."
	(is-a Obligation_Management)
	(role concrete)
	(multislot license_combined_with
;+		(comment "Relationship from a License instance to other License instances that have been combined with this License Instance.")
		(type INSTANCE)
;+		(allowed-classes License)
		(create-accessor read-write))
	(multislot license_compliance_obligations
;+		(comment "The compliance obligations that are defined for this license")
		(type INSTANCE)
;+		(allowed-classes Compliance_Obligation)
		(create-accessor read-write))
	(single-slot license_start_date
;+		(comment "DEPRECATED: The equivalent of this property has been moved to the CONTRACT_COMPONENT_RELATION class")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot license_months_to_renewal
;+		(comment "DEPRECATED: The equivalent of this property has been moved to the CONTRACT_COMPONENT_RELATION class")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot license_model
;+		(comment "Relationship from a License instance that defines the licensing model of a license.")
		(type INSTANCE)
;+		(allowed-classes License_Model)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot license_details
;+		(comment "Slot to hold the details of a license agreement.")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot license_type
;+		(comment "Relationship from a License instance that defines the type of license that it is.")
		(type INSTANCE)
;+		(allowed-classes License_Type)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes License)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot license_approval
;+		(comment "Relationship from a License instance that defines the approvals that have been granted for this license.")
		(type INSTANCE)
;+		(allowed-classes License_Approval)
		(create-accessor read-write))
	(multislot license_compatible_with
;+		(comment "Relationship from a License instance that defines a set of compatible license instances.")
		(type INSTANCE)
;+		(allowed-classes License)
		(create-accessor read-write)))

(defclass Contract "Class to capture a legal contract or deal."
	(is-a Obligation_Management)
	(role concrete)
	(single-slot contract_renewal_model
;+		(comment "Model for contract renewal used by the organisation")
		(type INSTANCE)
;+		(allowed-classes Contract_Renewal_Model)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot contract_attributes
;+		(comment "Slot to manage the set of attribute values that apply to an instance of a Contract.")
		(type INSTANCE)
;+		(allowed-classes Contract_Attribute_Value)
		(create-accessor read-write))
	(multislot contract_for_obligations
;+		(comment "Relationship from a contract to one or multiple obligations")
		(type INSTANCE)
;+		(allowed-classes Contractual_Obligation)
		(create-accessor read-write))
	(single-slot contract_type
;+		(comment "Defines the nature of the Contract, e.g. Framework Agreement, Order")
		(type INSTANCE)
;+		(allowed-classes Contract_Type)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot contract_for
;+		(comment "Relationship to capture the EA_Class element(s) in the architecture for which this Contract applies. Defined via a relationship class that groups a set of elements with associated service qualities. Define multiple instances of the relationship classes to manage varying service qualities.")
		(type INSTANCE)
;+		(allowed-classes CONTRACT_COMPONENT_RELATION)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(multislot contract_applicable_regulations
;+		(comment "The regulations that apply to this contract")
		(type INSTANCE)
;+		(allowed-classes Regulation)
		(create-accessor read-write))
	(single-slot contract_cost
;+		(comment "The cost for the contract. Defined using a relationship class to allow the cost relationship to be qualified")
		(type INSTANCE)
;+		(allowed-classes CONTRACT_TO_COST_RELATION)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot contract_customer
;+		(comment "The customer of the products and / or services of the contract")
		(type INSTANCE)
;+		(allowed-classes Actor)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot My+ID
;+		(comment "")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot contract_uses_license
;+		(comment "DEPRECATED: The equivalent of this property has been moved to the CONTRACT_COMPONENT_RELATION class")
		(type INSTANCE)
;+		(allowed-classes License)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot contract_deal_cost
;+		(comment "Slot to capture the deal cost of a contract, e.g. the overall cost - but does not have to be the unit cost multiplied by the number of units, e.g. for an enterprise-wide deal.")
		(type FLOAT)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot contract_applied
;+		(comment "Relationship to capture the EA_Class element(s) (often, physical instances) in the architecture that define the scope of this Contract. For example, when the contract is FOR the provision of a process, this slot is used to define the elements to which that process is applied.")
		(type INSTANCE)
;+		(allowed-classes EA_Class)
		(create-accessor read-write))
	(single-slot contract_number_of_units
;+		(comment "DEPRECATED: The equivalent of this property has been moved to the CONTRACT_COMPONENT_RELATION class")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot contract_supplier
;+		(comment "The supplier of goods or services in the contract.")
		(type INSTANCE)
;+		(allowed-classes Actor Supplier)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot contract_start_date_ISO8601
;+		(comment "The date when the Contract comes into effect")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot contract_signature_date_ISO8601
;+		(comment "The date when the Contract was signed")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Contract)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot contract_unit_cost
;+		(comment "DEPRECATED: The equivalent of this property has been moved to the CONTRACT_COMPONENT_RELATION class")
		(type FLOAT)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot contract_end_date_ISO8601
;+		(comment "end date for the contract")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot contract_related_contracts
;+		(comment "A set of contracts related to the contract (NOT superseded / superceding)")
		(type INSTANCE)
;+		(allowed-classes Contract)
		(create-accessor read-write))
	(single-slot contract_renewal_notice_days
;+		(comment "number of days notice required for contract renewal")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot contract_ref
;+		(comment "A unique reference for the Contract")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Regulation "stemming from laws, regulations, licence conditions, supervisory requirements, and self-regulatory industry codes of conduct."
	(is-a Obligation_Management)
	(role concrete)
	(multislot regulation_attributes
;+		(comment "Slot to manage the set of attribute values that apply to an instance of a Regulation.")
		(type INSTANCE)
;+		(allowed-classes Regulation_Attribute_Value)
		(create-accessor read-write))
	(multislot regulation_related_regulations
;+		(comment "Defines any regulations that are related to this regulation")
		(type INSTANCE)
;+		(allowed-classes Regulation)
		(create-accessor read-write))
	(multislot regulation_supported_drivers
;+		(comment "The business drivers that the regulation supports")
		(type INSTANCE)
;+		(allowed-classes Business_Driver)
		(create-accessor read-write))
	(multislot regulation_for_compliance_obligations
;+		(comment "Relationship from a regulation to one or multiple compliance obligations")
		(type INSTANCE)
;+		(allowed-classes Compliance_Obligation)
		(create-accessor read-write))
	(multislot regulation_applies_to
;+		(comment "The EA elements to which this regulation applies")
		(type INSTANCE)
;+		(allowed-classes REGULATED_COMPONENT_RELATION)
		(create-accessor read-write))
	(single-slot regulation_regulatory_body
;+		(comment "The organisation or inidivual that oversees compliance to the regulation")
		(type INSTANCE)
;+		(allowed-classes Actor)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Regulated_Data_Usage_Legal_Basis "Defines the legal basis for usage of information or data for specific purposes"
	(is-a Obligation_Management)
	(role concrete)
	(single-slot rdulb_consent_required
;+		(comment "Defines whether consent is required before information or data can be used with this legal basis")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default FALSE)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot rdulb_index
;+		(comment "Used to optionally sequence legal bases")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot rdulb_regulation
;+		(comment "The regulation that requires this legal basis for using information or data")
		(type INSTANCE)
;+		(allowed-classes Regulation)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Regulated_Data_Usage "Requirements with which the organisation is bound to comply, stemming from explicit consent given to use specific elements of a specific scope for a specific purpose"
	(is-a Obligation_Management)
	(role concrete)
	(single-slot rdu_legal_basis
;+		(comment "Defines the legal basis for the use of the regulated data")
		(type INSTANCE)
;+		(allowed-classes Regulated_Data_Usage_Legal_Basis)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot rdu_regulation
;+		(comment "The regulation under which usage of the information or data elements are controlled")
		(type INSTANCE)
;+		(allowed-classes Regulation)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot rdu_permitted_use
;+		(comment "The business capability or business process that defines the purpose for using the regulated data")
		(type INSTANCE)
;+		(allowed-classes Business_Capability Business_Process_Type)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot rdu_usage_of_infodata
;+		(comment "The elements for which consent has been given")
		(type INSTANCE)
;+		(allowed-classes Data_Object_Type Information_View_Type)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(multislot rdu_consenting_business_processes
;+		(comment "The business processes that acquires consent for the use of one or more EA elements")
		(type INSTANCE)
;+		(allowed-classes REGULATED_DATA_USAGE_CONSENT_BUSPROC_RELATION)
		(create-accessor read-write))
	(multislot rdu_consent_information_stores
;+		(comment "The information stores that are used to persist records of consent that has been given")
		(type INSTANCE)
;+		(allowed-classes Information_Store Information_Representation)
		(create-accessor read-write))
	(multislot rdu_usage_geographic_scope
;+		(comment "The geographic scope for which use of elements has been permitted")
		(type INSTANCE)
;+		(allowed-classes Geographic_Region)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot rdu_consent_documentation_links
;+		(comment "Defines links to external documentation describing the consent that has been given")
		(type INSTANCE)
;+		(allowed-classes External_Reference_Link)
		(create-accessor read-write)))

(defclass Performance_Management "Category for classes that support measuring and assessing the performance of EA elements"
	(is-a EA_Support)
	(role abstract)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Performance_Measure "Abstract measure of the performance of an EA element"
	(is-a Performance_Management)
	(role abstract)
	(multislot pm_comments
;+		(comment "Slot to capture any commentary about the Performance Measure")
		(type INSTANCE)
;+		(allowed-classes Commentary)
		(create-accessor read-write))
	(single-slot pm_category
;+		(comment "The category to which the performance measure belongs")
		(type INSTANCE)
;+		(allowed-classes Performance_Measure_Category)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot pm_overall_score
;+		(comment "Supports the capture of an overall score for the performance measure")
		(type FLOAT)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot pm_target_measure_for_element
;+		(comment "The element for which this Performance Measure is defined as a target")
		(type INSTANCE)
;+		(allowed-classes EA_Class EA_Relation %3AEA_Graph_Relation)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot pm_measure_date
;+		(comment "The date when performance was measured")
		(type INSTANCE)
;+		(allowed-classes Time)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot pm_measure_date_iso_8601
;+		(comment "The date when performance was measured in ISO 8601 format (yyyy-mm-dd)")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot pm_measured_element
;+		(comment "The element for which performance is being measured")
		(type INSTANCE)
;+		(allowed-classes EA_Class EA_Relation)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot pm_performance_value
;+		(comment "The service quality measure that represents the level of performance for the element")
		(type INSTANCE)
;+		(allowed-classes Service_Quality_Value)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot pm_accountable_actor
;+		(comment "The actor that is accountable for the perfomance of the element")
		(type INSTANCE)
;+		(allowed-classes Actor)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Business_Performance_Measure "Measure of the performance of a business element"
	(is-a Performance_Measure)
	(role concrete)
	(multislot bus_physical_contained_in_arch_states
;+		(comment "The architecture states that contain this physical business element")
		(type INSTANCE)
;+		(allowed-classes Architecture_State)
		(create-accessor read-write))
	(multislot pm_performance_value
;+		(comment "The service quality measure that represents the level of performance for the element")
		(type INSTANCE)
;+		(allowed-classes Business_Service_Quality_Value)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Application_Performance_Measure "Measure of the performance of an application element"
	(is-a Performance_Measure)
	(role concrete)
	(multislot app_physical_contained_in_arch_states
;+		(comment "The architecture states that contain this physical application element")
		(type INSTANCE)
;+		(allowed-classes Architecture_State)
		(create-accessor read-write))
	(multislot pm_performance_value
;+		(comment "The service quality measure that represents the level of performance for the element")
		(type INSTANCE)
;+		(allowed-classes Application_Service_Quality_Value)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Information_Performance_Measure "Measure of the performance of an information/data element"
	(is-a Performance_Measure)
	(role concrete)
	(multislot pm_performance_value
;+		(comment "The service quality measure that represents the level of performance for the element")
		(type INSTANCE)
;+		(allowed-classes Information_Service_Quality_Value)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot physical_info_contained_in_arch_states
;+		(comment "The architecture states that contain this physical information element")
		(type INSTANCE)
;+		(allowed-classes Architecture_State)
		(create-accessor read-write)))

(defclass Technology_Performance_Measure "Measure of the performance of a technology element"
	(is-a Performance_Measure)
	(role concrete)
	(multislot tech_physical_contained_in_arch_states
;+		(comment "The architecture states that contain this physical technology element")
		(type INSTANCE)
;+		(allowed-classes Architecture_State)
		(create-accessor read-write))
	(multislot pm_performance_value
;+		(comment "The service quality measure that represents the level of performance for the element")
		(type INSTANCE)
;+		(allowed-classes Technology_Service_Quality_Value)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Legal_Management "Abstract Base class for all meta classes that support the management of legal and related activities."
	(is-a EA_Support)
	(role abstract)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Legal_Management)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Cost_Management "Abstract Base class for all meta classes that support the management of cost and related activities."
	(is-a EA_Support)
	(role abstract)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Cost_Management)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Cost
	(is-a Cost_Management)
	(role concrete)
	(multislot cost_components
;+		(comment "The cost components that make up the overall cost")
		(type INSTANCE)
;+		(allowed-classes Cost_Component)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(multislot cost_for_elements
;+		(comment "The EA elements to which this Cost is associated.")
		(type INSTANCE)
;+		(allowed-classes EA_Class EA_Relation %3AEA_Graph_Relation)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(single-slot cost_category
;+		(comment "The category that defines the nature of the overall cost, e.g. IT, Implementation")
		(type INSTANCE)
;+		(allowed-classes Cost_Category)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot cost_code
;+		(comment "An optional, unique code for the cost")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot cost_currency
;+		(comment "The default currency in which the contained costs amounts are defined")
		(type INSTANCE)
;+		(allowed-classes Currency)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot cost_responsible_group
;+		(comment "The actor or role that is responsible for paying the Cost")
		(type INSTANCE)
;+		(allowed-classes Business_Role Actor)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Cost_Management)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Cost_Component "Represents an amount of money representing cost over a given period"
	(is-a Cost_Management)
	(role abstract)
	(single-slot cc_cost_end_date
;+		(comment "The end date for the cost component")
		(type INSTANCE)
;+		(allowed-classes Time)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot cc_cost_amount
;+		(comment "The amount of money being spent")
		(type FLOAT)
		(default 0.0)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot cc_cost_end_date_iso_8601
;+		(comment "The end date for the cost component in ISO 8601 format (yyyy-mm-dd)")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot cc_cost_start_date
;+		(comment "The start date for the cost component")
		(type INSTANCE)
;+		(allowed-classes Time)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot cc_cost_start_date_iso_8601
;+		(comment "The start date for the cost component in ISO 8601 format (yyyy-mm-dd)")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot cc_cost_component_of_cost
;+		(comment "The overall cost that this component is contained within")
		(type INSTANCE)
;+		(allowed-classes Cost)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot cc_cost_currency
;+		(comment "The currency in which the cost is incurred")
		(type INSTANCE)
;+		(allowed-classes Currency)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot cc_cost_component_type
;+		(comment "The type of the cost component (e.g. hosting, wages, licensing)")
		(type INSTANCE)
;+		(allowed-classes Cost_Component_Type)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Cost_Management)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Adhoc_Cost_Component "Represents an amount of money that is spent on an EA element over an ad-hoc period of time"
	(is-a Cost_Component)
	(role concrete)
	(single-slot cc_cost_end_date
;+		(comment "The end date for the cost component")
		(type INSTANCE)
;+		(allowed-classes Gregorian)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot cc_cost_start_date
;+		(comment "The start date for the cost component")
		(type INSTANCE)
;+		(allowed-classes Gregorian)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Cost_Management)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Annual_Cost_Component "Represents an amount of money that is spent on an EA element on an annual basis."
	(is-a Cost_Component)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Cost_Management)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Quarterly_Cost_Component "Represents an amount of money that is spent on an EA element on a quarterly basis."
	(is-a Cost_Component)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Cost_Management)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Monthly_Cost_Component "Represents an amount of money that is spent on an EA element on a monthly basis."
	(is-a Cost_Component)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Cost_Management)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Cost_Component_Change "Defines a positive or negative percentage change in a Cost Component Type"
	(is-a Cost_Management)
	(role concrete)
	(single-slot change_for_cost_component_type
;+		(comment "The type of cost for which the change is being defined")
		(type INSTANCE)
;+		(allowed-classes Cost_Component_Type)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Cost_Management)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot change_percentage
;+		(comment "A positive or negative percentage change that is occuring")
		(type FLOAT)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass Resource_Optimisation "Abstract Base class for all meta classes that support optimised utilisation and management of people and their skills."
	(is-a EA_Support)
	(role abstract)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Skill "Class to capture instances of a recognised skill that a Business Role requires (in order to be performed) or an Actor has."
	(is-a Resource_Optimisation)
	(role concrete)
	(multislot skill_required_by_roles
;+		(comment "Relationship to the Business Role-to-Skill relation instances that capture the Roles that require an instance of a Skill")
		(type INSTANCE)
;+		(allowed-classes ROLE_TO_SKILL_RELATION)
		(create-accessor read-write))
	(multislot skills_required_for_job_position
;+		(comment "Defines the skills that are required for the Job Position")
		(type INSTANCE)
;+		(allowed-classes JOB_TO_SKILL_RELATION)
		(create-accessor read-write))
	(single-slot is_type_of_skill
;+		(comment "Relationship to the Skill Type class instance that a skill is a type of.")
		(type INSTANCE)
;+		(allowed-classes Skill_Type)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot skills_of_actor
;+		(comment "The set of Actor-to-Skill relation instances that capture how the Actor can provide the particular Skill.")
		(type INSTANCE)
;+		(allowed-classes ACTOR_TO_SKILL_RELATION)
		(create-accessor read-write))
	(single-slot skill_label
;+		(comment "A label to be used when presenting the Skill")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot skill_for_elements
;+		(comment "DEPERECATED: The elements in which this skill represents expertise or knowledge")
		(type INSTANCE)
;+		(allowed-classes EA_Class)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot skill_has_certification
;+		(comment "The set of certifications that exist for a particular skill")
		(type INSTANCE)
;+		(allowed-classes Skill_Certification)
		(create-accessor read-write)))

(defclass Skill_Certification "Enumeration to hold instances of certifications that apply to instances of skills. e.g. a PRINCE2 certification could be applied to a Project Management skill instance."
	(is-a Resource_Optimisation)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Skill_At_Level "Defines a specific Skill at a specific Skill Level"
	(is-a Resource_Optimisation)
	(role concrete)
	(multislot skills_required_for_job_position
;+		(comment "Defines the skills that are required for the Job Position")
		(type INSTANCE)
;+		(allowed-classes JOB_TO_SKILL_RELATION)
		(create-accessor read-write))
	(single-slot sal_skill_level
;+		(comment "The Skill Level at which the given Skill is being defined")
		(type INSTANCE)
;+		(allowed-classes Skill_Level)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot skills_required_for_roles
;+		(comment "The roles for which this Skill at Level is required")
		(type INSTANCE)
;+		(allowed-classes ROLE_TO_SKILL_RELATION)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot sal_skill
;+		(comment "The skill being defined at a specified level")
		(type INSTANCE)
;+		(allowed-classes Skill)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass Subject_Matter_Expertise ""
	(is-a Resource_Optimisation)
	(role concrete)
	(single-slot sme_expertise_level
;+		(comment "The level of expertsie in the given Subject by the Actors")
		(type INSTANCE)
;+		(allowed-classes Expertise_Level)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot sme_expertise_in_element
;+		(comment "The EA element in which the Actors have expertise")
		(type INSTANCE)
;+		(allowed-classes EA_Class)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot sme_actors_with_expertise
;+		(comment "The Actor who has expertise in the given EA element")
		(type INSTANCE)
;+		(allowed-classes ACTOR_TO_EXPERTISE_RELATION)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Resource_Allocation "The allocation of an Actor to a given Job Position or Business Role"
	(is-a Resource_Optimisation)
	(role concrete)
	(single-slot ra_start_date_iso_8601
;+		(comment "The date from when the resource allocation begins in ISO 8601 format (yyyy-mm-dd)")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ra_resource_consumer
;+		(comment "The element to which the resource has been allocated")
		(type INSTANCE)
;+		(allowed-classes Group_Actor Change_Activity)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot ra_utilisation
;+		(comment "The utilisation level of the allocated resource (in FTEs)")
		(type FLOAT)
		(range 0.0 1.0)
		(default 1.0)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ra_allocated_resource
;+		(comment "The Actor (in a particular Job Position or Business Role) that has been allocated")
		(type INSTANCE)
;+		(allowed-classes ACTOR_TO_ROLE_RELATION ACTOR_TO_JOB_RELATION)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot ra_end_date_iso_8601
;+		(comment "The date up to which point the resource allocation ends in ISO 8601 format (yyyy-mm-dd)")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ra_start_date
;+		(comment "The date from when the resource allocation begins")
		(type INSTANCE)
;+		(allowed-classes Time)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ra_end_date
;+		(comment "The date up to which point the resource allocation ends")
		(type INSTANCE)
;+		(allowed-classes Time)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Resource_Requirement "The specification of the resource requriements for a given Job Position or Business Role"
	(is-a Resource_Optimisation)
	(role concrete)
	(single-slot rr_required_utilisation
;+		(comment "The utilisation level required of the given resource )in FTEs)")
		(type FLOAT)
		(range 0.0 %3FVARIABLE)
		(default 1.0)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot rr_required_expertise
;+		(comment "Any specific subject matetr expertise that the required resource should have")
		(type INSTANCE)
;+		(allowed-classes Subject_Matter_Expertise)
		(create-accessor read-write))
	(single-slot rr_required_resource
;+		(comment "The individual role or Joib Positon for which resource is required")
		(type INSTANCE)
;+		(allowed-classes Individual_Business_Role Job_Position)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot rr_resource_requester
;+		(comment "The element that has a requirement for the resource")
		(type INSTANCE)
;+		(allowed-classes Change_Activity Group_Actor)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Skill_Level_Dimension "Defines a specific characteristic of a skill level"
	(is-a Resource_Optimisation)
	(role concrete)
	(single-slot sld_skill_level
;+		(comment "The skill level for the characteristic")
		(type INSTANCE)
;+		(allowed-classes Skill_Level)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot sld_dimension_type
;+		(comment "The specific characteristic of the skill level")
		(type INSTANCE)
;+		(allowed-classes Skill_Level_Dimension_Type)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Individual_Business_Role_At_Level "Defines an Individual Business Role at a given Skill Level. Allows different levels of competency to be defined for a given role (e.g. BRM - Level 1, BRM - Level 2)"
	(is-a Resource_Optimisation)
	(role concrete)
	(single-slot ibral_individual_business_role
;+		(comment "The individual business role for which the level is being defined")
		(type INSTANCE)
;+		(allowed-classes Individual_Business_Role)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot ibral_skill_level
;+		(comment "The skill level at which the role is being performed")
		(type INSTANCE)
;+		(allowed-classes Skill_Level)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot ibral_required_skill_at_levels
;+		(comment "The skills at specific levels that are required for the role at this level")
		(type INSTANCE)
;+		(allowed-classes ROLE_TO_SKILL_RELATION)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Lifecycle_Management "Set of classes providing the capability to manage the lifecyle of elements in the enterprise."
	(is-a EA_Support)
	(role abstract)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Lifecycle_Model "Class to capture the lifecycle of an element in the enterprise, linked to the time line showing when the element moves between lifecycle status."
	(is-a Lifecycle_Management)
	(role concrete)
	(single-slot lifecycle_model_subject
;+		(comment "The subject of a Lifecycle Model. That is the element in the enterprise of which this is the Lifecycle Model.")
		(type INSTANCE)
;+		(allowed-classes EA_Class EA_Relation %3AEA_Graph_Relation)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot element_classified_by
;+		(comment "Slot to capture the classification(s) that apply to an element in the ontology. Add this slot to any class that is to be managed by a Taxonomy.")
		(type INSTANCE)
;+		(allowed-classes Taxonomy_Term)
		(default [essential_baseline_v64_Class2])
		(create-accessor read-write))
	(multislot contained_lifecycle_model_relations
;+		(comment "The set of relationships that exist in a Lifecycle Model")
		(type INSTANCE)
;+		(allowed-classes %3ALifecycle-Model-Relation)
		(create-accessor read-write))
	(multislot contained_lifecycle_model_elements
;+		(comment "The set of elements that are used to define a Lifecycle Model.")
		(type INSTANCE)
;+		(allowed-classes Lifecycle_Model_Types)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Lifecycle_Model)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Vendor_Lifecycle_Model "A Lifecycle Model that defines the progress of an element's commercial availability/support status, e.g. Beta -> General Availability -> Extended Support -> End of Life"
	(is-a Lifecycle_Model)
	(role concrete)
	(multislot element_classified_by
;+		(comment "Slot to capture the classification(s) that apply to an element in the ontology. Add this slot to any class that is to be managed by a Taxonomy.")
		(type INSTANCE)
;+		(allowed-classes Taxonomy_Term)
		(default [essential_baseline_v64_Class3])
		(create-accessor read-write))
	(multislot contained_lifecycle_model_elements
;+		(comment "The set of elements that are used to define a Lifecycle Model.")
		(type INSTANCE)
;+		(allowed-classes Vendor_Lifecycle_Status_Usage)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Lifecycle_Model)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Project_Lifecycle_Model "A Lifecycle Model that defines the progress of a Project"
	(is-a Lifecycle_Model)
	(role concrete)
	(single-slot lifecycle_model_subject
;+		(comment "The subject of a Lifecycle Model. That is the element in the enterprise of which this is the Lifecycle Model.")
		(type INSTANCE)
;+		(allowed-classes Project)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot element_classified_by
;+		(comment "Slot to capture the classification(s) that apply to an element in the ontology. Add this slot to any class that is to be managed by a Taxonomy.")
		(type INSTANCE)
;+		(allowed-classes Taxonomy_Term)
		(default [essential_baseline_v64_Class4])
		(create-accessor read-write))
	(multislot contained_lifecycle_model_elements
;+		(comment "The set of elements that are used to define a Lifecycle Model.")
		(type INSTANCE)
;+		(allowed-classes Project_Lifecycle_Status_Usage)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Lifecycle_Model)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Disposition_Lifecycle_Model "Defines the changes to the disposition status of an EA element over time"
	(is-a Lifecycle_Model)
	(role concrete)
	(multislot element_classified_by
;+		(comment "Slot to capture the classification(s) that apply to an element in the ontology. Add this slot to any class that is to be managed by a Taxonomy.")
		(type INSTANCE)
;+		(allowed-classes Taxonomy_Term)
		(default [essential_baseline_v64_Class2])
		(create-accessor read-write))
	(multislot contained_lifecycle_model_elements
;+		(comment "The set of elements that are used to define a Lifecycle Model.")
		(type INSTANCE)
;+		(allowed-classes Disposition_Lifecycle_Status_Usage)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Lifecycle_Model)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Managed_Service_Lifecycle_Model "A Lifecycle Model that defines the status changes of a Managed Service over time"
	(is-a Lifecycle_Model)
	(role concrete)
	(single-slot lifecycle_model_subject
;+		(comment "The subject of a Lifecycle Model. That is the element in the enterprise of which this is the Lifecycle Model.")
		(type INSTANCE)
;+		(allowed-classes Managed_Service)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot element_classified_by
;+		(comment "Slot to capture the classification(s) that apply to an element in the ontology. Add this slot to any class that is to be managed by a Taxonomy.")
		(type INSTANCE)
;+		(allowed-classes Taxonomy_Term)
		(default [essential_baseline_v64_Class2])
		(create-accessor read-write))
	(multislot contained_lifecycle_model_elements
;+		(comment "The set of elements that are used to define a Lifecycle Model.")
		(type INSTANCE)
;+		(allowed-classes Managed_Service_Lifecycle_Status_Usage)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Lifecycle_Model)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Product_Lifecycle_Model "A Lifecycle Model that defines the lifecycle status changes of a Product over time"
	(is-a Lifecycle_Model)
	(role concrete)
	(multislot element_classified_by
;+		(comment "Slot to capture the classification(s) that apply to an element in the ontology. Add this slot to any class that is to be managed by a Taxonomy.")
		(type INSTANCE)
;+		(allowed-classes Taxonomy_Term)
		(default [essential_baseline_v64_Class2])
		(create-accessor read-write))
	(multislot contained_lifecycle_model_elements
;+		(comment "The set of elements that are used to define a Lifecycle Model.")
		(type INSTANCE)
;+		(allowed-classes Product_Lifecycle_Status_Usage)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Lifecycle_Model)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass API_Lifecycle_Model "A Lifecycle Model that defines the progress of an Application Provider Interface through its lifecycle stages"
	(is-a Lifecycle_Model)
	(role concrete)
	(multislot element_classified_by
;+		(comment "Slot to capture the classification(s) that apply to an element in the ontology. Add this slot to any class that is to be managed by a Taxonomy.")
		(type INSTANCE)
;+		(allowed-classes Taxonomy_Term)
		(default [essential_baseline_v64_Class2])
		(create-accessor read-write))
	(multislot contained_lifecycle_model_elements
;+		(comment "The set of elements that are used to define a Lifecycle Model.")
		(type INSTANCE)
;+		(allowed-classes API_Lifecycle_Status_Usage)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Lifecycle_Model)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Lifecycle_Model_Types "Base class for the set of classes that are used to construct a Lifecycle Model."
	(is-a Lifecycle_Management)
	(role abstract)
	(single-slot used_in_lifecycle_model
;+		(comment "The Lifecycle Model in which the Lifecycle Model Type element exists.")
		(type INSTANCE)
;+		(allowed-classes Lifecycle_Model)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot lifecycle_model_type_label
;+		(comment "A label for a Lifecycle Model Type element that is used on the Lifecycle Model diagram.")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Lifecycle_Status_Usage "Usage of a Lifecycle Status in a particular lifecycle model, capturing the contextual information and relationships about the use of a Lifecycle Status."
	(is-a Lifecycle_Model_Types)
	(role concrete)
	(single-slot lcm_lifecycle_status
;+		(comment "The Lifecycle Status element that is being used in a Lifecycle Model.")
		(type INSTANCE)
;+		(allowed-classes Lifecycle_Status)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot lcm_status_start_date_iso_8601
;+		(comment "Defines the start date from when the lifecycle status begins")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Lifecycle_Status_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Vendor_Lifecycle_Status_Usage "Usage of a Vendor Lifecycle Status in a particular vendor lifecycle model, capturing the contextual information and relationships about the use of a Vendor Lifecycle Status."
	(is-a Lifecycle_Status_Usage)
	(role concrete)
	(single-slot lcm_lifecycle_status
;+		(comment "The Lifecycle Status element that is being used in a Lifecycle Model.")
		(type INSTANCE)
;+		(allowed-classes Vendor_Lifecycle_Status)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot vlsu_dependent_technology_context
;+		(comment "Defines any dependent Technology Product Roles that determine the context in which this Vendor Lifecycle Status applies, e.g. End of Life when deployed on a specific Operating System product")
		(type INSTANCE)
;+		(allowed-classes Technology_Product_Role)
		(create-accessor read-write))
	(single-slot used_in_lifecycle_model
;+		(comment "The Lifecycle Model in which the Lifecycle Model Type element exists.")
		(type INSTANCE)
;+		(allowed-classes Vendor_Lifecycle_Model)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Lifecycle_Status_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Project_Lifecycle_Status_Usage "Usage of a Project Lifecycle Status in a particular project lifecycle model, capturing the contextual information and relationships about the use of a Project Lifecycle Status."
	(is-a Lifecycle_Status_Usage)
	(role concrete)
	(single-slot lcm_lifecycle_status
;+		(comment "The Lifecycle Status element that is being used in a Lifecycle Model.")
		(type INSTANCE)
;+		(allowed-classes Project_Lifecycle_Status)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Lifecycle_Status_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Disposition_Lifecycle_Status_Usage "Usage of a Disposition Lifecycle Status in a particular Disposition Lifecycle Model, capturing the contextual information and relationships about the use of the Disposition Lifecycle Status."
	(is-a Lifecycle_Status_Usage)
	(role concrete)
	(single-slot dlsu_disposition_effort_days
;+		(comment "The estimated number of days of effort that will be spent for the disposition period")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot lcm_lifecycle_status
;+		(comment "The Lifecycle Status element that is being used in a Lifecycle Model.")
		(type INSTANCE)
;+		(allowed-classes Disposition_Lifecycle_Status)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Lifecycle_Status_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Managed_Service_Lifecycle_Status_Usage "Usage of a Managed Service Lifecycle Status in a particular Managed Service Lifecycle Model, capturing the contextual information and relationships about the use of a Managed Service Lifecycle Status"
	(is-a Lifecycle_Status_Usage)
	(role concrete)
	(single-slot lcm_lifecycle_status
;+		(comment "The Lifecycle Status element that is being used in a Lifecycle Model.")
		(type INSTANCE)
;+		(allowed-classes Managed_Service_Lifecycle_Status)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Lifecycle_Status_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Product_Lifecycle_Status_Usage "Usage of a Product Lifecycle Status in a particular Product Lifecycle Model, capturing the contextual information and relationships about a specific use of a Product Lifecycle Status"
	(is-a Lifecycle_Status_Usage)
	(role concrete)
	(single-slot lcm_lifecycle_status
;+		(comment "The Lifecycle Status element that is being used in a Lifecycle Model.")
		(type INSTANCE)
;+		(allowed-classes Product_Lifecycle_Status)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Lifecycle_Status_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass API_Lifecycle_Status_Usage "A usage of an API Lifecycle Status in teh lifecycle model of an Application Provider Interface"
	(is-a Lifecycle_Status_Usage)
	(role concrete)
	(single-slot lcm_lifecycle_status
;+		(comment "The Lifecycle Status element that is being used in a Lifecycle Model.")
		(type INSTANCE)
;+		(allowed-classes API_Lifecycle_Status)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot used_in_lifecycle_model
;+		(comment "The Lifecycle Model in which the Lifecycle Model Type element exists.")
		(type INSTANCE)
;+		(allowed-classes API_Lifecycle_Model)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Lifecycle_Status_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Lifecycle_Model_Timeline_Point "DEPRECATED - Use lcm_status_start_date_iso_8601 slot in Lifecycle_Status_Usage: \nClass to capture the point in time at which a Lifecycle Status is valid in a Lifecycle Model for a particular element."
	(is-a Lifecycle_Model_Types)
	(role concrete)
	(single-slot time_point
;+		(comment "The instance of Time represented by this timeline point")
		(type INSTANCE)
;+		(allowed-classes Time)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot time_point_iso_8601
;+		(comment "The date  in ISO 8601 format (yyyy-mm-dd) represented by this timeline point")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Lifecycle_Model_Timeline_Point)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Lifecycle_Model_Start "DEPRECATED - No longer required: Class to indicate the starting point for any Lifecycle Model. No other semantics associated with this class."
	(is-a Lifecycle_Model_Types)
	(role concrete)
	(single-slot lifecycle_model_type_label
;+		(comment "A label for a Lifecycle Model Type element that is used on the Lifecycle Model diagram.")
		(type STRING)
		(default "Start")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Lifecycle_Model_Start)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Taxonomy_Management ""
	(is-a EA_Support)
	(role abstract)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Taxonomy "Class to create and manage user-defined Taxonomies, which are sets of Taxonomy Terms."
	(is-a Taxonomy_Management)
	(role concrete)
	(single-slot taxonomy_display_label
;+		(comment "The string that is displayed as the label for the Taxonomy")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot taxonomy_for_classes
;+		(comment "Any specific meta-classes for which the Taxonomy is relevant")
		(type INSTANCE)
;+		(allowed-classes %3AESSENTIAL-CLASS)
		(create-accessor read-write))
	(multislot taxonomy_terms
;+		(comment "Slot to manage the set of Taxonomy Terms that make up a Taxonomy")
		(type INSTANCE)
;+		(allowed-classes Taxonomy_Term)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Taxonomy)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Taxonomy_Term "Class to capture instances of Taxonomy Terms and the hierarchies of them that exist in a particular Taxonomy."
	(is-a Taxonomy_Management)
	(role concrete)
	(single-slot term_icon_class
;+		(comment "Used to define a CSS class for elements associated with this term")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot taxonomy_term_index
;+		(comment "The sequencing order of the taxonomy term within its parent taxonomy")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot taxonomy_term_label
;+		(comment "Captures the label used for display purposes")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot taxonomy_parent
;+		(comment "Capture the parent classification in the taxonomy hierarchy.")
		(type INSTANCE)
;+		(allowed-classes Taxonomy_Term)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot classifies_elements
;+		(comment "Slot to contain the elements that are being classified, enabling the Taxonomy Terms instances (not just the hierarchy) to be managed.")
		(type INSTANCE)
;+		(allowed-classes EA_Class)
		(create-accessor read-write))
	(multislot taxonomy_children
;+		(comment "Slot to hold the classifications that are children of this one in the hierarchy.")
		(type INSTANCE)
;+		(allowed-classes Taxonomy_Term)
		(create-accessor read-write))
	(single-slot term_in_taxonomy
;+		(comment "Slot to capture the taxonomy of which a taxonomy term is a member")
		(type INSTANCE)
;+		(allowed-classes Taxonomy)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Taxonomy_Term)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Utilities "Category for classes that apply across the meta model layers and provide utility modelling constructs such as enumerations, attributes and other elements that apply to all layers."
	(is-a EA_Support)
	(role abstract)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Utilities)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Supplier "Class to represent an external supplier to the enteprise. e.g. a Supplier of Business Processes, Application Providers, Technology Products"
	(is-a Utilities)
	(role concrete)
	(single-slot supplier_relationship_status
;+		(comment "Defines the nature of the relationship between the enterprise and the Supplier")
		(type INSTANCE)
;+		(allowed-classes Supplier_Relationship_Status)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot supplier_external_contacts
;+		(comment "The people or groups that act as contacts for the Supplier")
		(type INSTANCE)
;+		(allowed-classes ACTOR_TO_ROLE_RELATION)
		(create-accessor read-write))
	(single-slot supplier_contact_telephone
;+		(comment "The telephone number that is used to contact the Supplier")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supplier_url
;+		(comment "A URL to the suppliers website")
		(type STRING)
		(default "http://")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supplier_actor
;+		(comment "Relationship to connect a Supplier to the Group Actor that represents the supplier in the model")
		(type INSTANCE)
;+		(allowed-classes Actor)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Supplier)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Service_Quality_Measure "Category for classes that are used to define and capture Service Qualities"
	(is-a Utilities)
	(role abstract)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Service_Quality_Measure)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Service_Quality "A service quality that defiines the quality with which a Services is provided. These can be used to capture the \\\\\\\"non-functional\\\\\\\" requirements of an application or technology component etc."
	(is-a Service_Quality_Measure)
	(role concrete)
	(single-slot quality_objective_type
;+		(comment "Defines the objective for this Service Quality in terms of the values that are 'good'. e.g. Should the values of a Service Quality be maximised or minimised.")
		(type INSTANCE)
;+		(allowed-classes Service_Quality_Objective)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot sq_index
;+		(comment "An index value for a service quality, allowing them to be sequenced")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot sq_values
;+		(comment "The service quality value instances associated with this service quality")
		(type INSTANCE)
;+		(allowed-classes Service_Quality_Value)
		(create-accessor read-write))
	(multislot service_quality_correlations
;+		(comment "The quantitative correlations between this element and  Service Qualities")
		(type INSTANCE)
;+		(allowed-classes Service_Quality_Correlation_Dependency)
		(create-accessor read-write))
	(multislot capability_weighted_dependencies
;+		(comment "The weighted dependencies between this element and Business, Application or Technology Capabilities")
		(type INSTANCE)
;+		(allowed-classes Capability_Weighted_Dependency)
		(create-accessor read-write))
	(single-slot sq_weighting
;+		(comment "Defines the relative weighting of the service quality")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot sq_minimum_threshold
;+		(comment "Defines the minimum acceptable value for the Service Quality")
		(type INSTANCE)
;+		(allowed-classes Service_Quality_Value)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot sq_for_classes
;+		(comment "Defines any specific Essential classes to which this Service Quality applies (empty means 'any')")
		(type INSTANCE)
;+		(allowed-classes %3AESSENTIAL-CLASS)
		(create-accessor read-write))
	(single-slot sq_maximum_value
;+		(comment "Defines the maximum allowable value for the Service Quality")
		(type INSTANCE)
;+		(allowed-classes Service_Quality_Value)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Service_Quality)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Application_Service_Quality "A service quality that Application Services provide when supporting a Business Process, Activity or Task. These can be used to capture the \\\"non-functional\\\" requirements of an application."
	(is-a Service_Quality)
	(role concrete)
	(multislot sq_values
;+		(comment "The service quality value instances associated with this service quality")
		(type INSTANCE)
;+		(allowed-classes Application_Service_Quality_Value)
		(create-accessor read-write))
	(single-slot sq_minimum_threshold
;+		(comment "Defines the minimum acceptable value for the Service Quality")
		(type INSTANCE)
;+		(allowed-classes Application_Service_Quality_Value)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot sq_maximum_value
;+		(comment "Defines the maximum allowable value for the Service Quality")
		(type INSTANCE)
;+		(allowed-classes Application_Service_Quality_Value)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Application_Service_Quality)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Technology_Service_Quality "A Service Quality for Technology Services such as performance, serviceabilty etc."
	(is-a Service_Quality)
	(role concrete)
	(multislot sq_values
;+		(comment "The service quality value instances associated with this service quality")
		(type INSTANCE)
;+		(allowed-classes Technology_Service_Quality_Value)
		(create-accessor read-write))
	(single-slot sq_minimum_threshold
;+		(comment "Defines the minimum acceptable value for the Service Quality")
		(type INSTANCE)
;+		(allowed-classes Technology_Service_Quality_Value)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot sq_maximum_value
;+		(comment "Defines the maximum allowable value for the Service Quality")
		(type INSTANCE)
;+		(allowed-classes Technology_Service_Quality_Value)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Technology_Service_Quality)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Information_Service_Quality "Class to define Service Qualities that apply to Information and Data elements, e.g. Timeliness, Accuracy, Completeness"
	(is-a Service_Quality)
	(role concrete)
	(multislot sq_values
;+		(comment "The service quality value instances associated with this service quality")
		(type INSTANCE)
;+		(allowed-classes Information_Service_Quality_Value)
		(create-accessor read-write))
	(single-slot sq_minimum_threshold
;+		(comment "Defines the minimum acceptable value for the Service Quality")
		(type INSTANCE)
;+		(allowed-classes Information_Service_Quality_Value)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot sq_maximum_value
;+		(comment "Defines the maximum allowable value for the Service Quality")
		(type INSTANCE)
;+		(allowed-classes Information_Service_Quality_Value)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Service_Quality)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Business_Service_Quality "A service quality that applies to provision of services to the Business. These can be used to capture the \\\"non-functional\\\" business requirements."
	(is-a Service_Quality)
	(role concrete)
	(multislot sq_values
;+		(comment "The service quality value instances associated with this service quality")
		(type INSTANCE)
;+		(allowed-classes Business_Service_Quality_Value)
		(create-accessor read-write))
	(single-slot sq_minimum_threshold
;+		(comment "Defines the minimum acceptable value for the Service Quality")
		(type INSTANCE)
;+		(allowed-classes Business_Service_Quality_Value)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot sq_maximum_value
;+		(comment "Defines the maximum allowable value for the Service Quality")
		(type INSTANCE)
;+		(allowed-classes Business_Service_Quality_Value)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Service_Quality)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Service_Quality_Value "The value of a Service Quality in the specification of how a service or capability is provided."
	(is-a Service_Quality_Measure)
	(role abstract)
	(single-slot service_quality_value_score
;+		(comment "Defines an integer value for the Service Quality Value")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot service_quality_priority
;+		(comment "The priority of of a particular Service Quality.")
		(type SYMBOL)
		(allowed-values High Medium Low)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot service_quality_for_classes
;+		(comment "")
		(type INSTANCE)
;+		(allowed-classes %3AESSENTIAL-CLASS)
		(create-accessor read-write))
	(single-slot service_quality_value_uom
;+		(comment "The Unit Of Measure that applies to the specific Service Quality Value")
		(type INSTANCE)
;+		(allowed-classes Unit_Of_Measure)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot sqv_index
;+		(comment "Allows for sequencing of service quality values")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot usage_of_service_quality
;+		(comment "The Service Quality that this is a usage of.")
		(type INSTANCE)
;+		(allowed-classes Service_Quality)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot service_quality_value_value
;+		(comment "The specific value of the Service Quality Value instance.")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Service_Quality_Value)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Application_Service_Quality_Value "The value of an Application Service Quality in the specification of how an Application component supports a Business Process, Activity or Task."
	(is-a Service_Quality_Value)
	(role concrete)
	(single-slot usage_of_service_quality
;+		(comment "The Service Quality that this is a usage of.")
		(type INSTANCE)
;+		(allowed-classes Application_Service_Quality)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Application_Service_Quality_Value)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Technology_Service_Quality_Value "The value of a Technology Service Quality in the specification of the technology capabilities  an Application Function Implementation requires. This defines the \\\\\"non-functional\\\\\" requirements on the technology capabilities, such as performance or serviceability."
	(is-a Service_Quality_Value)
	(role concrete)
	(single-slot usage_of_service_quality
;+		(comment "The Service Quality that this is a usage of.")
		(type INSTANCE)
;+		(allowed-classes Technology_Service_Quality)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Technology_Service_Quality_Value)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Information_Service_Quality_Value "The value of an Information Service Quality in the specification of the REQUIRED qualities that Information and Data must have. In addition, the ACTUAL quality of the Information and Data that is provided by a physical Information Store is also captured using these Service Quality Values"
	(is-a Service_Quality_Value)
	(role concrete)
	(single-slot usage_of_service_quality
;+		(comment "The Service Quality that this is a usage of.")
		(type INSTANCE)
;+		(allowed-classes Information_Service_Quality)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Service_Quality_Value)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Business_Service_Quality_Value "The value of a Business Service Quality in the specification of how a service or capability is provided."
	(is-a Service_Quality_Value)
	(role concrete)
	(single-slot usage_of_service_quality
;+		(comment "The Service Quality that this is a usage of.")
		(type INSTANCE)
;+		(allowed-classes Business_Service_Quality)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Service_Quality_Value)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Service_Quality_Mapping "Category for classes that are used to provide scores that are based on 2 or 3 dimensional mapping of Service Quality Values"
	(is-a Service_Quality_Measure)
	(role abstract)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Service_Quality_Measure)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Service_Quality_Value_Map "Represents a 2 or 3 dimensional matrix of scores based on the mapping of Service Quality Values"
	(is-a Service_Quality_Mapping)
	(role concrete)
	(multislot sqvm_map_scores
;+		(comment "The list of scores given to the intersections between Service Quality Values within the mapping")
		(type INSTANCE)
;+		(allowed-classes Service_Quality_Value_Map_Score)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Service_Quality_Measure)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Service_Quality_Value_Map_Score "Represents a score given to the intersection between 2 or 3 Service Quality Values within a Service Quality Value Map"
	(is-a Service_Quality_Mapping)
	(role concrete)
	(single-slot sqvms_z_value
;+		(comment "The Service Quality Value defined on the Z-Axis of the parent map")
		(type INSTANCE)
;+		(allowed-classes Service_Quality_Value)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot sqvms_parent_map
;+		(comment "The service quality value map that contains this score")
		(type INSTANCE)
;+		(allowed-classes Service_Quality_Value_Map)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot sqvms_map_score
;+		(comment "The score given to the intersection between the Service Quality Values on the X, Y and Z axes")
		(type FLOAT)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot sqvms_x_value
;+		(comment "The Service Quality Value defined on the X-Axis of the parent map")
		(type INSTANCE)
;+		(allowed-classes Service_Quality_Value)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot sqvms_y_value
;+		(comment "The Service Quality Value defined on the Y-Axis of the parent map")
		(type INSTANCE)
;+		(allowed-classes Service_Quality_Value)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Service_Quality_Measure)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Service_Quality_Measure_Contextual_Meaning "Abstract class used to provide a semantic definition for specific Service Qualities or Service Quality Values in the context of a specific EA element"
	(is-a Service_Quality_Measure)
	(role abstract)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Service_Quality_Measure)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot sqmcm_ea_element_context
;+		(comment "The EA element that is the context for the definition of the Service Quality or Service Quality Value")
		(type INSTANCE)
;+		(allowed-classes EA_Class)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass Service_Quality_Value_Contextual_Meaning "Class used to provide a semantic definition for a specific Service Quality Value in the context of a specific EA element"
	(is-a Service_Quality_Measure_Contextual_Meaning)
	(role concrete)
	(single-slot sqvcm_service_quality_value
;+		(comment "The Service Quality Value for which a contextuual meaning is being defined")
		(type INSTANCE)
;+		(allowed-classes Service_Quality_Value)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Service_Quality_Measure)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Service_Quality_Contextual_Meaning "Class used to provide a semantic definition for a specific Service Quality Value in the context of a specific EA element"
	(is-a Service_Quality_Measure_Contextual_Meaning)
	(role concrete)
	(single-slot sqcm_service_quality
;+		(comment "The Service Quality for which a contextuual meaning is being defined")
		(type INSTANCE)
;+		(allowed-classes Service_Quality)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Service_Quality_Measure)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Service_Quality_Change "Defines a positive or negative percentage change in a Service Quality"
	(is-a Service_Quality_Measure)
	(role concrete)
	(single-slot sqc_service_quality
;+		(comment "The service quality for which the change is defined")
		(type INSTANCE)
;+		(allowed-classes Service_Quality)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Service_Quality_Measure)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot change_percentage
;+		(comment "A positive or negative percentage change that is occuring")
		(type FLOAT)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass Attribute "Meta class that is used to define attributes for other classes. The modeller should create instances of this class in order to define a particular attribute, e.g. cost. Usages of this class are then associated with Instances of artefacts that have that attribute in order to specify the value for that attribute."
	(is-a Utilities)
	(role concrete)
	(single-slot attribute_value_unit
;+		(comment "The unit by which the attribute value is measured. E.g. A cost attribute might have an attribute_value_unit of Pounds Sterling. A Memory attribute might have the MB unit")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Attribute)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Contract_Attribute "Class for defining a set of attributes of a contract. Values of each instance are managed by the Contract_Attribute_Value class."
	(is-a Attribute)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Contract_Attribute)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Regulation_Attribute ""
	(is-a Attribute)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Attribute)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Attribute_Value "Meta class that is, in effect, a usage of an instance of an Attribute class with the associated value of the attribute in a particular instance. E.g. the cost of a Business Process."
	(is-a Utilities)
	(role concrete)
	(single-slot attribute_value_of
;+		(comment "Relation to the instance of an Attribute that an Attribute_Value is the value of.")
		(type INSTANCE)
;+		(allowed-classes Attribute)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot inverse_of_technology_instance_attributes
;+		(comment "The inverse relation from an Attribute Value back to the meta class instance that has this Attribute Value.")
		(type INSTANCE)
;+		(allowed-classes Technology_Instance)
		(create-accessor read-write))
	(single-slot attribute_value
;+		(comment "The value that this attribute has.")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Attribute_Value)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Contract_Attribute_Value "Class for capturing instances of the value of an attribute of a contract, so that the set of attributes can be modelled as instances themselves. The contract attribute value associates an attribute instance with its value."
	(is-a Attribute_Value)
	(role concrete)
	(single-slot attribute_value_of
;+		(comment "Relation to the instance of an Attribute that an Attribute_Value is the value of.")
		(type INSTANCE)
;+		(allowed-classes Contract_Attribute)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Contract_Attribute_Value)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Regulation_Attribute_Value "Class for capturing instances of the value of an attribute of a regulation, so that the set of attributes can be modelled as instances themselves. The regulation attribute value associates an attribute instance with its value."
	(is-a Attribute_Value)
	(role concrete)
	(single-slot attribute_value_of
;+		(comment "Relation to the instance of an Attribute that an Attribute_Value is the value of.")
		(type INSTANCE)
;+		(allowed-classes Regulation_Attribute)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Attribute_Value)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Enumeration "Represents an abstract class of enumerated types. Enumerations provide the modeller with the capability to define a recognised vocabulary of allowed values without having to change or extend the meta model."
	(is-a Utilities)
	(role abstract)
	(single-slot enumeration_score
;+		(comment "Defines a relative score from 0 to 10 for the enumeration value")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot enumeration_icon
;+		(comment "String containing the path to an image that is used in Views for an enumeration value. Contributed by Kevin Campbell 6/10/2010")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot enumeration_sequence_number
;+		(comment "The sequence number for the enumeration value across all values")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot enumeration_value_for_classes
;+		(comment "The types of elements for which the enumeration  applies")
		(type INSTANCE)
;+		(allowed-classes %3AESSENTIAL-CLASS)
		(create-accessor read-write))
	(single-slot enumeration_value
;+		(comment "The value for this enumeration")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot enumeration_report_commentary
;+		(comment "String to define a short commentary for an enumeration value that can be used in Views, e.g. to specify that a waiver is required for a certain Life Cycle status. Contributed by Kevin Campbell 6/10/2010")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Lifecycle_Status "A status as to where in its lifecycle an artefact is at. e.g. Technology Products or Application Providers from being prototyped through to retired"
	(is-a Enumeration)
	(role concrete)
	(single-slot lifecycle_status_content_status
;+		(comment "Defines the system content status that maps to the lifecycle status")
		(type INSTANCE)
;+		(allowed-classes SYS_CONTENT_APPROVAL_STATUS)
		(default [essential_baseline_6.5.4_Class67])
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot lifecycle_status_org_scope
;+		(comment "Defines the organisational scope for the Lifecycle Status. e.g. to set the strategic standard for a Technology Product for a particular part of the organisation.")
		(type INSTANCE)
;+		(allowed-classes Actor)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Lifecycle_Status)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot progress_requires_approval
;+		(comment "Defines whether progression from this lifecycle status requires approval")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default FALSE)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Project_Lifecycle_Status "Represents the lifecycle status or phase of a change project"
	(is-a Lifecycle_Status)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Obligation_Lifecycle_Status "The lifecycle status of a regulatory or contractual obligation"
	(is-a Lifecycle_Status)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Lifecycle_Status)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Vendor_Lifecycle_Status "Represents the lifecycle status of an element as defined by the vendor of that element. e.g. the lifecycle of a Technology Product defined by the product vendor, such as it being generally available, out of support etc."
	(is-a Lifecycle_Status)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Lifecycle_Status)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass InfoData_Representation_Lifecycle_Status "Represents the lifecycle of Information or Data Representations"
	(is-a Lifecycle_Status)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Lifecycle_Status)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Strategic_Requirement_Lifecycle_Status "Represents the lifecycle stages of a Strategic Requirement"
	(is-a Lifecycle_Status)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Lifecycle_Status)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Idea_Lifecycle_Status "Represents the lifecycle stages of an Idea"
	(is-a Lifecycle_Status)
	(role concrete)
	(single-slot system_content_lifecycle_status
;+		(comment "Defines the lifecycle status of an EA element in support of content approval")
		(type INSTANCE)
;+		(allowed-classes SYS_CONTENT_APPROVAL_STATUS)
		(default [essential_baseline_6.5.4_Class75])
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Lifecycle_Status)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Strategic_Trend_Implication_Lifecycle_Status "Represents the lifecycle stages of a Strategic Trend Implication"
	(is-a Lifecycle_Status)
	(role concrete)
	(single-slot system_content_lifecycle_status
;+		(comment "Defines the lifecycle status of an EA element in support of content approval")
		(type INSTANCE)
;+		(allowed-classes SYS_CONTENT_APPROVAL_STATUS)
		(default [essential_baseline_6.5.4_Class81])
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Lifecycle_Status)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass SYS_CONTENT_APPROVAL_STATUS "Defines the publishing approval status of an EA element"
	(is-a Lifecycle_Status)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Lifecycle_Status)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Disposition_Lifecycle_Status "Defines an agreed disposition for an EA element"
	(is-a Lifecycle_Status)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Lifecycle_Status)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Managed_Service_Lifecycle_Status "Represents the lifecycle status of a Managed Service"
	(is-a Lifecycle_Status)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Lifecycle_Status)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Product_Lifecycle_Status "Represents the lifecycle status of a Product"
	(is-a Lifecycle_Status)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Lifecycle_Status)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass SYS_CONTENT_QUALITY_LIFECYCLE "Abstract class grouping together Lifecycle Statuses related to Essential Content Quality Management services"
	(is-a Lifecycle_Status)
	(role abstract)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Lifecycle_Status)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass SYS_CONTENT_QUALITY_STATUS "Defines the status of an instance from a quality management perspective"
	(is-a SYS_CONTENT_QUALITY_LIFECYCLE)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Lifecycle_Status)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass SYS_CONTENT_QUALITY_REVIEW_STATUS "Defines the status of a content quality review being undertaken against an instance"
	(is-a SYS_CONTENT_QUALITY_LIFECYCLE)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Lifecycle_Status)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Group_Actor_Lifecycle_Status "Defines the lifecycle status of an Organisation"
	(is-a Lifecycle_Status)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Lifecycle_Status)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Purchase_Status "Defines the stages that an EA element can progress through from a purchasing perspective"
	(is-a Lifecycle_Status)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Lifecycle_Status)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass API_Lifecycle_Status "Defines the lifecycle status of an Application Provider Interface"
	(is-a Lifecycle_Status)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Lifecycle_Status)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Codebase_Status "Class to record the status of the codebase of, systems such as an Application Provider. This provides the construct for the modeller to create a vocabularly of recognised codebase values, e.g. packaged, bespoke, customised."
	(is-a Enumeration)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Codebase_Status)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Deployment_Role "Deployment role (e.g. production, test) of a logical application, information or technology element"
	(is-a Enumeration)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Deployment_Role)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Information_Deployment_Role "Defines deployment roles for physical Information Stores"
	(is-a Deployment_Role)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Deployment_Role)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Managed_Service_Deployment_Role "Defines a deployment role for a Managed Service"
	(is-a Deployment_Role)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Deployment_Role)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Project_Status "A enumerated type that describes the status of a change project"
	(is-a Enumeration)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Project_Status)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Standardisation_Level "Enumerated class describing the standardisation level of an architecture element. This provides the constructs for the modeller to create a vocabulary of standardisation levels to be used in the model and applied to elements such as business processes"
	(is-a Enumeration)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Standardisation_Level)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Business_Criticality "Enumerated class describing the business criticality of a given architecture element"
	(is-a Enumeration)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Business_Criticality)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Deployment_Status "Describes the runtime status (e.g. live, fail-over, backup) of a physical technology instance"
	(is-a Enumeration)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Deployment_Status)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Planning_Action "Represents the type of action that is being planned for an element in the enterprise"
	(is-a Enumeration)
	(role concrete)
	(multislot planning_action_supporting_actions
;+		(comment "The list of planning actions that are additionally undertaken alongside this planning action")
		(type INSTANCE)
;+		(allowed-classes Planning_Action)
		(create-accessor read-write))
	(multislot planning_action_classes
;+		(comment "Defines the classes of instances that can be assigned to this Planning Action")
		(type INSTANCE)
;+		(allowed-classes %3AESSENTIAL-CLASS)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Planning_Action)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Planning_Status "The current status of a plan in the enterprise."
	(is-a Enumeration)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Planning_Status)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Product_Family "DEPRECATED. Class to hold a list of Product families that are used in the organisation to group related products together, e.g. Windows, Unix, Oracle"
	(is-a Enumeration)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Product_Family)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Application_Purpose "Class of enumerations for capturing the purpose of an application provider. e.g. Integration, Business Application, Service, Data Integration"
	(is-a Enumeration)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Application_Purpose)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass License_Type "Class to hold a set of types of License, e.g. Commercial, Open Source, Subscription. Create new instances to add to the set."
	(is-a Enumeration)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes License_Type)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass License_Model "Class to hold a set of types of License models, i.e. the basis on which the license is granted e.g. per CPU, per core, enterprise. Create new instances to add to the set."
	(is-a Enumeration)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes License_Model)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass License_Approval "Class to hold a set of License approvals, i.e. bodies that approve a license, in particular for open-source licenses, e.g. OSI, Free Software Foundation (FSF). Create new instances to add to the set."
	(is-a Enumeration)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes License_Approval)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Application_Delivery_Model "An enumeration that represents the different ways in which the functionality of an Application Provider can be made available"
	(is-a Enumeration)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Issue_Category "A type of architecture issue"
	(is-a Enumeration)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Data_Category "Enumeration to categorise Data Objects by the type of data that they represent, e.g. Master, Reference, Transactional."
	(is-a Enumeration)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Data_Attribute_Cardinality "Represent the cardinality of a Data Attribute (e.g. One to Many, Many to Many)"
	(is-a Enumeration)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Data_Acquisition_Method "Represents the different ways in which data can be acquired"
	(is-a Enumeration)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Project_Approval_Status "Represents whether a project is approved, not approved or has been suspended mid-flight"
	(is-a Enumeration)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Application_Function_Behaviour "Used to capture the types of behaviour exhibited by Application Functions"
	(is-a Enumeration)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Requirement_Impact "A set of impacts values for requirements (needs, issues etc.)"
	(is-a Enumeration)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Business_Capability_Purpose "Enumeration to classify Business Capabilities according to their purpose, e.g. Direct, Control, Execute"
	(is-a Enumeration)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Secured_Action "A type of action that a Business Role, Actor or Security Clearance Level can make against a secured resource"
	(is-a Enumeration)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Data_Standard_Relationship_Type "Enumeration to capture the type of relationship that exists between Data Standards, e.g. Derivation, Aggregation"
	(is-a Enumeration)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Menu_Item_Category "Enumeration to capture available types of menu items"
	(is-a Enumeration)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Report_Implementation_Type "Enumeration to capture the different ways in which Essential Views are implemented"
	(is-a Enumeration)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Unit_Of_Measure "Enumeration class to manage the set of valid units of measure in the repository. Units of measure describe the particular metric by which values are measured, e.g. distances (km), financial value (£), time (years)."
	(is-a Enumeration)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Service_Quality_Objective "Enumeration class to manage the set of valid values for the objectives of a Service Quality. e.g. Is the ideal to maximise or minimise the values of a Service Quality."
	(is-a Enumeration)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Cost_Component_Type "The type of a cost component"
	(is-a Enumeration)
	(role concrete)
	(multislot cct_for_classes
;+		(comment "The types of elements for which the cost component  applies")
		(type INSTANCE)
;+		(allowed-classes %3AESSENTIAL-CLASS)
		(create-accessor read-write))
	(multislot bus_env_factor_correlations
;+		(comment "The quantitative correlations between this element and  Business Environment Factors")
		(type INSTANCE)
;+		(allowed-classes Business_Environment_Correlation_Dependency)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Business_Capability_Role "The roles that a Business Capability plays in the context of its parent Business Capability"
	(is-a Enumeration)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Control_Assessment_Finding "Enumeration to manage the set of allowed values for the finding or result of a control assessment."
	(is-a Enumeration)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Principle_Compliance_Level "Class that defines the discrete levels of compliance against architecture principles"
	(is-a Enumeration)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Standard_Strength "Enumeration to manage the set of allowed values for the Standard Strength vocabulary."
	(is-a Enumeration)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Retention_Period "Enumeration to manage the set of retention periods used in Records Management retention schedules. Each value is a logical symbol representing the classification of records that describe the time frame for which a record must be retained."
	(is-a Enumeration)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Actor_Reporting_Line_Strength "Represents the strength of the reporting lines between Individual Actors"
	(is-a Enumeration)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Skill_Level "Enumeration to capture the level of expertise of a Skill instance. This can be used for both specifying required skill levels and also to capture the skill level of an Actor instance."
	(is-a Enumeration)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass InfoData_Responsibilty_Aspect "Defines the aspect of data governance for which a policy is being defined"
	(is-a Enumeration)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Skill_Focus_Level "Enumeration that defines the extent to which a skills is the main focus for an actor, job or role"
	(is-a Enumeration)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Expertise_Level "Enumeration to capture the level of expertise of a Skill instance. This can be used for both specifying required levels of expertise and also to capture the expertise level of an Actor."
	(is-a Enumeration)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Skill_Level_Dimension_Type "Defines a specific characteristic of a skill level"
	(is-a Enumeration)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Revenue_Component_Type "The type of a revenue component"
	(is-a Enumeration)
	(role concrete)
	(multislot bus_env_factor_correlations
;+		(comment "The quantitative correlations between this element and  Business Environment Factors")
		(type INSTANCE)
;+		(allowed-classes Business_Environment_Correlation_Dependency)
		(create-accessor read-write))
	(multislot service_quality_correlations
;+		(comment "The quantitative correlations between this element and  Service Qualities")
		(type INSTANCE)
;+		(allowed-classes Service_Quality_Correlation_Dependency)
		(create-accessor read-write))
	(multislot rct_for_classes
;+		(comment "The types of elements for which the revenue component  applies")
		(type INSTANCE)
;+		(allowed-classes %3AESSENTIAL-CLASS)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Document_File_Type "The file extenstion of a document which describes the format of the document. For example, \\\"xls\\\" describes a Microsoft Excel Document"
	(is-a Enumeration)
	(role concrete)
	(single-slot extension_mime_type
;+		(comment "\\\"Multipurpose Internet Mail Extensions. A way of identifying files on the Internet according to their nature and format.")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Requirement_Status ""
	(is-a Enumeration)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Information_Representation_Category "Used to categrise diferent types of information representation (e.g. database, report, data feed, message, document)"
	(is-a Enumeration)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Legal_Consent_Type "Defines the types of legal consent that can be given to use an element"
	(is-a Enumeration)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass InfoData_Representation_Attribute_Type "Defines primitive data types for Information and Data Representation Attributes"
	(is-a Enumeration)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Technology_Delivery_Model "An enumeration that represents the different ways in which Technology infrastructure services can be delivered"
	(is-a Enumeration)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Customer_Emotion "Defines an emotional state of a Persona when engaing with an enterprise"
	(is-a Enumeration)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Customer_Experience_Rating "Defines the positive or negative level of a Customer's Experience when engaging with the enterprise"
	(is-a Enumeration)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Budget_Approval_Status "Defines the approval status of a Budgetary Element"
	(is-a Enumeration)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Report_Geographic_Map "Represents a pre-defined geographic map available to be used in Essential Viewer"
	(is-a Enumeration)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Widget_Style_Class "Used to select specific Presentation elements for styling"
	(is-a Enumeration)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Supplier_Relationship_Status "Defines the types of relationships that can exist between the enterprise and a Supplier"
	(is-a Enumeration)
	(role concrete)
	(single-slot csrs_contract_review_notice_days
;+		(comment "The number of days prior to contract renewal minimum notice that a contract for a Supplier with this relationship should be reviewed")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Contract_Type "Defines the different types of Contract in scope for the enterprise"
	(is-a Enumeration)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Contract_Renewal_Model "Defines the approach taken to renewing a component of a Contract, e.g. Fixed Term, Auto-Renew"
	(is-a Enumeration)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass SYS_CONTENT_VISIBILITY "Defines the visiblity of an EA Element in the Essential Viewer. NOTE: This is separate to security classification of content"
	(is-a Enumeration)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Business_Environment_Category "Used to categorise different types of Business Environment Factors"
	(is-a Enumeration)
	(role concrete)
	(multislot bec_factors
;+		(comment "The Business Environment Factors that belong to this Business Environment Category")
		(type INSTANCE)
;+		(allowed-classes Business_Environment_Factor)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Risk_Category "A type of Risk"
	(is-a Enumeration)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Risk_Impact "The level of impact to the enterprise for a Risk"
	(is-a Enumeration)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Control_Assessment_Frequency "Defines the frequency in which Controls should be assessed, e.g. Annually, Monthly"
	(is-a Enumeration)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Control_Group "A collection of related Controls"
	(is-a Enumeration)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Operating_Model_Category "Defines an operating model approach (e.g. centralised, local) to be adopted for a given element"
	(is-a Enumeration)
	(role concrete)
	(single-slot contained_in_operating_model_category
;+		(comment "The parent category for this Operating Model Category")
		(type INSTANCE)
;+		(allowed-classes Operating_Model_Category)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot contains_operating_model_categories
;+		(comment "The sub-categories of this Operating Model Category")
		(type INSTANCE)
;+		(allowed-classes Operating_Model_Category)
		(create-accessor read-write)))

(defclass Role_Responsibility_Category "Defines the nature of the stakeholder relationships typically associated with a Business Role, e.g. accountable, consulted"
	(is-a Enumeration)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Control_Remediation_Level "Defines an enumerated level of effort required to remediate non-confirmance to a Control"
	(is-a Enumeration)
	(role concrete)
	(single-slot crl_minimum
;+		(comment "A number representing the minimum representative score (e.g. effort, cost) for this level of remediation")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot crl_maximum
;+		(comment "A number representing the maximum representative score (e.g. effort, cost) for this level of remediation")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot crl_ref
;+		(comment "A unique reference for this  remediation level enumeration value")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Performance_Measure_Category "Defines a categorisation scheme for performance measures"
	(is-a Enumeration)
	(role concrete)
	(single-slot pmc_defines_instances_of_performance_measure_class
;+		(comment "The sub class of Performance Measure that is defined by the Performance Measure Category")
		(type INSTANCE)
;+		(allowed-classes %3AESSENTIAL-CLASS)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot pmc_service_qualities
;+		(comment "The service qualities that are used to measure this category of performance measure")
		(type INSTANCE)
;+		(allowed-classes Service_Quality)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(multislot pmc_measures_ea_classes
;+		(comment "The meta-classes to which this category of performance measure should be applied")
		(type INSTANCE)
;+		(allowed-classes %3AESSENTIAL-CLASS)
		(create-accessor read-write))
	(single-slot enumeration_value_for_classes
;+		(comment "The types of elements for which the enumeration  applies")
		(type INSTANCE)
;+		(allowed-classes %3AESSENTIAL-CLASS)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Budget_Category "Defines a particular category of Budget that may be specific to one or more classes"
	(is-a Enumeration)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Cost_Category "Defines a particular category of Cost that may be specific to one or more classes"
	(is-a Enumeration)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Decision_Result "Defines the overall result of a Decision, e.g. Approved, Waiver Granted, Deferred, Escalated"
	(is-a Enumeration)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Decision_Type "Defines the specific types of Decisions that can be made, optionally against instances of one or more selected Classes, e.g. Solution Architecture Assessment, Strategic Planning Review"
	(is-a Enumeration)
	(role concrete)
	(multislot decision_type_possible_results
;+		(comment "The list of Decision Results that are possible for the Decision Type")
		(type INSTANCE)
;+		(allowed-classes Decision_Result)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Managed_Service_Scope "Defines the nature of the scope of a Managed Service, e.g. global, country-specific, region-specific, etc"
	(is-a Enumeration)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Managed_Service_Criticality "Defines levels of criticality for Managed Services"
	(is-a Enumeration)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass SYS_ENUMERATION "Enumerations that support the services provided by Essential"
	(is-a Enumeration)
	(role abstract)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass SYS_CONTENT_QUALITY_ENUMERATION "Enumerations that support Essential content quality management services"
	(is-a SYS_ENUMERATION)
	(role abstract)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass SYS_CONTENT_QUALITY_RELATIONSHIP_TYPE "Represents the nature of the relationship that an actor has to repository content being managed, e.g. direct stakeholder or indirect/independent"
	(is-a SYS_CONTENT_QUALITY_ENUMERATION)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass SYS_SLOT_PRIORITY_LEVEL "Defines a relative importance for a Slot"
	(is-a SYS_CONTENT_QUALITY_ENUMERATION)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass SYS_COMMUNICATION_METHOD "Defines the methods of communication that Essential can be used to contact users"
	(is-a SYS_ENUMERATION)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass SYS_FREQUENCY "Defines a time-based frequency in which an event can occur or an action can be taken"
	(is-a SYS_ENUMERATION)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass User_Count_Range "Defines a numercial range for the number of users of an EA element"
	(is-a Enumeration)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Recovery_Time_Objective "Represents the target amount of time an EA element should be unavailable for use by the enterprise"
	(is-a Enumeration)
	(role concrete)
	(multislot rto_for_business_criticalities
;+		(comment "The relative Business Criticalities of the EA elements to which this Response Time Objective should be applied")
		(type INSTANCE)
;+		(allowed-classes Business_Criticality)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Recovery_Point_Objective "Represents  the maximum amount of data – measured in terms of time – that can be lost after a recovery from the failure of an EA element"
	(is-a Enumeration)
	(role concrete)
	(multislot rpo_for_business_criticalities
;+		(comment "The relative Business Criticalities of the EA elements to which this Recovery Point Objective should be applied")
		(type INSTANCE)
;+		(allowed-classes Business_Criticality)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Viewer_Code_Library_Type "Defines the nature of a 3rd party library supporting one or more Essential Views or Editors"
	(is-a Enumeration)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Editor_Configuration_Enumeration "Abstract class for enumerations that support configurable Editors"
	(is-a Enumeration)
	(role abstract)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Editor_Slot_Type "Represents the types of slots supported by configurable Editors"
	(is-a Editor_Configuration_Enumeration)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Editor_Component_Cardinality "Represents the types of cardinality supported by an Editor Component"
	(is-a Editor_Configuration_Enumeration)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Editor_Component_Type "Defines the available types of Editor Component, e.g. Tab, Panel, Widget"
	(is-a Editor_Configuration_Enumeration)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Business_Differentiation_Level "Defines the degrees to which an element differentiates an enterprise from its competitors"
	(is-a Enumeration)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Software_Architecture_Layer "Defines a logical layer of a Software Arfchitecture to which a Software Component belongs"
	(is-a Enumeration)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Technology_Node_Type "Defines the nature of a technology node, e.g. physical server, firewall, virtual server, VLAN, WAN"
	(is-a Enumeration)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Time "Abstract class to manage instances that represent time, e.g. dates, quarter years, years."
	(is-a Utilities)
	(role abstract)
	(single-slot time_year
;+		(comment "Slot to manage the month 'year' of a Time instance")
		(type SYMBOL)
		(allowed-values 2000 2001 2002 2003 2004 2005 2006 2007 2008 2009 2010 2011 2012 2013 2014 2015 2016 2017 2018 2019 2020 2021 2022 2023 2024 2025 2026 2027 2028 2029 2030 2031 2032 2033 2034 2035 2036 2037 2038 2039 2040 2041 2042 2043 2044 2045 2046 2047 2048 2049 2050)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Time)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Year "Class to manage instances of Time that are represented simply as years. Capture the required year in the name slot."
	(is-a Time)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Year)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Quarter "Class to manage instances of Time that are represented by a quarter year. The displayed name is derived from the values in the quarter and year [name] slots"
	(is-a Time)
	(role concrete)
	(single-slot time_quarter
;+		(comment "Slot to manage the quarter 'value' of a Time instance.")
		(type SYMBOL)
		(allowed-values Q1 Q2 Q3 Q4)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Quarter)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Gregorian "Class to manage instances of Time that are represented using a full Gregorian date. The name of each instance is derived from the values of the day, month and year [name]."
	(is-a Time)
	(role concrete)
	(single-slot time_day
;+		(comment "Slot to manage the day 'value' of a Time instance.")
		(type SYMBOL)
		(allowed-values 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot time_month
;+		(comment "Slot to manage the month 'value' of a Time instance")
		(type SYMBOL)
		(allowed-values 1 2 3 4 5 6 7 8 9 10 11 12)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Gregorian)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Geography "Classes to represent and manage geopolitical regions and locations."
	(is-a Utilities)
	(role abstract)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Utilities)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Geographic_Region "Class to represent a geographical region. Regions can be classified by the Region Type taxonomy, enabling any real-world and arbitrary region to be defined and managed, e.g. Country, State, Continent, Geopolitical Region."
	(is-a Geography)
	(role concrete)
	(multislot gr_locations
;+		(comment "The individual geographical locations that are contained within this region (e.g. cities, towns)")
		(type INSTANCE)
;+		(allowed-classes Geographic_Location)
		(create-accessor read-write))
	(single-slot gr_region_centrepoint
;+		(comment "A longitude and latitude for the centre of the region")
		(type INSTANCE)
;+		(allowed-classes GeoCode)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot gr_region_identifier
;+		(comment "An optional unique identifier for a region (e.g. ISO Country Code)")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot gr_contained_regions
;+		(comment "The sub-regions that are contained within this region")
		(type INSTANCE)
;+		(allowed-classes Geographic_Region)
		(create-accessor read-write))
	(multislot gr_region_borders
;+		(comment "Captures the set of GeoCodes that plot the borders of the region")
		(type INSTANCE)
;+		(allowed-classes GeoCode)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Utilities)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Geographic_Location "Class to manage specific point geographical locations. Unlike the Geographical Region, locations have a geocode to identify that location, e.g. cities, towns, streets."
	(is-a Geography)
	(role concrete)
	(single-slot gl_identifier
;+		(comment "A unique identifier for the Geographic Location")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Utilities)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot gl_geocode
;+		(comment "A single geocode (representing a geographical point) for the Geographic Location")
		(type INSTANCE)
;+		(allowed-classes GeoCode)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass GeoCode "Manages a number representation format for geospatial coordinate measurements that provide details of the exact location of geospatial point at, below, or above the surface of the earth."
	(is-a Geography)
	(role concrete)
	(single-slot geocode_longitude
;+		(comment "Captures the geographic coordinate that specifies the east-west position of the geocode")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot geocode_latitude
;+		(comment "Captures the geographic coordinate that specifies the north-south position of the geocode")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Utilities)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Synonym "Class to manage synonyms for any element in the model. Synonyms can be classified by Taxonomies, e.g. Languages, Organisation Units, Domains and so on. Synonyms are managed from the element to which they apply and so, an explicit bi-directional relationship is not defined.\nThe Name field, defines the name of the synonym and in this context, the Description field is certainly optional."
	(is-a Utilities)
	(role concrete)
	(single-slot synonym_language
;+		(comment "A spoken or written human language in which the synonym is captured")
		(type INSTANCE)
;+		(allowed-classes Language)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Utilities)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Language "Represents a spoken or written human language"
	(is-a Utilities)
	(role concrete)
	(single-slot lang_display_label
;+		(comment "The string to be displayed as a label for the language")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot lang_english_name
;+		(comment "The name of the language in English")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot lang_native_name
;+		(comment "The name of the language as written natively")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot right_to_left_text
;+		(comment "Specifies whether the text direction for a given language is right to left.")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Utilities)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Commentary "Generic class used to hold free text information against an EA element, supporting internationalisation."
	(is-a Utilities)
	(role concrete)
	(single-slot comment_seq_number
;+		(comment "Integer that defines the position of a comment within a set of comments (e.g. those associated with a particular instances)")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Utilities)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Label "Generic class used to define labels for elements supporting internationalisation"
	(is-a Commentary)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Utilities)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Currency "Represents a system of money in general use in a particular country."
	(is-a Utilities)
	(role concrete)
	(single-slot currency_code
;+		(comment "The ISO standard code for the currency (e.g. GBP, USD, EUR)")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot currency_symbol
;+		(comment "The symbol typically used to represent the currency (e.g. £, $, ¨)")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot currency_is_default
;+		(comment "Defines whether this is the default currency for the enterprise")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default FALSE)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Utilities)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Essential_Viewer "Elements that support the reporting capabilities of the Essential Architecture Manager Tool - the Essential Viewer"
	(is-a EA_Support)
	(role abstract)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Essential_Viewer)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Report_Classification "DEPRECATED in v2.0. A classification of reports. The set of classifications defines the list of categories that are presented in the report catalogues in Essential Viewer"
	(is-a Essential_Viewer)
	(role concrete)
	(single-slot report_classification_colour
;+		(comment "The code for the colour associated with this report classification")
		(type STRING)
		(default "#000000")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot report_classification_sequence_number
;+		(comment "The number that indicates the ordering of the report classification")
		(type INTEGER)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot report_classification_label
;+		(comment "The label to be displayed for the report category")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot report_classification_intro
;+		(comment "Provides an introduction for the set of reports associated with this report classification")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Report_Classification)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot report_classification_contained_reports
;+		(comment "The set of reports associated with this report classification")
		(type INSTANCE)
;+		(allowed-classes Report)
		(create-accessor read-write)))

(defclass Report "A report that is generated by the Essential Viewer."
	(is-a Essential_Viewer)
	(role concrete)
	(single-slot report_xsl_filename
;+		(comment "The name of the xsl file for this report")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot report_filter_excluded_slots
		(type INSTANCE)
;+		(allowed-classes %3AESSENTIAL-SLOT)
		(create-accessor read-write))
	(multislot rp_report_constants
;+		(comment "Defines the report constants that are used by this report")
		(type INSTANCE)
;+		(allowed-classes Report_Constant)
		(create-accessor read-write))
	(single-slot report_history_label
;+		(comment "Defines the label prefix that should be provided as the history label for the report")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot report_anchor_class
;+		(comment "The meta-class of the instance or instances that are the primary focus of the Report")
		(type INSTANCE)
;+		(allowed-classes %3AESSENTIAL-CLASS)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot report_filter_included_slots
;+		(comment "Defines the slots that should be included as filters for this Report")
		(type INSTANCE)
;+		(allowed-classes %3AESSENTIAL-SLOT)
		(create-accessor read-write))
	(single-slot report_cache_configuration
;+		(comment "The configuration for automatic pre-caching of the Report")
		(type INSTANCE)
;+		(allowed-classes Report_Cache_Configuration)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot report_scoping_api
;+		(comment "The Dataset API that provides the lists of instances that can be used to scope this view")
		(type INSTANCE)
;+		(allowed-classes Data_Set_API)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot report_context_xsl_filename
;+		(comment "Defines the filename for the xsl document that surrounds a non-html report")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot report_qualifying_report
;+		(comment "Defines a report (typically a catalogue) that is used as a pre-qualifier for this report")
		(type INSTANCE)
;+		(allowed-classes Report)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot viewer_code_libraries
;+		(comment "Defines the 3rd party libraries that supports the execution of this Editor Component")
		(type INSTANCE)
;+		(allowed-classes Viewer_Code_Library)
		(create-accessor read-write))
	(single-slot report_label
;+		(comment "The label that is displayed for the report")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot report_is_enabled
;+		(comment "Defines whether the report should be made available in Essential Viewer")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default TRUE)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot report_qualifying_intro_text
;+		(comment "Defines the text that should be used in a qualifying report (typically a catalogue) when pre-selecting an element for this report")
		(type INSTANCE)
;+		(allowed-classes Commentary)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot report_pdf_configuration
;+		(comment "The configuration to be used when generating a PDF of the Report")
		(type INSTANCE)
;+		(allowed-classes Report_PDF_Configuration)
		(default [essential_baseline_v6_10_4_Class10014])
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot report_parameter1
;+		(comment "An optional parameter that can be passed to the report - DEPRECATED")
		(type INSTANCE)
;+		(allowed-classes EA_Class)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot report_parameters
;+		(comment "The list of pre-defined parameters for this report")
		(type INSTANCE)
;+		(allowed-classes Report_Parameter)
		(create-accessor read-write))
	(multislot report_criteria
;+		(comment "An optional list of criteria and associated scroing scheme that is to be evaluated by the Report")
		(type INSTANCE)
;+		(allowed-classes Report_Criterion)
		(create-accessor read-write))
	(single-slot report_implementation_type
;+		(comment "Defines the implemenation approach used for the report")
		(type INSTANCE)
;+		(allowed-classes Report_Implementation_Type)
		(default [viewer3_devrep_14032012_003_Class10015])
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot report_screenshot_filename
;+		(comment "Slot to define the relative URL to a screenshot image for a Report instance. Typically, this is an png or jpeg file.")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Report)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot report_help_filename
;+		(comment "Slot to define the relative URL to the View Manual for a Report instance. Typically, this is an XSL file.")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Editor "Represents an Editor view that can be used to create, update or delete instances"
	(is-a Report)
	(role concrete)
	(multislot editor_data_set_apis
;+		(comment "The Data Set APIs tha are accessed by the Editor")
		(type INSTANCE)
;+		(allowed-classes Data_Set_API)
		(create-accessor read-write))
	(single-slot editor_supporting_config
;+		(comment "Used to hold configuration that is specific to this Editor instance (typically in JSON format)")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot editor_menu_link_classes
;+		(comment "The set of classes for which menu links are used in the Editor")
		(type INSTANCE)
;+		(allowed-classes %3AESSENTIAL-CLASS)
		(create-accessor read-write))
	(multislot editor_included_head_content
;+		(comment "Optional HTML/Script content to be included in the header section of the Editor")
		(type STRING)
		(create-accessor read-write))
	(multislot editor_sections
;+		(comment "Defines one or more view sections contained within the Editor")
		(type INSTANCE)
;+		(allowed-classes Editor_Section)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(single-slot editor_supporting_config_path
;+		(comment "Defines the path to a file (typically JSON) containing custom configuration for the Editor")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot editor_is_external
;+		(comment "Defines whether the Editor is delivered by the Essential Viewer platform")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default FALSE)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Report)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Simple_Editor "Represents Editors that support the ability to update simple properties of one or more classes"
	(is-a Editor)
	(role concrete)
	(single-slot report_xsl_filename
;+		(comment "The name of the xsl file for this report")
		(type STRING)
		(default "editors/enterprise/dynamic-instance-editor/core_dynamic_instance_editor.html")
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Report)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot simple_editor_for_classes
;+		(comment "")
		(type INSTANCE)
;+		(allowed-classes %3AESSENTIAL-CLASS)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write)))

(defclass Configured_Editor "A  Editor that has been configured from a collection of Editor Components"
	(is-a Editor)
	(role concrete)
	(single-slot ce_configuration_path
;+		(comment "The path to the JSON file containing the configuration of the editor")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot ce_configuration_config
;+		(comment "Contains the UI layout and structural configuration of the editor")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ce_editor_js_path
;+		(comment "The path to the xsl file that generates the framework logic for the editor")
		(type STRING)
		(default "editors/configurable/configurable_editor_js.xsl")
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot ce_editor_components
;+		(comment "The Editor Components that are used bu this Configured Editor")
		(type INSTANCE)
;+		(allowed-classes Editor_Component Editor_Component_Configurator)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Report)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ce_configuration_id
;+		(comment "A unique identifier to the JSON document that defines the structure and detailed configuration of the Editor")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Data_Set_API "A view that delivers a data structure that can be consumed by another system"
	(is-a Report)
	(role concrete)
	(single-slot is_data_set_api_precached
;+		(comment "Slot to specify whether this Report API should be pre-cached")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot report_implementation_type
;+		(comment "Defines the implemenation approach used for the report")
		(type INSTANCE)
;+		(allowed-classes Report_Implementation_Type)
		(default [essential_baseline_v6_10_4_Class10000])
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot dsa_data_label
;+		(comment "The label to be used having rertievded the data set from this API")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Report)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Report_Group "DEPRECATED in v2.0. An arbitrary grouping of reports. This provides a level of grouping that operates above the Report Classifications and filters the reports that will be shown in the Report Classifications. Currently, Essential Viewer uses the Report Groups as the home page of the reporting website. By default, the Report Groups are aligned to the key architecture process areas."
	(is-a Essential_Viewer)
	(role concrete)
	(single-slot report_group_label
;+		(comment "The label to be displayed for the report group")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot report_group_image_file
;+		(comment "The name of the image file associated with the report group")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot report_group_intro_text
;+		(comment "The text used to introduce this report group")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot report_group_contained_reports
;+		(comment "The set of reports associated with this report group")
		(type INSTANCE)
;+		(allowed-classes Report)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Report_Group)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Menu_Management "Elements that support the definition of pop-up menus in Essential Viewer Reports"
	(is-a Essential_Viewer)
	(role abstract))

(defclass Report_Menu "Defines a pop-up menu that displays a set of links to Essential Viewer Reports"
	(is-a Menu_Management)
	(role concrete)
	(multislot report_menu_groups
;+		(comment "Defines groupings of links for the report menu")
		(type INSTANCE)
;+		(allowed-classes Report_Menu_Group)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(single-slot report_menu_is_default
;+		(comment "Determines whether this menu is the default menu for the associated meta-class")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default FALSE)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot report_menu_class
;+		(comment "Defines the meta-class that this menu is defined for")
		(type INSTANCE)
;+		(allowed-classes %3ASTANDARD-CLASS)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(single-slot report_menu_short_name
;+		(comment "The short name for the report manu")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass Report_Menu_Group "Defines a grouping of menu links to Essential Viewer Reports"
	(is-a Menu_Management)
	(role concrete)
	(multislot report_menu_parent_menus
;+		(comment "Defines tha parent menu that contains the menu group")
		(type INSTANCE)
;+		(allowed-classes Report_Menu)
		(create-accessor read-write))
	(single-slot report_menu_group_label
;+		(comment "Defines the label that should be displayed for the report menu group")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot report_menu_items
;+		(comment "Defines the list of menu item links that should be displayed for the menu group")
		(type INSTANCE)
;+		(allowed-classes Report_Menu_Item)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write)))

(defclass Report_Menu_Item "Defines a menu link to an Essential Viewer Report"
	(is-a Menu_Management)
	(role concrete)
	(single-slot report_menu_item_is_enabled
;+		(comment "")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default TRUE)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot menu_item_label
;+		(comment "Defines the label that should be displayed for the menu item")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot report_menu_item_category
;+		(comment "Defines the category of the menu item, e.g. summary, analysis")
		(type INSTANCE)
;+		(allowed-classes Menu_Item_Category)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot menu_item_short_name
;+		(comment "Defines the short name that should be used to identify the report menu item")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot report_menu_item_target_report
;+		(comment "Defines the report that the menu item navigates to")
		(type INSTANCE)
;+		(allowed-classes Report Editor_Section)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Essential_Viewer)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot report_menu_item_parent_groups
;+		(comment "Defines the menu group that contains this menu item")
		(type INSTANCE)
;+		(allowed-classes Report_Menu_Group)
		(create-accessor read-write)))

(defclass Report_Language ""
	(is-a Essential_Viewer)
	(role concrete)
	(single-slot rl_language
;+		(comment "The human language associated with this report language")
		(type INSTANCE)
;+		(allowed-classes Language)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Essential_Viewer)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot rl_is_enabled
;+		(comment "Defines whether the report language is available in the Essential Viewer")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default TRUE)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass Report_Styling "Elements that support the definition of specific styles associated with EA elements"
	(is-a Essential_Viewer)
	(role abstract)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Essential_Viewer)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Element_Style "Defines styling features for one or more elements"
	(is-a Report_Styling)
	(role concrete)
	(single-slot element_style_label
;+		(comment "A label to be associated with the element")
		(type INSTANCE)
;+		(allowed-classes Commentary)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot element_style_text_colour
;+		(comment "The text colour that should be applied to the elements")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot style_for_elements
;+		(comment "The elements that are being styled")
		(type INSTANCE)
;+		(allowed-classes Technology_Layer Information_Layer EA_Support Business_Layer Application_Layer EA_Relation %3AESSENTIAL-CLASS)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(single-slot element_style_icon
;+		(comment "The filename of the icon that should be used to represent the element")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Essential_Viewer)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot element_style_class
;+		(comment "The CSS class that should be applied to the elements")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot element_style_colour
;+		(comment "The colour that should be applied to the elements")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Report_Cache_Configuration "Class to define those Views and Reports that are to be pre-cached automatically."
	(is-a Essential_Viewer)
	(role concrete)
	(multislot cache_report_instances
;+		(comment "The set of Instances for which this report should be cached. e.g. The set of summary reports for specific elements that are to be cached.")
		(type INSTANCE)
;+		(allowed-classes EA_Class EA_Relation %3AEA_Graph_Relation)
		(create-accessor read-write))
	(single-slot cache_instance_type
;+		(comment "Defines the Class (type) of the instances for which the selected Report / View should be cached. e.g. a business process summary would accept instances of type Business Process Type")
		(type INSTANCE)
;+		(allowed-classes %3ASTANDARD-CLASS)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot cache_report
;+		(comment "The Report instance that is to be cached")
		(type INSTANCE)
;+		(allowed-classes Report)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Essential_Viewer)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Portal_Configuration ""
	(is-a Essential_Viewer)
	(role abstract)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Essential_Viewer)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Portal "A collection of Reports and/or Report Collection Groups that typically forms a portal or similar in Essential Viewer."
	(is-a Portal_Configuration)
	(role concrete)
	(single-slot portal_xsl_filename
;+		(comment "The name of the XSL file which acts as the template for the portal view.")
		(type STRING)
		(default "common/portal_template.xsl")
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot portal_panels
;+		(comment "")
		(type INSTANCE)
;+		(allowed-classes Portal_Panel)
		(create-accessor read-write))
	(multislot portal_sections
;+		(comment "The Portal_Groups that form the sections in a Portal")
		(type INSTANCE)
;+		(allowed-classes Portal_Section)
		(create-accessor read-write))
	(single-slot report_history_label
;+		(comment "Defines the label prefix that should be provided as the history label for the report")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot portal_intro_text
;+		(comment "The optional introductory text for the portal. Typically a short strapline around 8-16 words")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot portal_sequence
;+		(comment "Describes the order in which the Portals should appear when more than one is available")
		(type INTEGER)
		(default 0)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot portal_label
;+		(comment "The display label or title of the portal.")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Essential_Viewer)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot portal_is_enabled
;+		(comment "Defines whether the portal should be made available in Essential Viewer")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default TRUE)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot portal_image_path
;+		(comment "The path to the PNG or JPG file which will be displayed as part of the portal header")
		(type STRING)
		(default "images/758431_68934320.jpg")
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass Portal_Section "A collection of reports which describe a section within a Report Collection."
	(is-a Portal_Configuration)
	(role concrete)
	(single-slot portal_section_sequence
;+		(comment "The sequence in which the groups should be displayed in the portal.")
		(type INTEGER)
		(default 0)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot portal_section_label
;+		(comment "The label for a section within a portal")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Essential_Viewer)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot portal_section_reports
;+		(comment "The reports for this portal section")
		(type INSTANCE)
;+		(allowed-classes REPORT_TO_PORTAL_SECTION_RELATION)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(single-slot parent_portal
;+		(comment "")
		(type INSTANCE)
;+		(allowed-classes Portal)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass Portal_Panel "Describes a sidebar panel which can contain a mix of report links, static text and external hyperlinks"
	(is-a Portal_Configuration)
	(role concrete)
	(multislot reports_for_portal_panel
;+		(comment "The Reports which should be displayed in this panel")
		(type INSTANCE)
;+		(allowed-classes Report)
		(create-accessor read-write))
	(single-slot portal_panel_label
;+		(comment "The label used as a Title for this panel")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot portal_panel_sections
;+		(comment "The optional sub-sections that can appear within this panel")
		(type INSTANCE)
;+		(allowed-classes Portal_Panel_Section)
		(create-accessor read-write))
	(single-slot portal_panel_sequence
;+		(comment "The order in which the panels should appear in the sidebar")
		(type INTEGER)
		(default 0)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Essential_Viewer)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot panel_for_portal
;+		(comment "Parent Portal for this panel")
		(type INSTANCE)
;+		(allowed-classes Portal)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass Portal_Panel_Section "A subsection within a sidebar panel on a portal"
	(is-a Portal_Configuration)
	(role concrete)
	(single-slot portal_panel_section_label
;+		(comment "The label or title for this panel section")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot portal_parent_panel
;+		(comment "The parent panel for this section")
		(type INSTANCE)
;+		(allowed-classes Portal_Panel)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot portal_panel_section_sequence
;+		(comment "The sequence in which the panel sections should appear")
		(type INTEGER)
		(default 0)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot portal_panel_section_reports
;+		(comment "The reports that can appear within a panel section")
		(type INSTANCE)
;+		(allowed-classes Report)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Essential_Viewer)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot portal_panel_actors
;+		(comment "Actors to be displayed on the Portal Panel Section")
		(type INSTANCE)
;+		(allowed-classes Individual_Actor Group_Actor)
		(create-accessor read-write)))

(defclass Viewer_Styling "Sets values for colours and paths for images that can override the default values for Essential Viewer. Only one style should be active at a time."
	(is-a Essential_Viewer)
	(role concrete)
	(single-slot link_anchor_colour
;+		(comment "The default colour for links or anchors in Essential Viewer")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot viewer_icon_colour
;+		(comment "The colour for the icons in Viewer")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot header_logo_path
;+		(comment "The path to an image to be used in the header")
		(type STRING)
		(default "images/eas_logo_2014_white.png")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot style_is_active
;+		(comment "Set whether the select Viewer Styling instance should be used by Essential Viewer")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot viewer_text_secondary_colour
;+		(comment "The secondary text colour in Viewer. Typically used for hightlights and accents")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot viewer_text_primary_colour
;+		(comment "The primary colour for Viewer. Typically used for headings")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Essential_Viewer)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot secondary_header_colour_viewer
;+		(comment "The secondary header colour. Typically represented as a hexidecimal value e.g. #123456")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot primary_header_colour_viewer
;+		(comment "The primary header colour. Typically represented as a hexidecimal value e.g. #123456")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Report_Configuration "Elements that allow the behaviour of a report to configured"
	(is-a Essential_Viewer)
	(role abstract)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Essential_Viewer)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Report_Parameter "Provides the ability to pre-define parameters that are passed to Essential Viewer reports"
	(is-a Report_Configuration)
	(role concrete)
	(single-slot report_parameter_name
;+		(comment "The string that is passed as the parameter name")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot report_parameter_for_report
;+		(comment "Defines report that is passed this parameter")
		(type INSTANCE)
;+		(allowed-classes Report)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot report_parameter_string_value
;+		(comment "Defines a string that is passed as the parameter value")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Essential_Viewer)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot report_parameter_instance_value
;+		(comment "Defines an instance that is passed as the parameter value")
		(type INSTANCE)
;+		(allowed-classes EA_Class)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Report_Constant "Provides the ability to define constant values that are used across Essential Viewer reports"
	(is-a Report_Configuration)
	(role concrete)
	(multislot report_constant_ea_elements
;+		(comment "The EA elements or relations that are associated with this report constant")
		(type INSTANCE)
;+		(allowed-classes EA_Class EA_Relation)
		(create-accessor read-write))
	(single-slot report_constant_short_name
;+		(comment "An abbreviated name given to the Report Constant")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Essential_Viewer)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot report_constant_value
;+		(comment "The value of the Report Constant")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Report_Criterion "Represents a criterion (e.g. Cost) being evaluauted by a Report and associated scoring scheme (e.g. less than ¬£10,000 = 7/10, less than ¬£30,000 = 5/10)"
	(is-a Report_Configuration)
	(role concrete)
	(single-slot rc_weighting
;+		(comment "The relative weighting (from 1 - 10) for the criterion")
		(type SYMBOL)
		(allowed-values 1 2 3 4 5 6 7 8 9 10)
		(default 10)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot rc_report
;+		(comment "The reports that make use of this criterion")
		(type INSTANCE)
;+		(allowed-classes Report)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(single-slot rc_enabled
;+		(comment "Determines whether the criterion should be included for evaluation by the asscociated report")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default TRUE)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot rc_index
;+		(comment "An index for controlling the order in which report criterion are presented")
		(type INTEGER)
		(default 0)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot rc_label
;+		(comment "A user friendly label for the criterion")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot rc_scores
;+		(comment "Defines the list of scores to be given for specific values being evaluated")
		(type INSTANCE)
;+		(allowed-classes Report_Criterion_Score)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Essential_Viewer)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot rc_evaluation_factor
;+		(comment "Describes the factor that is being evaluated")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass Report_Criterion_Score "Represents a scoring evaluation for a given criterion"
	(is-a Report_Configuration)
	(role concrete)
	(single-slot rcs_criterion
;+		(comment "The criterion against which this score is assessed")
		(type INSTANCE)
;+		(allowed-classes Report_Criterion)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot rcs_score
;+		(comment "The score to be given to a value comparing positively to the criterion score value")
		(type SYMBOL)
		(allowed-values 0 1 2 3 4 5 6 7 8 9 10)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot rcs_enumerated_value
;+		(comment "An enumerated value to be given a score")
		(type INSTANCE)
;+		(allowed-classes Enumeration)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Essential_Viewer)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot rcs_index
;+		(comment "An index for controlling the order in which criterion scores are presented. NOTE: a score with index 0 is used as the default score if no other scores evaluate to true")
		(type INTEGER)
		(default 0)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot rcs_threshold_value
;+		(comment "A numerical threshold to be given a score")
		(type FLOAT)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot rcs_comparator
;+		(comment "Defines the nature of the comparison to the defined value")
		(type SYMBOL)
		(allowed-values %3C %3C%3D %3D %3E %3E%3D %3D%3D)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Report_PDF_Configuration "Defines the configuration for rendering a Report in PDF format"
	(is-a Report_Configuration)
	(role concrete)
	(single-slot report_pdf_margin_right
;+		(comment "The size of the margin in pixels on the right of the generated report pdf")
		(type INTEGER)
		(range 0 %3FVARIABLE)
		(default 0)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot report_pdf_scale
;+		(comment "The scaling factor for the generated pdf")
		(type FLOAT)
		(range 0.25 1.0)
		(default 1.0)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot report_pdf_margin_left
;+		(comment "The size of the margin in pixels on the left of the generated report pdf")
		(type INTEGER)
		(range 0 %3FVARIABLE)
		(default 0)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot report_pdf_paper_width
;+		(comment "The width in inches of the generated report pdf. The default value of 15 provides the best results for A4")
		(type INTEGER)
		(default 15)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot report_pdf_margin_top
;+		(comment "The size of the margin in pixels at the top of the generated report pdf")
		(type INTEGER)
		(range 0 %3FVARIABLE)
		(default 0)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot report_pdf_paper_height
;+		(comment "The height in inches of the generated report pdf. The default value (18) provides the best results for A4")
		(type INTEGER)
		(default 18)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot report_pdf_config_is_default
;+		(comment "Defines whether the PDF Configuration is a default configuration")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default FALSE)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot report_pdf_margin_bottom
;+		(comment "The size of the margin in pixels at the bottom of the generated report pdf")
		(type INTEGER)
		(range 0 %3FVARIABLE)
		(default 0)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot report_pdf_wait_delay
;+		(comment "The maximum length of time in seconds required to generate the report pdf")
		(type INTEGER)
		(range 1 %3FVARIABLE)
		(default 10)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Essential_Viewer)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot report_pdf_is_landscape
;+		(comment "Defines whether the generated report pdf has a landscape page layout")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default TRUE)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Editor_Configuration "ESSENTIAL CLOUD/DOCKER ONLY: Elements that support or define configuration of Editor views"
	(is-a Essential_Viewer)
	(role abstract)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Essential_Viewer)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Editor_Section "ESSENTIAL CLOUD/DOCKER ONLY: Represents a specific section within an Editor view"
	(is-a Editor_Configuration)
	(role concrete)
	(single-slot editor_section_label
;+		(comment "Defines the displayed label for the Editor Section")
		(type STRING)
		(default "Main")
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot editor_section_is_default
;+		(comment "Defines whether this section is the default section to access when opening the parent Editor")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default TRUE)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot editor_section_parent
;+		(comment "Defines the parent Editor of the Editor Section")
		(type INSTANCE)
;+		(allowed-classes Editor)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot editor_section_anchor_id
;+		(comment "Provides the id of the anchor position of the Editor Section")
		(type STRING)
		(default "main_section")
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Essential_Viewer)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Editor_Component_Configurator "Represents a component that can be used to configure an Editor Component"
	(is-a Editor_Configuration)
	(role concrete)
	(single-slot editor_component_execution_logic_path
;+		(comment "Defines the path to the JavaScript fragment containing the Editor Component interface Class definition (properties and methods e.g. init, draw, etc) , variables and supporting functions")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot editor_component_execution_module_name
;+		(comment "Defines the name of the JavaScript Class that acts as the interface to the Editor Component logic")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot editor_component_display_label
;+		(comment "A user friendly label for the Editor Component")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot editor_component_execution_html_path
;+		(comment "The path to the HTML fragment containing the visual presentation of the Editor Component")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot editor_component_config_for_component
;+		(comment "The Editor Component for which this is the Editor Component Configurator")
		(type INSTANCE)
;+		(allowed-classes Editor_Component)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Essential_Viewer)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot editor_component_config_settings_path
;+		(comment "The path to the file containing the settings required to configure the associated Editor Component")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass Editor_Component "Represents a self contained, re-usable component that can be used to edit one or more instance slots"
	(is-a Editor_Configuration)
	(role concrete)
	(multislot editor_component_for_specific_slots
;+		(comment "Any slots that this Editor Component specifically supports")
		(type INSTANCE)
;+		(allowed-classes %3AESSENTIAL-SLOT)
		(create-accessor read-write))
	(single-slot editor_component_supported_cardinality
;+		(comment "The slot cardinality supported by the Editor Component")
		(type INSTANCE)
;+		(allowed-classes Editor_Component_Cardinality)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot editor_component_required_classes
;+		(comment "Defines the classes of instance lists required by this component")
		(type INSTANCE)
;+		(allowed-classes %3AESSENTIAL-CLASS)
		(create-accessor read-write))
	(multislot viewer_code_libraries
;+		(comment "Defines the 3rd party libraries that supports the execution of this Editor Component")
		(type INSTANCE)
;+		(allowed-classes Viewer_Code_Library)
		(create-accessor read-write))
	(single-slot editor_component_supported_slot_type
;+		(comment "The type of slot that the Editor Component can edit")
		(type INSTANCE)
;+		(allowed-classes Editor_Slot_Type)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot editor_component_for_specific_properties
;+		(comment "Any API resource properties that this Editor Component specifically supports")
		(type STRING)
		(create-accessor read-write))
	(single-slot editor_component_execution_module_name
;+		(comment "Defines the name of the JavaScript Class that acts as the interface to the Editor Component logic")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot editor_component_execution_logic_path
;+		(comment "Defines the path to the JavaScript fragment containing the Editor Component interface Class definition (properties and methods e.g. init, draw, etc) , variables and supporting functions")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot editor_component_display_label
;+		(comment "A user friendly label for the Editor Component")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot editor_component_configurator
;+		(comment "The configurator for this Editor Component")
		(type INSTANCE)
;+		(allowed-classes Editor_Component_Configurator)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot editor_component_execution_html_path
;+		(comment "The path to the HTML fragment containing the visual presentation of the Editor Component")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot editor_component_for_specific_classes
;+		(comment "Any Essential classes for which this component is specifically defined")
		(type INSTANCE)
;+		(allowed-classes %3AESSENTIAL-CLASS)
		(create-accessor read-write))
	(single-slot editor_component_supports_sub_components
;+		(comment "Defines whether teh component suipports sub components")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default FALSE)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot editor_component_type
;+		(comment "Defines the nature of the Editor Component from a UI perspective, e.g. Tab, Panel or Widget")
		(type INSTANCE)
;+		(allowed-classes Editor_Component_Type)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Essential_Viewer)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Widget_Configuration "Classes related to the configuration of high-level presentation slides"
	(is-a Essential_Viewer)
	(role abstract)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Essential_Viewer)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Widget_Template "Represents a widget template that, when populated, can be imported into a slide presentation or other document"
	(is-a Widget_Configuration)
	(role concrete)
	(single-slot pwt_renderer_file_path
;+		(comment "The path to the file containing the function that renders the template")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot pwt_height
;+		(comment "The default height of the widget template when rendered")
		(type INTEGER)
		(default 500)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot pwt_function_name
;+		(comment "Defines a unique name for the function that renders the template")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot pwt_user_defined_text
;+		(comment "A list of labels for text elements that can be defined by a user")
		(type STRING)
		(create-accessor read-write))
	(single-slot pwt_screenshot_file_path
;+		(comment "Provides the path to the image file containing a screenshot of the Presentation Widget Temlate")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot pwt_width
;+		(comment "The default width of the widget template when rendered")
		(type INTEGER)
		(default 500)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Essential_Viewer)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Widget "Represents a domain-specific rendering of a  Widget Template, e.g. Application Deployment World Map, Technology Lifecycle Bar Chart"
	(is-a Widget_Configuration)
	(role concrete)
	(single-slot pw_widget_id
;+		(comment "A unique id for the rendered WIdget")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot pw_function_name
;+		(comment "The base name used for functions that transforms the Data Set API data and render the Widget")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot pw_data_set_api
;+		(comment "Defines the API that provides the data set needed to populate the Presentation Widget")
		(type INSTANCE)
;+		(allowed-classes Data_Set_API)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot pw_render_file_path
;+		(comment "The path to the file that transforms data provided by the Data Set API to that expected and renders the widget template")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot pw_widget_template
;+		(comment "The template used to render the widget")
		(type INSTANCE)
;+		(allowed-classes Widget_Template)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Essential_Viewer)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot pw_is_enabled
;+		(comment "Determines whether the widget is available to be used")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default TRUE)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass Widget_Styling ""
	(is-a Widget_Configuration)
	(role abstract)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Essential_Viewer)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Widget_Theme "Represents a collection of styles used to define the colour scheme of Presentation Widgets"
	(is-a Widget_Styling)
	(role concrete)
	(multislot pwt_category_colour_scheme
;+		(comment "Defines a sequence of colours to be used when styling widgets with categorised values (e.g. pie chart)")
		(type INSTANCE)
;+		(allowed-classes Widget_Theme_Colour)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(single-slot pwt_is_default
;+		(comment "Determines whether the Theme should be used as the default for styling Presentation Widgets")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default FALSE)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot pwt_styles
;+		(comment "The list of styles that comprise the theme")
		(type INSTANCE)
;+		(allowed-classes Widget_Theme_Style)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Essential_Viewer)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Widget_Theme_Style "Represents styling properties used to style elements of a specific class"
	(is-a Widget_Styling)
	(role concrete)
	(single-slot pws_styled_class
;+		(comment "The class used to select Presentation Widget elements to which the style should be applied")
		(type INSTANCE)
;+		(allowed-classes Widget_Style_Class)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot pws_theme
;+		(comment "The theme to which the style belongs")
		(type INSTANCE)
;+		(allowed-classes Widget_Theme)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot pws_style_values
;+		(comment "A string representation of a JSON object representing the css style property values")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Essential_Viewer)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Widget_Font_Family "Provides details for a font famnily to be used when rendering Presentation Widgets"
	(is-a Widget_Styling)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Essential_Viewer)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Widget_Theme_Colour "An indexed colour used by a Presentation Widget Theme"
	(is-a Widget_Styling)
	(role concrete)
	(single-slot pwtc_colour
;+		(comment "The string representation (e.g. hex) of the colour")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot pwtc_theme
;+		(comment "The parent Presentation Widget Theme using the colour")
		(type INSTANCE)
;+		(allowed-classes Widget_Theme)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot pwtc_index
;+		(comment "The sequencing index of the Presentation Colour Theme colour")
		(type INTEGER)
		(default 1)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Essential_Viewer)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Modal_Management "ESSENTIAL CLOUD/DOCKER ONLY: Elements that support the definition of pop-up modal views/forms in Essential Viewer"
	(is-a Essential_Viewer)
	(role abstract)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Essential_Viewer)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Modal_Report "ESSENTIAL CLOUD/DOCKER ONLY: Defines a static or interactive report/editor that is presented to a user as a popup modal"
	(is-a Modal_Management)
	(role concrete)
	(single-slot modal_report_is_enabled
;+		(comment "Determines whether the report modal is visible in the Essential Viewer")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default FALSE)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot modal_report_template_name
;+		(comment "Defines the name of the template used to display the content of the modal")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot modal_report_js_name
;+		(comment "Provide a short, javascript compatible name for the modal report which is also used for the DOM element (DIV) containing the modal")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot modal_report_menu_label
;+		(comment "The label to be used in a menu popup for this modal report")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot modal_report_menu_item_category
;+		(comment "If the modal is to be accessed via a popup, menu, define the category to which the associated menu item belongs")
		(type INSTANCE)
;+		(allowed-classes Menu_Item_Category)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Essential_Viewer)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot modal_report_for_classes
;+		(comment "The meta-classes for which this modal report is relevant")
		(type INSTANCE)
;+		(allowed-classes %3AESSENTIAL-CLASS)
		(create-accessor read-write))
	(multislot modal_report_content_apis
;+		(comment "Defines the Data Set APIs that provide read access to content to be dynamically displayed in the modal")
		(type INSTANCE)
;+		(allowed-classes Data_Set_API)
		(create-accessor read-write)))

(defclass Viewer_Code_Library "Defines a 3rd party library used to implement one or more Views or Editors"
	(is-a Essential_Viewer)
	(role concrete)
	(single-slot vcl_included_html_path
;+		(comment "The path to the HTML fragment containing references/links to the files that comprise the 3rd party library")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot vcl_library_type
;+		(comment "The nature of the 3rd party library, e.g. Javascript, CSS")
		(type INSTANCE)
;+		(allowed-classes Viewer_Code_Library_Type)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot vcl_license
;+		(comment "The license that applies to the 3rd party library")
		(type INSTANCE)
;+		(allowed-classes License)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Essential_Viewer)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass EA_Repository_Management "Abstract Base class for all meta classes that support  processes  to maintain the EA Repository."
	(is-a EA_Support)
	(role abstract)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass EA_Content_Owner "Class to capture an individual who is responsible for the quality of content associated with specific EA elements"
	(is-a EA_Repository_Management)
	(role concrete)
	(single-slot owning_individual
;+		(comment "The actor in a given role who is responsible for the associated EA content")
		(type INSTANCE)
;+		(allowed-classes ACTOR_TO_ROLE_RELATION)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot owned_ea_content
;+		(comment "The set of EA elements that are owned by the Content Owner")
		(type INSTANCE)
;+		(allowed-classes EA_Class EA_Relation)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot owning_organisation
;+		(comment "The Group Actor on who's behalf the content owner is managing the associated EA content")
		(type INSTANCE)
;+		(allowed-classes Group_Actor)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass SYS_CONTENT_QUALITY_MANAGEMENT "Abstract class grouping classes used by Essential to provide content quality management services"
	(is-a EA_Repository_Management)
	(role abstract)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass SYS_CONTENT_QUALITY_REVIEW_POLICY "Defines the frequency and responsibilities for reviewing the quality of instances of a specific class"
	(is-a SYS_CONTENT_QUALITY_MANAGEMENT)
	(role concrete)
	(single-slot system_cq_policy_assigned_role
;+		(comment "The individual role that is responsible for performing the content quality review")
		(type INSTANCE)
;+		(allowed-classes SYS_CONTENT_QUALITY_POLICY_TO_ROLE_RELATION)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot system_cq_review_policy_for_essential_class
;+		(comment "The class for which this policy defines the content quality review intervals and responsibilities etc")
		(type INSTANCE)
;+		(allowed-classes %3AESSENTIAL-CLASS)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot system_cq_review_policy_reviewer_instance_dataset_api
;+		(comment "The dataset APi that provides the data to be used in Content Review Dashboards for this class")
		(type INSTANCE)
;+		(allowed-classes Data_Set_API)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot system_cq_policy_comms_methods
;+		(comment "The frequencies and modes of communication that should be used when communicating with the actor playing the role assigned to the policy")
		(type INSTANCE)
;+		(allowed-classes SYS_ELEMENT_TO_COMMS_METHOD_RELATION)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(single-slot system_cq_review_policy_interval
;+		(comment "The number of days between content quality reviews for instances of the class")
		(type INTEGER)
		(range 1 %3FVARIABLE)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot system_cq_review_policy_instance_manager_table_header_template_path
;+		(comment "The path to the HTML template that generates the headers and footers for the table displayed in the Content Manager Dashboard")
		(type STRING)
		(default "editors/enterprise/content-governance-dashboard/default-content-reviewer-instance-manager-table-header-template.html")
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot system_cq_review_policy_reviewer_dashboard
		(type INSTANCE)
;+		(allowed-classes Editor)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot system_cq_review_policy_instance_manager_table_body_template_path
;+		(comment "The path to the HTML template that generates the rows in the Content Manager Dashboard")
		(type STRING)
		(default "editors/enterprise/content-governance-dashboard/default-content-reviewer-instance-manager-table-body-template.html")
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot system_cq_review_policy_manager_instance_template_path
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot system_cq_review_policy_manager_instance_api_params
;+		(comment "The URL paramteres to be used when requesting to populate the Content Manager Dashboards for this class")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot system_is_cq_review_polcy_enabled
;+		(comment "Defines whether this content quality review policy should be applied")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default TRUE)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot system_cq_review_policy_reviewer_instance_api_params
;+		(comment "The URL paramteres to be used when requesting to populate the Content Review Dashboards for this class")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot system_cq_review_policy_default_editor
;+		(comment "The deafult editor that should be used to edit instances of the class against which the policy is defined")
		(type INSTANCE)
;+		(allowed-classes Editor)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot system_cq_review_escalation_policies
;+		(comment "The escalation policies that should be applied when a content quality review becomes overdue")
		(type INSTANCE)
;+		(allowed-classes SYS_CONTENT_QUALITY_ESCALATION_POLICY)
		(create-accessor read-write))
	(single-slot system_cq_review_policy_notice_period
;+		(comment "The number of days notice that content reviewers should be given prior to being notified that an instance requires review")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot system_cq_review_policy_manager_instance_dataset_api
;+		(comment "The dataset APi that provides the data to be used in Content Manager Dashboards for this class")
		(type INSTANCE)
;+		(allowed-classes Data_Set_API)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot system_cq_review_policy_reviewer_instance_template_path
;+		(comment "The path to the content template that should be used to generate a read-only summary of an instance to be reviewed")
		(type STRING)
		(default "editors/enterprise/content-governance-dashboard/default-content-reviewer-instance-review-template.html")
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot system_cq_review_policy_instance_table_body_template_path
;+		(comment "The path to the content template that should be used to generate rows in the review dashboard instance table")
		(type STRING)
		(default "editors/enterprise/content-governance-dashboard/default-content-reviewer-instance-table-body-template.html")
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot system_cq_review_policy_escalation_point_dashboard
		(type INSTANCE)
;+		(allowed-classes Editor)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot system_cq_review_policy_instance_table_header_template_path
;+		(comment "The path to the content template that should be used to generate the header and footer of the reviewer dashboard instance table")
		(type STRING)
		(default "editors/enterprise/content-governance-dashboard/default-content-reviewer-instance-table-header-template.html")
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass SYS_CONTENT_QUALITY_ESCALATION_POLICY "Defines the length of time and responsibilities for the escalation of overdue reviews of instances of a specific class"
	(is-a SYS_CONTENT_QUALITY_MANAGEMENT)
	(role concrete)
	(single-slot system_cq_policy_assigned_role
;+		(comment "The individual role that is responsible for performing the content quality review")
		(type INSTANCE)
;+		(allowed-classes SYS_CONTENT_QUALITY_POLICY_TO_ROLE_RELATION)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot system_cq_policy_comms_methods
;+		(comment "The frequencies and modes of communication that should be used when communicating with the actor playing the role assigned to the policy")
		(type INSTANCE)
;+		(allowed-classes SYS_ELEMENT_TO_COMMS_METHOD_RELATION)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(single-slot system_escalation_policy_for_cq_review_policy
;+		(comment "The content quality review policy to which this escalation policy applies")
		(type INSTANCE)
;+		(allowed-classes SYS_CONTENT_QUALITY_REVIEW_POLICY)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot sequence_number
;+		(comment "An integer that defines the sequence step at which this relationship occurs within the dynamic view of an architecture.")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot system_cq_escalation_policy_interval
;+		(comment "The number of days after the associated interval of the associated Content Review Policy or previous Escalation Policy, when this Escalation Policy should be enacted")
		(type INTEGER)
		(range 1 %3FVARIABLE)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass SYS_CLASS_SLOT_PRIORITY "Defines the relative importance of a Slot being populated for instances of a specific Class"
	(is-a SYS_CONTENT_QUALITY_MANAGEMENT)
	(role concrete)
	(single-slot system_essential_slot_priority_level
;+		(comment "The relative priority/importance for the slot being populated in instances of the class")
		(type INSTANCE)
;+		(allowed-classes SYS_SLOT_PRIORITY_LEVEL)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot system_essential_slot_priority_of_slot
;+		(comment "The slot that is defined as being a priority for instances of the class")
		(type INSTANCE)
;+		(allowed-classes %3AESSENTIAL-SLOT)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot system_essential_slot_priority_for_class
;+		(comment "The class for which the slot is a priority")
		(type INSTANCE)
;+		(allowed-classes %3AESSENTIAL-CLASS)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass SYS_CONTENT_QUALITY_REVIEW "Represents a content quality review being undertaken against an instance"
	(is-a SYS_CONTENT_QUALITY_MANAGEMENT)
	(role concrete)
	(single-slot system_content_quality_review_assigned_to_actor
;+		(comment "The actor to which this Content Quality Review is currently assigned")
		(type INSTANCE)
;+		(allowed-classes SYS_CONTENT_QUALITY_REVIEW_TO_ACTOR_RELATION)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot system_content_quality_review_completion_datetime_iso8601
;+		(comment "The date and time when this Content Quality Review was completed")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot system_content_quality_review_escalations
;+		(comment "The escalations for the Content Quality Review")
		(type INSTANCE)
;+		(allowed-classes SYS_CONTENT_QUALITY_ESCALATION_TO_ACTOR_RELATION)
		(create-accessor read-write))
	(single-slot system_content_quality_review_for_element
;+		(comment "The element for which the content quality is under review")
		(type INSTANCE)
;+		(allowed-classes EA_Class EA_Relation %3AEA_Graph_Relation)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot system_content_quality_review_completed_by_actor
;+		(comment "The actor that completed this Content Quality Review")
		(type INSTANCE)
;+		(allowed-classes Individual_Actor ACTOR_TO_ROLE_RELATION)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot system_content_quality_review_status
;+		(comment "The current lifecycle status of the Content Quality Review")
		(type INSTANCE)
;+		(allowed-classes SYS_CONTENT_QUALITY_REVIEW_STATUS)
		(default [store_55_Class3])
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass External_Integration "Abstract base class for integration the Essential Repository with external repositories"
	(is-a EA_Support)
	(role abstract)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes External_Integration)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass External_Repository "Class to define an external repository that will be integrated with Essential. This provides the scope for external instance IDs"
	(is-a External_Integration)
	(role concrete)
	(multislot instance_references_of_external_respository
;+		(comment "The unique instnce references that are defined for this external repository")
		(type INSTANCE)
;+		(allowed-classes External_Instance_Reference)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes External_Repository)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass External_Instance_Reference "Class to hold the details for an external instance reference from an external repository. This is attached to an Essential instance to capture mapping of instances between repositories"
	(is-a External_Integration)
	(role concrete)
	(single-slot referenced_instance
;+		(comment "Relationship to the instance which is using an External Instance Reference")
		(type INSTANCE)
;+		(allowed-classes EA_Class EA_Relation %3AEA_Graph_Relation)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot external_update_date
;+		(comment "Slot to capture the date/time of when this reference was last updated. Created typically using default Java DateFormat.getDateTimeInstance()")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot external_repository_reference
;+		(comment "Specifies the external repository that this reference is from")
		(type INSTANCE)
;+		(allowed-classes External_Repository)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot external_instance_reference
;+		(comment "Slot to specify the instance ID of an element in an external [to Essential] repository")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes External_Instance_Reference)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass External_Reference_Link "Class to manage links to external resources that are relevant to elements in the Essential Architecture Manager repository model, e.g. documentation. Links are defined by a URL."
	(is-a External_Integration)
	(role concrete)
	(single-slot erl_source_name
;+		(comment "The name of the organisation or individual that is the source of the externally referenced content")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot external_link_type
;+		(comment "The format of the external link e.g. xls for a Microsoft Excel document")
		(type INSTANCE)
;+		(allowed-classes Document_File_Type)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot erl_date_iso_8601
;+		(comment "Captures a date in ISO 8601 format (yyyy-mm-dd) to associate with the externally referenced content")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot erl_source_email
;+		(comment "The email address of the organisation or individual that is the source of the externally referenced content")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot erl_source_url
;+		(comment "The url of the organisation or individual that is the source of the externally referenced content")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot erl_date
;+		(comment "Captures an instance of Time to associate a date with the externally referenced content")
		(type INSTANCE)
;+		(allowed-classes Time)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot external_reference_url
;+		(comment "Slot to hold a URL that identifies an external [to Essential Architecture Manager] resource.")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes External_Reference_Link)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot referenced_ea_instance
;+		(comment "Inverse slot maintaining the relationship back to the EA_Class instance that has the external reference link.")
		(type INSTANCE)
;+		(allowed-classes EA_Class)
		(create-accessor read-write)))

(defclass Value_Management "Abstract base class for all meta classes that support the management of value and related activities."
	(is-a EA_Support)
	(role abstract)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Revenue "Represents an amount of money earned from one or more EA elements"
	(is-a Value_Management)
	(role concrete)
	(multislot revenue_components
;+		(comment "The revenue components that make up the overall revenue")
		(type INSTANCE)
;+		(allowed-classes Revenue_Component)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(single-slot revenue_code
;+		(comment "An optional, unique code for the revenue")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot revenue_for_elements
;+		(comment "The EA elements to which this Revenue is attributed.")
		(type INSTANCE)
;+		(allowed-classes EA_Class)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(single-slot revenue_currency
;+		(comment "The default currency in which the contained revenue amounts are defined")
		(type INSTANCE)
;+		(allowed-classes Currency)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Revenue_Component "An amount of money representing revenue earned over a given period"
	(is-a Value_Management)
	(role concrete)
	(single-slot rc_revenue_component_type
;+		(comment "The type of the revenue component (e.g. commission, product sales, services)")
		(type INSTANCE)
;+		(allowed-classes Revenue_Component_Type)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot rc_revenue_end_date_iso_8601
;+		(comment "The end date for the revenue component in ISO 8601 format (yyyy-mm-dd)")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot rc_revenue_currency
;+		(comment "The currency in which the revenue is generated")
		(type INSTANCE)
;+		(allowed-classes Currency)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot rc_revenue_start_date_iso_8601
;+		(comment "The start date for the revenue component in ISO 8601 format (yyyy-mm-dd)")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot rc_revenue_start_date
;+		(comment "The start date for the revenue component")
		(type INSTANCE)
;+		(allowed-classes Time)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot rc_revenue_component_amount
;+		(comment "The amount of money being earned")
		(type FLOAT)
		(default 0.0)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot rc_revenue_component_of_revenue
;+		(comment "The overall revenue whithin which this component is contained")
		(type INSTANCE)
;+		(allowed-classes Revenue)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot rc_revenue_end_date
;+		(comment "The end date for the revenue component")
		(type INSTANCE)
;+		(allowed-classes Time)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Adhoc_Revenue_Component "Represents an amount of money that is earned from an EA element over an ad-hoc period of time"
	(is-a Revenue_Component)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Annual_Revenue_Component "Represents an amount of money that is earned from an EA element on an annual basis."
	(is-a Revenue_Component)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Quarterly_Revenue_Component "Represents an amount of money that is earned from an EA element on a quarterly basis."
	(is-a Revenue_Component)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Monthly_Revenue_Component "Represents an amount of money that is earned from an EA element on a monthly basis."
	(is-a Revenue_Component)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Revenue_Component_Change "Defines a positive or negative percentage change in a Revenue Component Type"
	(is-a Value_Management)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot change_percentage
;+		(comment "A positive or negative percentage change that is occuring")
		(type FLOAT)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot change_for_revenue_component_type
;+		(comment "The type of revenue for which the change is being defined")
		(type INSTANCE)
;+		(allowed-classes Revenue_Component_Type)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass Business_Context_Management "Category for classes that support the definition and analysis of the business contex in which the enterprise operates"
	(is-a EA_Support)
	(role abstract)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Business_Environment_Factor "A macro-level external factor that has the potential to impact the products, services , eco-system and operating model of the enterprise"
	(is-a Business_Context_Management)
	(role concrete)
	(single-slot bef_label
;+		(comment "A short label for the business environment factor")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot bef_category
;+		(comment "Defines the nature of the factor, e.g. Political, Legal, Social")
		(type INSTANCE)
;+		(allowed-classes Business_Environment_Category)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot bus_env_factor_correlations
;+		(comment "The quantitative correlations between this element and  Business Environment Factors")
		(type INSTANCE)
;+		(allowed-classes Business_Environment_Correlation_Dependency)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Strategy_Management)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Business_Environment_Factor_Change "Defines a positive or negative percentage change in a Business Environment Factor"
	(is-a Business_Context_Management)
	(role concrete)
	(single-slot change_for_bus_env_factor
;+		(comment "The business environment factor for which the change is being defined")
		(type INSTANCE)
;+		(allowed-classes Business_Environment_Factor)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot change_percentage
;+		(comment "A positive or negative percentage change that is occuring")
		(type FLOAT)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass Innovation_Management "Category for classes that support ideation and innovation activities"
	(is-a EA_Support)
	(role abstract)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Idea_Option "Represents a potential set of changes that could be made to address one or more Idea Requirements"
	(is-a Innovation_Management)
	(role concrete)
	(single-slot idea_lifecycle_status
;+		(comment "The current status of the Idea")
		(type INSTANCE)
;+		(allowed-classes Idea_Lifecycle_Status)
		(default [essential_baseline_6.5.4_Class75])
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot idea_for_strategic_reqs
;+		(comment "The list of requirements that the idea seeks to address")
		(type INSTANCE)
;+		(allowed-classes Strategic_Requirement)
		(create-accessor read-write))
	(single-slot system_content_lifecycle_status
;+		(comment "Defines the lifecycle status of an EA element in support of content approval")
		(type INSTANCE)
;+		(allowed-classes SYS_CONTENT_APPROVAL_STATUS)
		(default [essential_baseline_6.5.4_Class72])
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot idea_proposed_changes
;+		(comment "The set of changes that is being proposed for the Idea")
		(type INSTANCE)
;+		(allowed-classes IDEA_TO_ELEMENT_RELATION)
		(create-accessor read-write))
	(multislot idea_geo_scope
;+		(comment "The geographic regions that are in scope for the Idea")
		(type INSTANCE)
;+		(allowed-classes Geographic_Region)
		(create-accessor read-write)))

(defclass Dependency_Management "Classes that support the ability to define relative dependencies between EA elements"
	(is-a EA_Support)
	(role abstract)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Dependency "Classes that support the ability to define relative dependencies between EA elements"
	(is-a Dependency_Management)
	(role abstract)
	(single-slot dependency_to_element
;+		(comment "The element to which the dependency is defined")
		(type INSTANCE)
;+		(allowed-classes EA_Relation EA_Class)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Weighted_Dependency "Defines a dependency between two elements with an associated relative weighting"
	(is-a Dependency)
	(role abstract)
	(single-slot weighted_dependency_for_class
;+		(comment "The class within which this dependency is weighted")
		(type INSTANCE)
;+		(allowed-classes %3AESSENTIAL-CLASS)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot weighted_dependency_weighting
;+		(comment "The relatative weighting for this dependency")
		(type FLOAT)
		(range 0.0 1.0)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Business_Environment_Weighted_Dependency "A weighted dependency between an EA element and a Business Environment Factor"
	(is-a Weighted_Dependency)
	(role concrete)
	(single-slot be_weighted_dep_from_element
;+		(comment "The element that has the dependency on the business environment factor")
		(type INSTANCE)
;+		(allowed-classes EA_Relation EA_Class)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot dependency_to_element
;+		(comment "The element to which the dependency is defined")
		(type INSTANCE)
;+		(allowed-classes Business_Environment_Factor)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Capability_Weighted_Dependency "A weighted dependency between an EA element and a Business, Application or Technology Capability"
	(is-a Weighted_Dependency)
	(role concrete)
	(single-slot cap_weighted_dep_from_element
;+		(comment "The element that has the dependency on the capability")
		(type INSTANCE)
;+		(allowed-classes EA_Relation EA_Class)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot dependency_to_element
;+		(comment "The business capability to which the dependency is defined")
		(type INSTANCE)
;+		(allowed-classes Business_Capability)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Correlation_Dependency "Defines a dependency between two elements in terms of a series of correlated percentage values"
	(is-a Dependency)
	(role abstract)
	(multislot correlation_dependency_correlations
;+		(comment "The pairs of percentage values that represent the correlations between the elements")
		(type INSTANCE)
;+		(allowed-classes Correlation)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Business_Environment_Correlation_Dependency "Defines a dependency between a quantitative EA element and a Business Environment Factor in terms of a series of correlated percentage values"
	(is-a Correlation_Dependency)
	(role concrete)
	(single-slot dependency_to_element
;+		(comment "The element to which the dependency is defined")
		(type INSTANCE)
;+		(allowed-classes Business_Environment_Factor)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot bef_correlation_from_element
;+		(comment "The element that has the correlation with the business environment factor")
		(type INSTANCE)
;+		(allowed-classes EA_Relation EA_Class)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass Service_Quality_Correlation_Dependency "Defines a dependency between a quantitative EA element and a Service Quality in terms of a series of correlated percentage values"
	(is-a Correlation_Dependency)
	(role concrete)
	(single-slot dependency_to_element
;+		(comment "The element to which the dependency is defined")
		(type INSTANCE)
;+		(allowed-classes Service_Quality)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot sq_correlation_from_element
;+		(comment "The element that has the correlation with the service quality")
		(type INSTANCE)
;+		(allowed-classes EA_Relation EA_Class)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Correlation "Defines a pair of percentage values (i.e 0.0 to 1.0) representing correlation between two quantitative EA elements"
	(is-a Dependency_Management)
	(role concrete)
	(single-slot correlation_from_percent
;+		(comment "The percentage value between 0.0 and 1.0 for the quantitative 'from' EA element being correlated")
		(type FLOAT)
		(range 0.0 1.0)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot correlation_to_percent
;+		(comment "The percentage value for the quantitative correlation between EA elements")
		(type FLOAT)
		(range 0.0 1.0)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot correlation_for_dependency
;+		(comment "The dependency against which this correlation is defined")
		(type INSTANCE)
;+		(allowed-classes Correlation_Dependency)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes EA_Support)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass About_Essential "Abstract superclass for details about the Essential Architecture Meta Model and Essential Architecture Manager, which is this implementation of the meta model."
	(is-a EA_Class)
	(role abstract)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes About_Essential)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Essential_Licensing "Class to define instances of end user license details."
	(is-a About_Essential)
	(role concrete)
	(single-slot license_acknowledgments
;+		(comment "Slot containing the acknowledgments due to other parties in the license.")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot license_contact_details
;+		(comment "Slot containing the contact details for Essential Architecture Manager.")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Essential_Licensing)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot license_statement
;+		(comment "Slot containing the required licensing statements")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Meta_Model_Version "Class to hold details about the version of the meta model that is being used. Create an instance and use its name to identify the version in use. Put relevant details in the description"
	(is-a About_Essential)
	(role concrete)
	(single-slot meta_model_version_id
;+		(comment "The version identifier, typically a numerical string, that defines the version of the meta model.")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Meta_Model_Version)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Applied_Updates "Class holding records of the update packs that have been applied to the meta model. Clear this list of instances when creating a new version of the meta model. Update packs should create a new instance of this class detailing what the update was and when it was applied."
	(is-a About_Essential)
	(role concrete)
	(single-slot supersedes_version
;+		(comment "Slot to capture the instance of which this instance is a new version. i.e. Use this slot to define the instance that represents the previous version of the element being considered. Allowed classes must always be a single class of the same type as the domain. e.g. a Technology_Product can only supersede another Technology_Product.")
		(type INSTANCE)
;+		(allowed-classes Applied_Updates)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot meta_model_update_applied_date
;+		(comment "Slot for capturing the date/time when an update was applied")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass EA_Relation "Abstract base class for relationship classes, e.g. Link Classes in the Essential Architecture Meta Model."
	(is-a %3ASYSTEM-CLASS EA_Graph_Management)
	(role abstract)
	(single-slot relation_description
;+		(comment "The description of the EAS_Relationship instance.")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot system_content_quality_reviews
;+		(comment "The content quality reviews that have been undertaken against this element")
		(type INSTANCE)
;+		(allowed-classes SYS_CONTENT_QUALITY_REVIEW)
		(create-accessor read-write))
	(multislot commentary
;+		(comment "Defines a set of comments that can be associated with an instance. Uses the Commentary instances to enable multi-language translations of each comment.")
		(type INSTANCE)
;+		(allowed-classes Commentary)
		(create-accessor read-write))
	(single-slot system_content_quality_last_reviewer_id
;+		(comment "The id of the person that most recently reviewed the content quality of this element")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ea_reference
;+		(comment "A human readable, unique and universal reference for the element")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot element_classified_by
;+		(comment "Slot to capture the classification(s) that apply to an element in the ontology. Add this slot to any class that is to be managed by a Taxonomy.")
		(type INSTANCE)
;+		(allowed-classes Taxonomy_Term)
		(create-accessor read-write))
	(multislot system_security_read_classification
;+		(comment "Defines the security classification that has been assigned to an element of the repository for READ access")
		(type INSTANCE)
;+		(allowed-classes EA_Content_Classification)
		(create-accessor read-write))
	(multislot impacting_change_activities
;+		(comment "Change activities that impact this element")
		(type INSTANCE)
;+		(allowed-classes Change_Activity)
		(create-accessor read-write))
	(multislot impacting_decisions
;+		(comment "Any Decisions that have been made with regards to this element")
		(type INSTANCE)
;+		(allowed-classes Decision)
		(create-accessor read-write))
	(single-slot relation_name
;+		(comment "The name of the relationship. A name-spaced naming convention scheme should be used to identify instances of EAS_Relationships")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot short_name
;+		(comment "An abbreviatted short name for the EA element")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot system_last_modified_author_id
;+		(comment "The id of the user that most recently modified the instance")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot system_author_id
;+		(comment "Used to identify the creator of the element")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot performance_measures
;+		(comment "The measures of performance that have been captured for the EA element")
		(type INSTANCE)
;+		(allowed-classes Performance_Measure)
		(create-accessor read-write))
	(multislot ea_requirements
;+		(comment "The issues or needs associated with this element")
		(type INSTANCE)
;+		(allowed-classes Strategic_Requirement)
		(create-accessor read-write))
	(multislot budgets_for_element
;+		(comment "The budgets defined for this element")
		(type INSTANCE)
;+		(allowed-classes Budget)
		(create-accessor read-write))
	(single-slot system_last_modified_datetime_iso8601
;+		(comment "The date and time at which the element was most recently modified")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot target_performance_measures
;+		(comment "The Performance Measures that are defined as targets for this element")
		(type INSTANCE)
;+		(allowed-classes Performance_Measure)
		(create-accessor read-write))
	(single-slot system_content_quality_last_reviewed_datetime_iso8601
;+		(comment "The date and time that the content quality of this element was reviewed")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot system_content_quality_status
;+		(comment "The current content quality status of this element")
		(type INSTANCE)
;+		(allowed-classes SYS_CONTENT_QUALITY_STATUS)
		(default [store_55_Class0])
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot system_security_edit_classification
;+		(comment "Defines the security classification that has been assigned to an element of the repository for EDIT access")
		(type INSTANCE)
;+		(allowed-classes EA_Content_Classification)
		(create-accessor read-write))
	(multislot ea_scope
;+		(comment "Supports the arbitrary scoping of an EA element by other EA elements, e.g. Org, Geo, Brand etc.")
		(type INSTANCE)
;+		(allowed-classes EA_Class)
		(create-accessor read-write))
	(single-slot system_creation_datetime_iso8601
;+		(comment "The date and time at which this element was created")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot system_content_lifecycle_status
;+		(comment "Defines the lifecycle status of an EA element in support of content approval")
		(type INSTANCE)
;+		(allowed-classes SYS_CONTENT_APPROVAL_STATUS)
		(default [essential_baseline_6.5.4_Class67])
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot external_repository_instance_reference
;+		(comment "Holds a set of references to this instance that are used in external repositories")
		(type INSTANCE)
;+		(allowed-classes External_Instance_Reference)
		(create-accessor read-write))
	(single-slot system_ea_reference_instance_counter
;+		(comment "A unique number that is used in derived ea references where this instance forms part of teh relationship path")
		(type INTEGER)
		(default 0)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot element_styling_classes
;+		(comment "Slot to define styling classes that are to be applied to an element, e.g. in Essential Viewer")
		(type INSTANCE)
;+		(allowed-classes Element_Style)
		(create-accessor read-write))
	(multislot lifecycle_model_for_element
;+		(comment "The Lifecycle Model of the element in focus.")
		(type INSTANCE)
;+		(allowed-classes Lifecycle_Model)
		(create-accessor read-write))
	(single-slot ea_notes
;+		(comment "Abitrary notes that have been made against the element")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Application_Relationship "Abstract base class of relationship / link classes related to elements in the Application Layer of the meta model."
	(is-a EA_Relation)
	(role abstract)
	(multislot al_security_classifications
;+		(comment "The security classifications assigned to this application element in the context of the enterprise")
		(type INSTANCE)
;+		(allowed-classes Security_Classification)
		(create-accessor read-write))
	(multislot app_relation_contained_in_arch_states
;+		(comment "The architecture states that contain this application relationship")
		(type INSTANCE)
;+		(allowed-classes Architecture_State)
		(create-accessor read-write))
	(multislot al_managed_by_services
;+		(comment "The managed services that are related to this Application element")
		(type INSTANCE)
;+		(allowed-classes Managed_Service)
		(create-accessor read-write)))

(defclass APP_TO_BUS_RELATION "Abstract class defining how Application components support Business Processes/Activities/Tasks. An Application Service Quality for how this application supports the Business Process/Activity/Task can be specified."
	(is-a Application_Relationship)
	(role abstract)
	(multislot required_application_service_quality
;+		(comment "An Application Service Quality defining how the Application component supports or automates the business.")
		(type INSTANCE)
;+		(allowed-classes Application_Service_Quality_Value)
		(create-accessor read-write))
	(single-slot app_to_process_business_criticality
;+		(comment "Describes the business criticality of an application element to the business process type being supported")
		(type INSTANCE)
;+		(allowed-classes Business_Criticality)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot relation_name
;+		(comment "The name of the relationship. A name-spaced naming convention scheme should be used to identify instances of EAS_Relationships")
		(type STRING)
		(default "<architecture>::<app>::<supports>::<business artefact>")
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass APP_FUN_TO_BUS_RELATION "An Application Function supports a Business Process, Actitvity or Task, optionally requiring a Application Service Qualities."
	(is-a APP_TO_BUS_RELATION)
	(role concrete)
	(single-slot appfun_to_bus_to_busproc
;+		(comment "The Business Process that is supported by an Application Function")
		(type INSTANCE)
;+		(allowed-classes Business_Process_Type)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot appfun_to_bus_from_appfun
;+		(comment "The Application Function that is supporting a process")
		(type INSTANCE)
;+		(allowed-classes Application_Function)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot relation_name
;+		(comment "The name of the relationship. A name-spaced naming convention scheme should be used to identify instances of EAS_Relationships")
		(type STRING)
		(default "<app_func>::<supports>::<business process type>")
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass APP_SVC_TO_BUS_RELATION "An Application Service supports a Business Process, Activity or Task, optionally requiring a Application Service Qualities."
	(is-a APP_TO_BUS_RELATION)
	(role concrete)
	(single-slot appsvc_to_bus_from_appsvc
;+		(comment "The Application Service that is supporting a process")
		(type INSTANCE)
;+		(allowed-classes Application_Service)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot appsvc_to_bus_managed_info_views
;+		(comment "Defines the Information Views that are managed by the Application Service in support of the Business Process")
		(type INSTANCE)
;+		(allowed-classes Information_View_Type)
		(create-accessor read-write))
	(single-slot relation_name
;+		(comment "The name of the relationship. A name-spaced naming convention scheme should be used to identify instances of EAS_Relationships")
		(type STRING)
		(default "<app_svc>::<supports>::<business process type>")
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot appsvc_to_bus_to_busproc
;+		(comment "The Business Process that is supported by an Application Service")
		(type INSTANCE)
;+		(allowed-classes Business_Process_Type)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass APP_FUNIMPL_TO_BUS_RELATION "An Application Function Implementation supports a Business Process, Activity or Task, optionally requiring a Application Service Qualities."
	(is-a APP_TO_BUS_RELATION)
	(role concrete)
	(single-slot appfunimpl_to_physbus_to_busproc
;+		(comment "The Business Process that is supported by an Application Function Implementation")
		(type INSTANCE)
;+		(allowed-classes Physical_Process_Type)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot appfunimpl_to_physbus_from_appfunimpl
;+		(comment "The Application Function Implementation that is supporting a process")
		(type INSTANCE)
;+		(allowed-classes Application_Function_Implementation)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot relation_name
;+		(comment "The name of the relationship. A name-spaced naming convention scheme should be used to identify instances of EAS_Relationships")
		(type STRING)
		(default "<app function impl>::<supports>::<business process type>")
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass APP_APP_TO_BUS_RELATION "An Application supports a Business Process, Actitvity or Task, optionally requiring a Application Service Qualities."
	(is-a APP_TO_BUS_RELATION)
	(role concrete)
	(single-slot app_to_bus_from_app
;+		(comment "The Application (Group) that is supporting a process")
		(type INSTANCE)
;+		(allowed-classes Application_Family)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot relation_name
;+		(comment "The name of the relationship. A name-spaced naming convention scheme should be used to identify instances of EAS_Relationships")
		(type STRING)
		(default "<application>::<supports>::<business process type>")
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot app_to_bus_to_busproc
;+		(comment "The Business Process that is supported by an Application (Group)")
		(type INSTANCE)
;+		(allowed-classes Business_Process_Type)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass APP_PRO_TO_PHYS_BUS_RELATION "Defines the relationship between a specific Application Provider OR Application Provider Role and a specific physical process."
	(is-a APP_TO_BUS_RELATION)
	(role concrete)
	(single-slot apppro_to_physbus_to_busproc
;+		(comment "The Business Process that is supported by an Application Provider")
		(type INSTANCE)
;+		(allowed-classes Physical_Process_Type)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot apppro_to_physbus_supported_products
;+		(comment "Defines any specific products that the application provider is supporting.")
		(type INSTANCE)
;+		(allowed-classes Product)
		(create-accessor read-write))
	(single-slot apppro_to_physbus_from_apppro
;+		(comment "The Application Provider that is supporting a process")
		(type INSTANCE)
;+		(allowed-classes Application_Provider)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot min_number_of_users
;+		(comment "The minimum number of users that have access to the relations application in the context of the associated business process")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot relation_name
;+		(comment "The name of the relationship. A name-spaced naming convention scheme should be used to identify instances of EAS_Relationships")
		(type STRING)
		(default "<architecture>::<app>::<supports>::<business artefact>")
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot max_number_of_users
;+		(comment "The maximum number of users that have access to the relations application in the context of the associated business process")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot apppro_to_physbus_from_appprorole
;+		(comment "The Application Provider Role that is supporting a physical process")
		(type INSTANCE)
;+		(allowed-classes Application_Provider_Role)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass APP_TO_TECH_RELATION "Abstract base class for relationships from the Application Layer to the Technology Layer of the architecture."
	(is-a Application_Relationship)
	(role abstract))

(defclass APP_FUNCIMPL_TO_TECH_CAP_RELATION "An Application Function Implementation requires a Technology Capability, optionally requiring a Application Service Qualities."
	(is-a APP_TO_TECH_RELATION)
	(role concrete)
	(single-slot app_fun_impl_to_tech_TO_techcap
;+		(comment "The Technology Capability that the Application Function Implementation requires, in a APP_FUNCIMP_TO_TECH_CAP_RELATION")
		(type INSTANCE)
;+		(allowed-classes Technology_Capability)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot required_technology_service_quality
;+		(comment "The required Technology Service Qualities for the required Technology Capability")
		(type INSTANCE)
;+		(allowed-classes Technology_Service_Quality_Value)
		(create-accessor read-write))
	(single-slot app_fun_impl_to_tech_FROM_app
;+		(comment "The Application Function Implementation that requires a Technology Capability in an APP_FUNCIMP_TO_TECH_CAP_RELATION")
		(type INSTANCE)
;+		(allowed-classes Application_Function_Implementation)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot relation_name
;+		(comment "The name of the relationship. A name-spaced naming convention scheme should be used to identify instances of EAS_Relationships")
		(type STRING)
		(default "<architecture>::<from>::<requires>::<to>")
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass APP_COMP_TO_APP_FUNC_RELATION "Base abstract class for relations between application components within an Application Architecture. A usage of a component (e.g. Application Service or Application Provider) uses a Function (Function Implementation) provided by another component sending and receiving Information."
	(is-a Application_Relationship)
	(role abstract))

(defclass APP_TO_INFO_RELATION "Abstract class defining how Application components interact with Information Views/Representations."
	(is-a Application_Relationship)
	(role abstract))

(defclass APP_PRO_TO_INFOREP_RELATION "Class to represent relationship between an Application_Provider and an Information Representation that it creates, reads, updates or deletes"
	(is-a APP_TO_INFO_RELATION)
	(role concrete)
	(single-slot app_pro_to_inforep_to_inforep
;+		(comment "The Information Representation that is used by the Application Provider")
		(type INSTANCE)
;+		(allowed-classes Information_Representation_Type)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot app_pro_to_inforep_from_app
;+		(comment "The Application Provider that uses the Information Representation")
		(type INSTANCE)
;+		(allowed-classes Application_Provider_Type)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot app_pro_reads_info_rep
;+		(comment "Determines whether the Application Provider reads the Information Representation")
		(type SYMBOL)
		(allowed-values Yes No Unknown)
		(default Unknown)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot app_pro_creates_info_rep
;+		(comment "Determines whether the Application Provider creates the Information Representation")
		(type SYMBOL)
		(allowed-values Yes No Unknown)
		(default Unknown)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot operated_data_reps
;+		(comment "The Data Representations that are operated on by the Application Provider in the context of the Information Representation")
		(type INSTANCE)
;+		(allowed-classes APP_PRO_TO_INFOREP_TO_DATAREP_RELATION)
		(create-accessor read-write))
	(single-slot app_pro_deletes_info_rep
;+		(comment "Determines whether the Application Provider deletes the Information Representation")
		(type SYMBOL)
		(allowed-values Yes No Unknown)
		(default Unknown)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot app_pro_updates_info_rep
;+		(comment "Determines whether the Application Provider updates the Information Representation")
		(type SYMBOL)
		(allowed-values Yes No Unknown)
		(default Unknown)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot app_pro_to_inforep_delivery_approach
;+		(comment "Describes how the application delivers the information representation (e.g. email, shared drive, paper document)")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot app_pro_persists_info_rep
;+		(comment "Defines whether the Application Provider persists data in the form of the Information Representation")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default FALSE)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot used_in_app_dependencies
;+		(comment "Defines a list of application dependencies in which this information is exchanged")
		(type INSTANCE)
;+		(allowed-classes %3AAPU-TO-APU-STATIC-RELATION)
		(create-accessor read-write))
	(multislot app_pro_to_inforep_exchanges
;+		(comment "The information exchanges that involve this information provided by the application")
		(type INSTANCE)
;+		(allowed-classes APP_PRO_TO_INFOREP_EXCHANGE_RELATION)
		(create-accessor read-write))
	(single-slot app_pro_to_inforep_security_access
;+		(comment "Describes the nature of security access for the information representation provided by the application")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass APP_PRO_TO_INFOREP_TO_DATAREP_RELATION "Describes a specific Data Representation that is used by an Application Provider in the context of an Information Representation"
	(is-a APP_TO_INFO_RELATION)
	(role concrete)
	(single-slot app_pro_deletes_data_rep
;+		(comment "Determines whether the Application Provider deletes instances of the Data Representation")
		(type SYMBOL)
		(allowed-values Yes No Unknown)
		(default Unknown)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot app_datarep_inforep_source
;+		(comment "Which information representation is the source of the data used by the Application Provider")
		(type INSTANCE)
;+		(allowed-classes APP_PRO_TO_INFOREP_RELATION)
		(create-accessor read-write))
	(multislot app_pro_use_of_data_rep
;+		(comment "Describes the Data Object representing the type of data that the application populates into this Data Representation")
		(type INSTANCE)
;+		(allowed-classes Data_Object_Type)
		(create-accessor read-write))
	(single-slot app_pro_creates_data_rep
;+		(comment "Determines whether the Application Provider creates instances of the Data Representation")
		(type SYMBOL)
		(allowed-values Yes No Unknown)
		(default Unknown)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot app_pro_data_acquisition_method
;+		(comment "Describes the mechanism used by the Application to acquire the data")
		(type INSTANCE)
;+		(allowed-classes Data_Acquisition_Method)
		(default [essential_baseline_v2.0_Class20000])
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot apppro_to_inforep_to_datarep_to_datarep
;+		(comment "Describes the Data Representation that is being used by an Application Provider in the context of an Information Representation")
		(type INSTANCE)
;+		(allowed-classes Data_Representation_Type)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot app_pro_updates_data_rep
;+		(comment "Determines whether the Application Provider updates instances of the Data Representation")
		(type SYMBOL)
		(allowed-values Yes No Unknown)
		(default Unknown)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot app_pro_reads_data_rep
;+		(comment "Determines whether the Application Provider reads instances of the Data Representation")
		(type SYMBOL)
		(allowed-values Yes No Unknown)
		(default Unknown)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot apppro_to_inforep_to_datarep_from_appro_to_inforep
;+		(comment "Describes the context in which the Data Representation is used (i.e the Application Provider and containing Information Representation)")
		(type INSTANCE)
;+		(allowed-classes APP_PRO_TO_INFOREP_RELATION)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass AFI_DATA_MAPPING_RELATION "Relationship that defines an information or data mapping in terms of source and target information and data. Any logic that is used in the mapping should be captured in the relation_description slot."
	(is-a APP_TO_INFO_RELATION)
	(role concrete)
	(multislot afi_data_map_target
;+		(comment "Defines the target object(s) or attribute(s) in the mapping")
		(type INSTANCE)
;+		(allowed-classes Data_Representation_Type Information_Representation_Type)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(multislot afi_data_map_source
;+		(comment "Defines the source object(s) or attribute(s) in the mapping")
		(type INSTANCE)
;+		(allowed-classes Data_Representation_Type Information_Representation_Type)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(single-slot afi_performing_mapping
;+		(comment "The Application Function Implementation or Application Provider that is performing - or provides the functionality to perform - the information / data mapping.")
		(type INSTANCE)
;+		(allowed-classes Application_Provider_Type)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass APP_PRO_TO_INFOREP_EXCHANGE_RELATION "Provides details of how an Information Representation provided by a given Application Provider is exchanged with another"
	(is-a APP_TO_INFO_RELATION)
	(role concrete)
	(single-slot atire_acquisition_method
;+		(comment "The method used to exchange the information")
		(type INSTANCE)
;+		(allowed-classes Data_Acquisition_Method)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot atire_app_pro_to_inforep
;+		(comment "The Information managed by a given Application that is being exchanged")
		(type INSTANCE)
;+		(allowed-classes APP_PRO_TO_INFOREP_RELATION)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot used_in_app_dependencies
;+		(comment "Defines a list of application dependencies in which this information is exchanged")
		(type INSTANCE)
;+		(allowed-classes %3AAPU-TO-APU-STATIC-RELATION)
		(create-accessor read-write))
	(multislot atire_service_quals
;+		(comment "The service quality values associated with the information exchange (e.g. frequency)")
		(type INSTANCE)
;+		(allowed-classes Service_Quality_Value)
		(create-accessor read-write)))

(defclass APP_PRO_TO_DATAOBJ_REQ_RELATION "Defines a relationship between an Application Provider and a logical Data Object that it requires to deliver its functionality"
	(is-a APP_TO_INFO_RELATION)
	(role concrete)
	(single-slot app_pro_to_dataobj_req_from_app
;+		(comment "The APplication that requires the Data Object")
		(type INSTANCE)
;+		(allowed-classes Application_Provider)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot app_pro_to_dataobj_req_to_dataobj
;+		(comment "The Data Object that is required by the Application")
		(type INSTANCE)
;+		(allowed-classes Data_Object)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass APP_SVC_TO_INFOVIEW_RELATION "Defines a relationship between an Application Service and an Information View upon which it operates"
	(is-a APP_TO_INFO_RELATION)
	(role concrete)
	(single-slot app_svc_to_infoview_to_infoview
;+		(comment "The Information View that is being processed by the Application Service")
		(type INSTANCE)
;+		(allowed-classes Information_View)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot app_svc_to_infoview_from_appsvc
;+		(comment "The Application Service that is operating on the Information View")
		(type INSTANCE)
;+		(allowed-classes Application_Service)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot app_svc_deletes_info_view
;+		(comment "Defines whether the Application Service deletes the Information View")
		(type SYMBOL)
		(allowed-values Yes No Unknown)
		(default Unknown)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot app_svc_reads_info_view
;+		(comment "Defines whether the Application Service reads the Information View")
		(type SYMBOL)
		(allowed-values Yes No Unknown)
		(default Unknown)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot app_svc_creates_info_view
;+		(comment "Defines whether the Application Service creates the Information View")
		(type SYMBOL)
		(allowed-values Yes No Unknown)
		(default Unknown)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot app_svc_updates_info_view
;+		(comment "Defines whether the Application Service updates the Information View")
		(type SYMBOL)
		(allowed-values Yes No Unknown)
		(default Unknown)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Business_Relationship "Abstract base class of relationship / link classes related to elements in the Business Layer of the meta model."
	(is-a EA_Relation)
	(role abstract)
	(multislot bl_security_classifications
;+		(comment "The security classifications assigned to this business element in the context of the enterprise")
		(type INSTANCE)
;+		(allowed-classes Security_Classification)
		(create-accessor read-write))
	(multislot bus_relations_contained_in_arch_states
;+		(comment "The architecture states that contain this business relationship")
		(type INSTANCE)
;+		(allowed-classes Architecture_State)
		(create-accessor read-write))
	(multislot bl_managed_by_services
;+		(comment "The managed services that are related to this Business element")
		(type INSTANCE)
;+		(allowed-classes Managed_Service)
		(create-accessor read-write)))

(defclass ACTOR_TO_ROLE_RELATION "Relationship that captures how an Actor takes on - or plays - a Business Role in order to perform a Physical Business Process."
	(is-a Business_Relationship)
	(role concrete)
	(single-slot act_to_role_is_primary
;+		(comment "Defines whether or not the role is the main responsibility for the actor")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default FALSE)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot act_to_role_from_actor
;+		(comment "The Actor who is playing a role to do the process")
		(type INSTANCE)
;+		(allowed-classes Actor)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot act_to_role_to_role
;+		(comment "The Role that an actor is playing to do the process")
		(type INSTANCE)
;+		(allowed-classes Business_Role)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot performs_physical_processes
;+		(comment "The physical business processes that this actor peforms in the given role")
		(type INSTANCE)
;+		(allowed-classes Physical_Process)
		(create-accessor read-write)))

(defclass BUSPROCTYPE_TO_INFOVIEW_RELATION "Relationship that captures how a type of Business Process uses an Information View."
	(is-a Business_Relationship)
	(role concrete)
	(single-slot busproctype_deletes_infoview
;+		(comment "Defines whether the Business Process Type deletes the Information View")
		(type SYMBOL)
		(allowed-values Yes No Unknown)
		(default Unknown)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot busproctype_to_infoview_to_infoview
;+		(comment "The Information View that is being used by the Business Process Type")
		(type INSTANCE)
;+		(allowed-classes Information_View)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot busproctype_updates_infoview
;+		(comment "Defines whether the Business Process Type updates the Information View")
		(type SYMBOL)
		(allowed-values Yes No Unknown)
		(default Unknown)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot busproctype_reads_infoview
;+		(comment "Defines whether the Business Process Type reads the Information View")
		(type SYMBOL)
		(allowed-values Yes No Unknown)
		(default Unknown)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot busproctype_to_infoview_from_busproc
;+		(comment "The Business Process Type that is using the Information Object")
		(type INSTANCE)
;+		(allowed-classes Business_Process_Type)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot busproctype_creates_infoview
;+		(comment "Defines whether the Business Process Type creates the Information View")
		(type SYMBOL)
		(allowed-values Yes No Unknown)
		(default Unknown)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass PHYSBUSPROC_TO_APPINFOREP_RELATION "Relationship that captures an organisation performing a business process using the information provided by an application."
	(is-a Business_Relationship)
	(role concrete)
	(single-slot physbusproc_to_appinfoview_info_delivery
;+		(comment "Describes how the information used is delivered")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot physbusproc_to_appinfoview_from_physbusproc
;+		(comment "The Physical Business Process that uses the information provided by an  application")
		(type INSTANCE)
;+		(allowed-classes Physical_Process_Type)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot physbusproc_to_appinfoview_to_appinforep
;+		(comment "The information from an application being used to perform the physical business process")
		(type INSTANCE)
;+		(allowed-classes APP_PRO_TO_INFOREP_RELATION)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass BUSCAP_TO_PARENTBUSCAP_RELATION "Defines a relationship between a child businesscapability and the parent business capability that it supports, including any additional contextual information"
	(is-a Business_Relationship)
	(role concrete)
	(single-slot buscap_to_parent_child_buscap
;+		(comment "The child Business Capability in the relationship")
		(type INSTANCE)
;+		(allowed-classes Business_Capability)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot buscap_to_parent_parent_buscap
;+		(comment "The parent business capability in the relationship")
		(type INSTANCE)
;+		(allowed-classes Business_Capability)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot buscap_to_parent_role
;+		(comment "The")
		(type INSTANCE)
;+		(allowed-classes Business_Capability_Role)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass ACTOR_TO_OBJECTIVE_RELATION "Defines a relationship between an Actor and an Objective, including capturing the target for the Actor to achieve"
	(is-a Business_Relationship)
	(role concrete)
	(single-slot act_to_obj_objective
;+		(comment "The objective that has been given to the actor")
		(type INSTANCE)
;+		(allowed-classes Business_Objective)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot act_to_obj_target_value
;+		(comment "An optional target that has been defined for the objective")
		(type INSTANCE)
;+		(allowed-classes Service_Quality_Value)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot act_to_obj_actor
;+		(comment "The actor who has been given the objective")
		(type INSTANCE)
;+		(allowed-classes Actor)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot act_to_obj_for_element
;+		(comment "The element against which the objective has been defined for the Actor")
		(type INSTANCE)
;+		(allowed-classes EA_Class EA_Relation %3AEA_Graph_Relation)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass OBJ_TO_SVC_QUALITY_RELATION "Relationship that captures a Business Objective being measured by a Service Quality"
	(is-a Business_Relationship)
	(role concrete)
	(single-slot obj_to_svc_quality_is_key
;+		(comment "Determines if this is a key performance measure")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default FALSE)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot obj_to_svc_quality_objective
;+		(comment "The objective being measured")
		(type INSTANCE)
;+		(allowed-classes Business_Objective)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot obj_to_svc_quality_service_quality
;+		(comment "The service quality that is used to measure the performance against the objective")
		(type INSTANCE)
;+		(allowed-classes Service_Quality)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass ACTOR_REPORTSTO_ACTOR_RELATION "Relationship that captures a reporting line between individual actors"
	(is-a Business_Relationship)
	(role concrete)
	(single-slot indvact_reportsto_indvact_strength
;+		(comment "The strength of the reporting line between the actors")
		(type INSTANCE)
;+		(allowed-classes Actor_Reporting_Line_Strength)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot indvact_reportsto_indvact_from_actor
;+		(comment "The subordinate Indivual Actor")
		(type INSTANCE)
;+		(allowed-classes Individual_Actor)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot indvact_reportsto_indvact_in_org_context
;+		(comment "The organisational context(s) in which the Individual Actor reports to the Individual Actor")
		(type INSTANCE)
;+		(allowed-classes Group_Actor Change_Activity)
		(create-accessor read-write))
	(single-slot indvact_reportsto_indvact_to_actor
;+		(comment "The Individual Actor who is being reported to")
		(type INSTANCE)
;+		(allowed-classes Individual_Actor)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass SKILL_RELATION "Abstract base class for all types of relationships between Skill instances and other classes."
	(is-a Business_Relationship)
	(role abstract)
	(single-slot skill_level
;+		(comment "Skill level quality on a skills relationship the defines the level of skill that is available or is required.")
		(type INSTANCE)
;+		(allowed-classes Skill_Level)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass ACTOR_TO_SKILL_RELATION "Relationship class to capture qualities about the skills that an Actor instance possesses."
	(is-a SKILL_RELATION)
	(role concrete)
	(single-slot to_skill_actor_relation
;+		(comment "Slot to capture the 'TO' end of this Skill relation, which is to a Skill or Skill At Level instance")
		(type INSTANCE)
;+		(allowed-classes Skill Skill_At_Level)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot actor_to_skill_is_aspiration
;+		(comment "Defines whether the Skill is aspirational for the Actor")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default FALSE)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot from_actor_skill_relation
;+		(comment "Slot holding the reference to the instance of an Actor that has a Skill.")
		(type INSTANCE)
;+		(allowed-classes Actor)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot actor_to_skill_focus_level
;+		(comment "The extent to which the Skill is the main focus for the Actor")
		(type INSTANCE)
;+		(allowed-classes Skill_Focus_Level)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass ROLE_TO_SKILL_RELATION "Relationship to capture the qualities of a Skill instance that is required by a Business Role."
	(is-a SKILL_RELATION)
	(role concrete)
	(single-slot to_skill_role_relation
;+		(comment "Slot to capture the 'TO' end of this Skill relation, which is to a Skill instance")
		(type INSTANCE)
;+		(allowed-classes Skill_At_Level)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot role_to_skill_focus_level
;+		(comment "The extent to which the Skill should be the main focus for the Role")
		(type INSTANCE)
;+		(allowed-classes Skill_Focus_Level)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot from_role_skill_relation
;+		(comment "Slot holding the reference to the instance of a Business Role that requires a Skill")
		(type INSTANCE)
;+		(allowed-classes Individual_Business_Role_At_Level)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass JOB_TO_SKILL_RELATION "Relationship to capture the qualities of a Skill instance that is required by a Job Position"
	(is-a SKILL_RELATION)
	(role concrete)
	(single-slot from_job_skill_relation
;+		(comment "The Job Position that requries the Skill")
		(type INSTANCE)
;+		(allowed-classes Job_Position)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot job_to_skill_focus_level
;+		(comment "The extent to which the Skill is the main focus for the Job Position")
		(type INSTANCE)
;+		(allowed-classes Skill_Focus_Level)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot to_skill_job_relation
;+		(comment "The Skill or Skill At Level that is required for the Job Position")
		(type INSTANCE)
;+		(allowed-classes Skill Skill_At_Level)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass ACTOR_TO_JOB_RELATION "Relationship that captures how an Individual Actor takes on a Job Position in a Group Actor (i.e. Organisation)."
	(is-a Business_Relationship)
	(role concrete)
	(single-slot actor_to_job_to_job
;+		(comment "The Job Position taken on by the Individual Actor")
		(type INSTANCE)
;+		(allowed-classes Job_Position)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot actor_to_job_job_title
;+		(comment "A job title given to the actor when performing the job")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot actor_to_job_from_actor
;+		(comment "The Individual Actor who has been placed in the Job Position")
		(type INSTANCE)
;+		(allowed-classes Individual_Actor)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot actor_to_job_is_aspiration
;+		(comment "Defines whether the Job Position is aspirational for the Individual Actor (false by default)")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default FALSE)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass ACTOR_TO_EXPERTISE_RELATION "Relationship class to capture qualities about the subject matter expertise that an Actor  possesses."
	(is-a Business_Relationship)
	(role concrete)
	(single-slot actor_to_expertise_to_expertise
;+		(comment "The subject matter expertise that the actor possesses")
		(type INSTANCE)
;+		(allowed-classes Subject_Matter_Expertise)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot actor_to_expertise_from_actor
;+		(comment "The individual actor that possesses the expertise")
		(type INSTANCE)
;+		(allowed-classes Individual_Actor)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot actor_to_expertise_is_aspiration
;+		(comment "")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default FALSE)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass BUSPROCTYPE_IN_BUSPROCFAM_RELATION "DEPRECATED: REPLACED BY DIRECT RELATIONSHIP. USE Business_Process_Standard_Specification TO DEFINE STANDARDS \nDefines the relationship between a Business Process Type (business process, activity or task) and a Business Process Family"
	(is-a Business_Relationship)
	(role concrete)
	(single-slot busprocttype_to_busprocfam_is_standard
;+		(comment "Defines whether the Business Process Type is a standard for the Business Process Family")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default FALSE)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot busprocttype_to_busprocfam_standard_prodtype_scope
;+		(comment "The product type scope for which the Business Process Type is a standard for the Business Process Family")
		(type INSTANCE)
;+		(allowed-classes Product_Type)
		(create-accessor read-write))
	(single-slot busprocttype_to_busprocfam_busprocfam
;+		(comment "The Business Process Family to which the Business Process Type belongs")
		(type INSTANCE)
;+		(allowed-classes Business_Process_Family)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot busprocttype_to_busprocfam_busproctype
;+		(comment "The Business Process Type that is part of the Business Process Fanily")
		(type INSTANCE)
;+		(allowed-classes Business_Process_Type)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot busprocttype_to_busprocfam_standard_geo_scope
;+		(comment "The geographic scope for which the Business Process Type is a standard for the Business Process Family")
		(type INSTANCE)
;+		(allowed-classes Geographic_Region)
		(create-accessor read-write))
	(multislot busprocttype_to_busprocfam_standard_org_scope
;+		(comment "The organisational scope for which the Business Process Type is a standard for the Business Process Family")
		(type INSTANCE)
;+		(allowed-classes Group_Actor)
		(create-accessor read-write)))

(defclass CUSTOMER_JOURNEY_RELATION "Abstract base class for all types of relationships between Customer Journey instances and other classes."
	(is-a Business_Relationship)
	(role abstract))

(defclass CUST_JOURNEY_PHASE_TO_CHANNEL_RELATION "Defines a relationship between a Customer Jourmey and a Channel"
	(is-a CUSTOMER_JOURNEY_RELATION)
	(role concrete)
	(single-slot cust_journey_phase_to_channel_from_cust_journey_phase
;+		(comment "The Customer Journey Phase that is related to the Channel")
		(type INSTANCE)
;+		(allowed-classes Customer_Journey_Phase)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot cust_journey_phase_to_channel_to_channel
;+		(comment "The Channel that is related to the Customer Journey Phase")
		(type INSTANCE)
;+		(allowed-classes Channel)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass CUST_JOURNEY_PHASE_TO_EMOTION_RELATION "Defines a relationship between a Customer Jourmey and an Emotion"
	(is-a CUSTOMER_JOURNEY_RELATION)
	(role concrete)
	(single-slot cust_journey_phase_to_emotion_from_cust_journey_phase
;+		(comment "The Customer Journey Phase that is related to the Emotion")
		(type INSTANCE)
;+		(allowed-classes Customer_Journey_Phase)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot cust_journey_phase_to_emotion_to_emotion
;+		(comment "The Emotion that is related to the Customer Journey Phase")
		(type INSTANCE)
;+		(allowed-classes Customer_Emotion)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass CUST_JOURNEY_PHASE_TO_EXPERIENCE_RELATION "Defines a relationship between a Customer Jourmey and a Customer Experience Rating"
	(is-a CUSTOMER_JOURNEY_RELATION)
	(role concrete)
	(single-slot cust_journey_phase_to_experience_to_experience
;+		(comment "The Customer Experience that is related to the Customer Journey Phase")
		(type INSTANCE)
;+		(allowed-classes Customer_Experience_Rating)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot cust_journey_phase_to_experience_from_cust_journey_phase
;+		(comment "The Customer Journey Phase that is related to the Customer Experience")
		(type INSTANCE)
;+		(allowed-classes Customer_Journey_Phase)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass VALUE_STREAM_RELATION "Abstract base class for all types of qualified relationships between Value Streams/Stages and instances of other classes."
	(is-a Business_Relationship)
	(role abstract))

(defclass VALUE_STAGE_TO_EMOTION_RELATION "Defines a relationship between a Value Stage and an Emotion"
	(is-a VALUE_STREAM_RELATION)
	(role concrete)
	(single-slot value_stage_to_emotion_to_emotion
;+		(comment "The Emotion that is related to the Value Stage")
		(type INSTANCE)
;+		(allowed-classes Customer_Emotion)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot value_stage_to_emotion_from_value_stage
;+		(comment "The Value Stage that is related to the Emotion")
		(type INSTANCE)
;+		(allowed-classes Value_Stage)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass BUSPROCTYPE_TO_INFOVIEW_TO_DATAOBJ_RELATION "Relationship that captures how a type of Business Process interacts with specific data objects contained within an Information View"
	(is-a Business_Relationship)
	(role concrete)
	(single-slot busproctype2infoview_updates_dataobj
;+		(comment "Defines whether the business process type updates the data object when interacting with an information view")
		(type SYMBOL)
		(allowed-values Yes No Unknown)
		(default Unknown)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot busproctype2infoview_deletes_dataobj
;+		(comment "Defines whether the business process type deletes the data object when interacting with an information view")
		(type SYMBOL)
		(allowed-values Yes No Unknown)
		(default Unknown)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot busproctype2infoview_reads_dataobj
;+		(comment "Defines whether the business process type reads the data object when interacting with an information view")
		(type SYMBOL)
		(allowed-values Yes No Unknown)
		(default Unknown)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot busproctype_to_infoview_to_dataobj_from_busproc2infoview
;+		(comment "A business process type interacting with an information view")
		(type INSTANCE)
;+		(allowed-classes BUSPROCTYPE_TO_INFOVIEW_RELATION)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot busproctype2infoview_creates_dataobj
;+		(comment "Defines whether the business process type creates the data object when interacting with an information view")
		(type SYMBOL)
		(allowed-values Yes No Unknown)
		(default Unknown)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot busproctype_to_infoview_to_dataobj_to_dataobj
;+		(comment "The data object that a business process type is interacting with in the context of an information view")
		(type INSTANCE)
;+		(allowed-classes Data_Object_Type)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass BUSMODEL_CONFIG_TO_ELEMENT_RELATION "Defines a relationship between a Business Model Configurations and an enterprise element"
	(is-a Business_Relationship)
	(role concrete)
	(single-slot bmcr_required_from_date_ISO8601
;+		(comment "The date (in YYYY-MM-DD format) from when the enterprise element is required for the Business Model Configuration")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot bmcr_required_performance
;+		(comment "The service quality values that should be met by the enterprise element")
		(type INSTANCE)
;+		(allowed-classes Service_Quality_Value)
		(create-accessor read-write))
	(single-slot bmcr_from_busmodel_config
;+		(comment "The Business Model Configuration that requires the enterprise element")
		(type INSTANCE)
;+		(allowed-classes Business_Model_Configuration)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot bmcr_to_element
;+		(comment "The enterprise element that is required for the Business Model Configuration")
		(type INSTANCE)
;+		(allowed-classes EA_Class EA_Relation)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass BUS_RESPONSIBILITY_RELATION "Defines the nature of the responsibility that a role, actor or stakeholder has for an EA element"
	(is-a Business_Relationship)
	(role concrete)
	(single-slot bus_responsibility_relation_to_element
;+		(comment "The EA element or which the responsibility is being defined")
		(type INSTANCE)
;+		(allowed-classes EA_Class EA_Relation %3AEA_Graph_Relation)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot bus_responsibility_relation_from_stakeholder
;+		(comment "The role, actor or stakeholder that has the responsibility")
		(type INSTANCE)
;+		(allowed-classes Business_Role Actor ACTOR_TO_ROLE_RELATION)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot bus_responsibility_relation_category
;+		(comment "Defines the nature of the responsibility that the actor has for the element")
		(type INSTANCE)
;+		(allowed-classes Role_Responsibility_Category)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass Information_Relationship "Abstract base class of relationship / link classes related to elements in the Information Layer of the meta model."
	(is-a EA_Relation)
	(role abstract)
	(multislot il_managed_by_services
;+		(comment "The managed services that are related to this Information/Data element")
		(type INSTANCE)
;+		(allowed-classes Managed_Service)
		(create-accessor read-write))
	(multislot il_security_classifications
;+		(comment "The security classifications assigned to this information element in the context of the enterprise")
		(type INSTANCE)
;+		(allowed-classes Security_Classification)
		(create-accessor read-write))
	(multislot info_relations_contained_in_arch_states
;+		(comment "The architecture states that contain this information relationship")
		(type INSTANCE)
;+		(allowed-classes Architecture_State)
		(create-accessor read-write)))

(defclass EA_Support_Relationship "Set of relationship classes for EA Support meta models."
	(is-a EA_Relation)
	(role abstract)
	(multislot sl_security_classifications
;+		(comment "The security classifications assigned to this management/supporting element in the context of the enterprise")
		(type INSTANCE)
;+		(allowed-classes Security_Classification)
		(create-accessor read-write)))

(defclass COST_MGT_RELATION "Set of relationship classes for the Cost Management EA Support meta model"
	(is-a EA_Support_Relationship)
	(role abstract))

(defclass CONTRACT_TO_COST_RELATION "Relationship between a Contract and Cost element defining the cost for that contract."
	(is-a COST_MGT_RELATION)
	(role concrete)
	(single-slot ctcr_contract
;+		(comment "The Contract for which this relationship is defining the Cost.")
		(type INSTANCE)
;+		(allowed-classes Contract)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot ctcr_percent_apportion
;+		(comment "The percentage proportion of the specified Cost that is payable by the specified Contract.")
		(type FLOAT)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ctcr_cost
;+		(comment "The Cost for the Contract linked to this relationship")
		(type INSTANCE)
;+		(allowed-classes Cost)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass OBLIGATION_MGT_RELATION "Set of relationship classes for the Cost Management EA Support meta model"
	(is-a EA_Support_Relationship)
	(role abstract))

(defclass CONTRACT_COMPONENT_RELATION "Relationship class to define the set of elements for which a contract applies and to manage associated attributes for the relationship, e.g. service qualities."
	(is-a OBLIGATION_MGT_RELATION)
	(role concrete)
	(single-slot ccr_currency
;+		(comment "The currency in which the cost for the EA element under contract is to be paid")
		(type INSTANCE)
;+		(allowed-classes Currency)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ccr_end_date_ISO8601
;+		(comment "Defines the date up to which the use of the EA element is permitted")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ccr_renewal_model
;+		(comment "Defines the approach to be taken to renewing the contract for the element")
		(type INSTANCE)
;+		(allowed-classes Contract_Renewal_Model)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ccr_start_date_ISO8601
;+		(comment "Defines the date from which the use of the EA element is permitted")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot contract_component_to_element
;+		(comment "Slot to manage the element that is being provided by the contract")
		(type INSTANCE)
;+		(allowed-classes EA_Class)
		(create-accessor read-write))
	(single-slot ccr_contract_unit_of_measure
;+		(comment "The unit of measure used when defining the scale of use of the EA element")
		(type INSTANCE)
;+		(allowed-classes License_Model)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ccr_license
;+		(comment "The License describing the terms by which the EA element can be used under the Contract")
		(type INSTANCE)
;+		(allowed-classes License)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ccr_total_annual_cost
;+		(comment "The total annual cost for the contracted quantity of the EA element")
		(type FLOAT)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot contract_component_from_contract
;+		(comment "Slot that holds the Contract that is part of the relation.")
		(type INSTANCE)
;+		(allowed-classes Contract)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot ccr_contracted_units
;+		(comment "The quantity of a given unit of measure of the EA element available for use under the Contract")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ccr_renewal_notice_days
;+		(comment "Defines the number of days prior to the contracted end date that notice of contract cancellation must be given")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot contract_component_service_quals
;+		(comment "Slot to manage the set of service qualities that apply to the components that are being provided in contract")
		(type INSTANCE)
;+		(allowed-classes Business_Service_Quality_Value)
		(create-accessor read-write)))

(defclass REGULATED_COMPONENT_RELATION "Relationship class to define the set of elements for which a regulation applies and to manage associated attributes for the relationship, e.g. service qualities."
	(is-a OBLIGATION_MGT_RELATION)
	(role concrete)
	(multislot regulated_component_service_quals
		(type INSTANCE)
;+		(allowed-classes Service_Quality_Value)
		(create-accessor read-write))
	(single-slot regulated_component_to_element
;+		(comment "The EA element that is being regulated")
		(type INSTANCE)
;+		(allowed-classes EA_Class)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot regulated_component_regulation
;+		(comment "The regualtion that is being applied to the EA component")
		(type INSTANCE)
;+		(allowed-classes Regulation)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass OBLIGATION_COMPONENT_RELATION "Defines a relationshp between an Obligation and a component that it impacts"
	(is-a OBLIGATION_MGT_RELATION)
	(role concrete)
	(multislot obligation_component_service_quals
;+		(comment "The service qualities that are exhibited by the element in meeting the obligation")
		(type INSTANCE)
;+		(allowed-classes Service_Quality_Value)
		(create-accessor read-write))
	(single-slot obligation_component_to_element
;+		(comment "The element that is impacted by the obligation")
		(type INSTANCE)
;+		(allowed-classes EA_Class)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot obligation_component_from_obligation
;+		(comment "The obligation that is impacting the element")
		(type INSTANCE)
;+		(allowed-classes Compliance_Obligation Contractual_Obligation)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass REGULATED_DATA_USAGE_CONSENT_BUSPROC_RELATION "Defines the relationship between a Regulated Data Usage, a Business Process that is used to achieve consent as well as the types of consent that can be given"
	(is-a OBLIGATION_MGT_RELATION)
	(role concrete)
	(single-slot regdatausage_to_busproc_regdatausage
;+		(comment "The Regulated Data Usage for which consent is being achieved")
		(type INSTANCE)
;+		(allowed-classes Regulated_Data_Usage)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot regdatausage_to_busproc_consent_types
;+		(comment "The types of consent that are being achieved")
		(type INSTANCE)
;+		(allowed-classes Legal_Consent_Type)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(single-slot regdatausage_to_busproc_consent_busproc
;+		(comment "The business process that is used to achieve consent")
		(type INSTANCE)
;+		(allowed-classes Business_Process_Type)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass STRATEGY_MGT_RELATION "Set of relationship classes for the Strategy Management EA Support meta model"
	(is-a EA_Support_Relationship)
	(role abstract))

(defclass PLAN_TO_ELEMENT_RELATION "Defines a relationship between a strategic plan and an element that it impacts"
	(is-a STRATEGY_MGT_RELATION)
	(role concrete)
	(single-slot plan_to_element_change_activity
;+		(comment "The change activity designated to deliver the planned action against the element")
		(type INSTANCE)
;+		(allowed-classes Change_Activity)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot plan_to_element_change_action
;+		(comment "The action that the plan is performing on the EA element")
		(type INSTANCE)
;+		(allowed-classes Planning_Action)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot plan_to_element_ea_element
;+		(comment "The EA element that is impacted by the plan")
		(type INSTANCE)
;+		(allowed-classes Business_Relationship Information_Relationship Technology_Layer %3AEA_Graph_Relation Information_Layer Application_Relationship Business_Layer Application_Layer Governance Obligation_Management Service_Delivery Security_Management)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot plan_to_element_plan
;+		(comment "The plan that is impacting the element")
		(type INSTANCE)
;+		(allowed-classes Strategic_Plan)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass STRAT_TREND_IMPLICATION_TO_ELEMENT_RELATION "Defines a relationship between a strategic trend implication and an element"
	(is-a STRATEGY_MGT_RELATION)
	(role concrete)
	(single-slot implication_to_element_to_ea_element
;+		(comment "The element that is impacted by the trend implication")
		(type INSTANCE)
;+		(allowed-classes EA_Relation EA_Class)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot implication_to_element_from_implication
;+		(comment "The trend implication that is impacting the element")
		(type INSTANCE)
;+		(allowed-classes Strategic_Trend_Implication)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot change_percentage
;+		(comment "A positive or negative percentage change that is occuring")
		(type FLOAT)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass RESOURCE_OPT_RELATION "Relationships used to support resource optimisation"
	(is-a EA_Support_Relationship)
	(role abstract))

(defclass JOB_TO_ROLEATLEVEL_RELATION "Defines the Roles that a Job Position is expected to perform"
	(is-a RESOURCE_OPT_RELATION)
	(role concrete)
	(single-slot job_to_role_at_level_from_job
;+		(comment "The job that is expected to perform the role at a specific level")
		(type INSTANCE)
;+		(allowed-classes Job_Position)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot job_to_role_at_level_to_role_at_level
;+		(comment "The individual business role at a specific level that the job is expected to perform")
		(type INSTANCE)
;+		(allowed-classes Individual_Business_Role_At_Level)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass ESSENTIAL_VIEWER_RELATION "Set of relationship classes for the Essential Viewer EA Support meta model"
	(is-a EA_Support_Relationship)
	(role abstract))

(defclass REPORT_TO_PORTAL_SECTION_RELATION "The relationship between a Report and a Portal Section"
	(is-a ESSENTIAL_VIEWER_RELATION)
	(role concrete)
	(single-slot report_to_portal_section_index
;+		(comment "A numerical value used to define the sequence of the reports in the portal section")
		(type INTEGER)
		(default 0)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot r2psr_report
;+		(comment "The report which will be shown in the portal section")
		(type INSTANCE)
;+		(allowed-classes Report)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot r2psr_portal_section
;+		(comment "The portal section in which the report will be displayed")
		(type INSTANCE)
;+		(allowed-classes Portal_Section)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass INNOVATON_MGT_RELATION "Set of relationship classes for the Strategy Management EA Support meta model"
	(is-a EA_Support_Relationship)
	(role abstract))

(defclass IDEA_TO_ELEMENT_RELATION "Defines a relationship between an Idea and an element that it proposes to impact"
	(is-a INNOVATON_MGT_RELATION)
	(role concrete)
	(single-slot idea_to_element_idea
;+		(comment "The Idea that is proposing a change to the EA element")
		(type INSTANCE)
;+		(allowed-classes Idea_Option)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot idea_to_element_ea_element
;+		(comment "The EA element that is impacted by the Idea")
		(type INSTANCE)
;+		(allowed-classes EA_Relation EA_Class)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot idea_to_element_change_activity
;+		(comment "The change activity that will implement the change")
		(type INSTANCE)
;+		(allowed-classes Change_Activity)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot idea_to_element_change_action
;+		(comment "The change that is the being suggested for the EA element")
		(type INSTANCE)
;+		(allowed-classes Planning_Action)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass SYS_CONTENT_QUALITY_RELATION "Abstract class grouping together relationship classes that support content quality management services provided by Essential"
	(is-a EA_Support_Relationship)
	(role abstract))

(defclass SYS_ELEMENT_TO_COMMS_METHOD_RELATION "Defines the communication method that should be used to contact stakeholders of a specific content review or escalation policy"
	(is-a SYS_CONTENT_QUALITY_RELATION)
	(role concrete)
	(single-slot system_element_to_comms_method_from_element
;+		(comment "The element for which the communication method and frequency is being defined")
		(type INSTANCE)
;+		(allowed-classes SYS_CONTENT_QUALITY_REVIEW_POLICY SYS_CONTENT_QUALITY_ESCALATION_POLICY)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot system_element_to_comms_method_to_comms_method
;+		(comment "The method of communication to be used")
		(type INSTANCE)
;+		(allowed-classes SYS_COMMUNICATION_METHOD)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot sequence_number
;+		(comment "An integer that defines the sequence step at which this relationship occurs within the dynamic view of an architecture.")
		(type INTEGER)
		(default 1)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot system_element_to_comms_method_frequency
;+		(comment "The frequency of the communication")
		(type INSTANCE)
;+		(allowed-classes SYS_FREQUENCY)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass SYS_CONTENT_QUALITY_POLICY_TO_ROLE_RELATION "Defines the relationship between a content review or escalation policy and the role of the individuals responsible for reviewing content or handling an escalation"
	(is-a SYS_CONTENT_QUALITY_RELATION)
	(role concrete)
	(single-slot system_cq_polcy_to_role_from_policy
;+		(comment "The Content Quality Review or Escalation Policy to which the Individual Role is being assigned")
		(type INSTANCE)
;+		(allowed-classes SYS_CONTENT_QUALITY_REVIEW_POLICY SYS_CONTENT_QUALITY_ESCALATION_POLICY)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot system_cq_policy_to_role_relationship_type
;+		(comment "The nature of the association that the individual actor playing the assigned role should have with instances being reviewed")
		(type INSTANCE)
;+		(allowed-classes SYS_CONTENT_QUALITY_RELATIONSHIP_TYPE)
		(default [store_55_Class4])
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot system_cq_polcy_to_role_to_role
;+		(comment "The individual role that is being assigned to the Content Quality Review or Escalation Policy")
		(type INSTANCE)
;+		(allowed-classes Individual_Business_Role)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass SYS_CONTENT_QUALITY_REVIEW_TO_ACTOR_RELATION "Defines the relationship between a content review and the individual responsible for performing the review"
	(is-a SYS_CONTENT_QUALITY_RELATION)
	(role concrete)
	(single-slot system_content_quality_review_to_actor_from_review
;+		(comment "The Content Quality Review to which the actor is assigned")
		(type INSTANCE)
;+		(allowed-classes SYS_CONTENT_QUALITY_REVIEW)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot system_content_quality_review_to_actor_assignment_date_iso8601
;+		(comment "The date in which the actor was assigned to the Content Quality Review")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot system_content_quality_review_to_actor_to_actor
;+		(comment "The actor that is assigned to the Content Quality Review")
		(type INSTANCE)
;+		(allowed-classes Individual_Actor ACTOR_TO_ROLE_RELATION)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot system_content_quality_review_to_actor_comms_datetimes_iso8601
;+		(comment "The dates and times at which the actor was notified about the Content Quality review")
		(type STRING)
		(create-accessor read-write))
	(single-slot system_content_quality_review_to_actor_assigned_by_actor
;+		(comment "The actor that assigned this actor to the Content Quality Review")
		(type INSTANCE)
;+		(allowed-classes Individual_Actor ACTOR_TO_ROLE_RELATION)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot system_content_quality_review_to_actor_previous_assignment
;+		(comment "The actor that was previously assigned to this Content Quality Review")
		(type INSTANCE)
;+		(allowed-classes SYS_CONTENT_QUALITY_REVIEW_TO_ACTOR_RELATION)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass SYS_CONTENT_QUALITY_ESCALATION_TO_ACTOR_RELATION "Defines the relationship between an escalation of a content review and the individual responsible for handling the escalation"
	(is-a SYS_CONTENT_QUALITY_RELATION)
	(role concrete)
	(single-slot system_content_quality_escalation_to_actor_from_review
;+		(comment "The Content Quality Review that is being escalated")
		(type INSTANCE)
;+		(allowed-classes SYS_CONTENT_QUALITY_REVIEW)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot system_content_quality_escalation_to_actor_comms_datetimes_iso8601
;+		(comment "The dates and times when the actor to which the review is escalated has been contacted")
		(type STRING)
		(create-accessor read-write))
	(single-slot sequence_number
;+		(comment "An integer that defines the sequence step at which this relationship occurs within the dynamic view of an architecture.")
		(type INTEGER)
		(default 1)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot system_content_quality_escalation_to_actor_escalation_date_iso8601
;+		(comment "The date when this Content Quality Review Escalation took place")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot system_content_quality_escalation_to_actor_previous_escalation
;+		(comment "The previous escalation point (if any) for this escalation")
		(type INSTANCE)
;+		(allowed-classes SYS_CONTENT_QUALITY_ESCALATION_TO_ACTOR_RELATION)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot system_content_quality_escalation_to_actor_to_actor
;+		(comment "The actor to which the Content Quality Review is being escalated")
		(type INSTANCE)
;+		(allowed-classes Individual_Actor ACTOR_TO_ROLE_RELATION)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass GOVERNANCE_RELATION
	(is-a EA_Support_Relationship)
	(role abstract))

(defclass CONTROL_TO_ELEMENT_RELATION
	(is-a GOVERNANCE_RELATION)
	(role concrete)
	(single-slot control_to_element_ea_element
		(type INSTANCE)
;+		(allowed-classes EA_Class EA_Relation %3AEA_Graph_Relation)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot control_to_element_control
		(type INSTANCE)
;+		(allowed-classes Control)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot control_to_element_assessments
		(type INSTANCE)
;+		(allowed-classes Control_Assessment)
		(create-accessor read-write)))

(defclass Technology_Relation "Abstract base class of relationship / link classes related to elements in the Technology Layer of the meta model."
	(is-a EA_Relation)
	(role abstract))

(defclass TECH_NODE_TO_TECH_NODE_CONNECTION "Defines a connection between Technology Nodes"
	(is-a Technology_Relation)
	(role concrete)
	(single-slot tech_node_to_tech_node_to_tech_node
;+		(comment "The Technology Node to which the connection is established")
		(type INSTANCE)
;+		(allowed-classes Technology_Node)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot tech_node_to_tech_node_from_tech_node
;+		(comment "The Technology Node from which the connection is established")
		(type INSTANCE)
;+		(allowed-classes Technology_Node)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass %3AEA_Graph_Relation "Abstract super class for EA Relationships used on graphical forms. Every :EA_Graph_Relation class has a FROM and a TO slot to relate instances of the meta classes. Every :EA_Graph_Relation has a NAME"
	(is-a %3ADIRECTED-BINARY-RELATION EA_Graph_Management)
	(role abstract)
	(multislot system_content_quality_reviews
;+		(comment "The content quality reviews that have been undertaken against this element")
		(type INSTANCE)
;+		(allowed-classes SYS_CONTENT_QUALITY_REVIEW)
		(create-accessor read-write))
	(single-slot system_content_quality_last_reviewer_id
;+		(comment "The id of the person that most recently reviewed the content quality of this element")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ea_reference
;+		(comment "A human readable, unique and universal reference for the element")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot system_security_read_classification
;+		(comment "Defines the security classification that has been assigned to an element of the repository for READ access")
		(type INSTANCE)
;+		(allowed-classes EA_Content_Classification)
		(create-accessor read-write))
	(multislot impacting_change_activities
;+		(comment "Change activities that impact this element")
		(type INSTANCE)
;+		(allowed-classes Change_Activity)
		(create-accessor read-write))
	(multislot impacting_decisions
;+		(comment "Any Decisions that have been made with regards to this element")
		(type INSTANCE)
;+		(allowed-classes Decision)
		(create-accessor read-write))
	(single-slot %3Arelation_name
;+		(comment "The unique name for the instance of the relationship")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot system_last_modified_author_id
;+		(comment "The id of the user that most recently modified the instance")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot system_author_id
;+		(comment "Used to identify the creator of the element")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot ea_requirements
;+		(comment "The issues or needs associated with this element")
		(type INSTANCE)
;+		(allowed-classes Strategic_Requirement)
		(create-accessor read-write))
	(multislot budgets_for_element
;+		(comment "The budgets defined for this element")
		(type INSTANCE)
;+		(allowed-classes Budget)
		(create-accessor read-write))
	(single-slot system_last_modified_datetime_iso8601
;+		(comment "The date and time at which the element was most recently modified")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3Arelation_description
;+		(comment "A description of the relationship")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot target_performance_measures
;+		(comment "The Performance Measures that are defined as targets for this element")
		(type INSTANCE)
;+		(allowed-classes Performance_Measure)
		(create-accessor read-write))
	(single-slot %3AFROM
;+		(comment "Slot to hold the FROM side of the relationship. Always an instance of an EAS_Class")
		(type INSTANCE)
;+		(allowed-classes EA_Class)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot system_content_quality_last_reviewed_datetime_iso8601
;+		(comment "The date and time that the content quality of this element was reviewed")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot system_content_quality_status
;+		(comment "The current content quality status of this element")
		(type INSTANCE)
;+		(allowed-classes SYS_CONTENT_QUALITY_STATUS)
		(default [store_55_Class0])
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3ATO
;+		(comment "Slot to hold the TO side of the relationship. Always an instance of an EAS_Class.")
		(type INSTANCE)
;+		(allowed-classes EA_Class)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot system_security_edit_classification
;+		(comment "Defines the security classification that has been assigned to an element of the repository for EDIT access")
		(type INSTANCE)
;+		(allowed-classes EA_Content_Classification)
		(create-accessor read-write))
	(multislot ea_scope
;+		(comment "Supports the arbitrary scoping of an EA element by other EA elements, e.g. Org, Geo, Brand etc.")
		(type INSTANCE)
;+		(allowed-classes EA_Class)
		(create-accessor read-write))
	(single-slot system_creation_datetime_iso8601
;+		(comment "The date and time at which this element was created")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot system_content_lifecycle_status
;+		(comment "Defines the lifecycle status of an EA element in support of content approval")
		(type INSTANCE)
;+		(allowed-classes SYS_CONTENT_APPROVAL_STATUS)
		(default [essential_baseline_6.5.4_Class67])
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot external_repository_instance_reference
;+		(comment "Holds a set of references to this instance that are used in external repositories")
		(type INSTANCE)
;+		(allowed-classes External_Instance_Reference)
		(create-accessor read-write))
	(single-slot system_ea_reference_instance_counter
;+		(comment "A unique number that is used in derived ea references where this instance forms part of teh relationship path")
		(type INTEGER)
		(default 0)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot lifecycle_model_for_element
;+		(comment "The Lifecycle Model of the element in focus.")
		(type INSTANCE)
;+		(allowed-classes Lifecycle_Model)
		(create-accessor read-write))
	(single-slot ea_notes
;+		(comment "Abitrary notes that have been made against the element")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot %3Arelation_commentary
;+		(comment "Multi-language comments or labels associated with the graphical relation")
		(type INSTANCE)
;+		(allowed-classes Commentary)
		(create-accessor read-write))
	(single-slot %3Arelation_label
;+		(comment "A text label that can be used for display, particularly in graphical models.")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass %3ABusiness_Relationship "Super class for all relationships in the Business layer"
	(is-a %3AEA_Graph_Relation)
	(role abstract)
	(single-slot %3Arelation_label
;+		(comment "A text label that can be used for display, particularly in graphical models.")
		(type STRING)
		(default "occurs before")
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass %3ABP-DIAGRAM-RELATION "Super class of relationships that are used in Business Process Diagrams (Business Process Architectures)."
	(is-a %3ABusiness_Relationship)
	(role abstract)
	(single-slot contained_in_process_flow
;+		(comment "The process flow in which this relation occurs")
		(type INSTANCE)
;+		(allowed-classes Business_Process_Flow)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot process_information_passed
;+		(comment "The information (Information View) that is passed to the next step (Business Process, Business Activity).")
		(type INSTANCE)
;+		(allowed-classes Information_View_Usage)
		(create-accessor read-write)))

(defclass %3ABPU-OCCURS_BEFORE-BPU "Relation capturing the flow of one business process type (Process or Activity) to another business process type (Process or Activity)  in the architecture (process flow) of an encapsulating process."
	(is-a %3ABP-DIAGRAM-RELATION)
	(role concrete)
	(single-slot %3AFROM
;+		(comment "The preceeding sub-process in this flow.")
		(type INSTANCE)
;+		(allowed-classes Business_Process_Flow_Type)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot %3ATO
;+		(comment "The next sub-process that occurs after the process at the FROM slot of this relation in a process flow.")
		(type INSTANCE)
;+		(allowed-classes Business_Process_Flow_Type)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass %3ABA-DIAGRAM-RELATION "Super class of relationships that are used in Business Activity Diagrams."
	(is-a %3ABusiness_Relationship)
	(role abstract)
	(multislot task_information_passed
;+		(comment "The information (Information View) that is passed to the next task from the preceeding Business Task")
		(type INSTANCE)
;+		(allowed-classes Information_View_Usage)
		(create-accessor read-write))
	(single-slot contained_in_activity_flow
;+		(comment "Inverse relationship to track which Activity Flow a relationship is contained in")
		(type INSTANCE)
;+		(allowed-classes Business_Activity_Flow)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass %3ABTU-OCCURS_BEFORE-BTU "Flow Relationship between Business Tasks (Usages) in an Activity Diagram. The FROM node, is the preceeding Task and the TO node is the next Task that occurs in the activity."
	(is-a %3ABA-DIAGRAM-RELATION)
	(role concrete)
	(single-slot %3AFROM
;+		(comment "A preceeding task in an activity flow.")
		(type INSTANCE)
;+		(allowed-classes Business_Activity_Flow_Type)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot %3ATO
;+		(comment "The next task in the flow that follows from the preceeding task that is defined by the FROM slot of this relation")
		(type INSTANCE)
;+		(allowed-classes Business_Activity_Flow_Type)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass BC-DIAGRAM-RELATION "Super class of relationships that are used in Business Capability Diagrams (Business Capability Chain)."
	(is-a %3ABusiness_Relationship)
	(role abstract))

(defclass BCU-OOCURS_BEFORE-BCU "Relation capturing the flow of one business capability to another business capability in a business capability chain"
	(is-a BC-DIAGRAM-RELATION)
	(role concrete)
	(single-slot contained_in_business_capability_chain
;+		(comment "The business capability chain in which this relation occurs")
		(type INSTANCE)
;+		(allowed-classes Business_Capability_Chain)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot information_concepts_exchanged
;+		(comment "The set of Information Concepts that are exchanged between Business Capabilities in a Capability Chain")
		(type INSTANCE)
;+		(allowed-classes Information_Concept)
		(create-accessor read-write))
	(single-slot %3Arelation_label
;+		(comment "A text label that can be used for display, particularly in graphical models.")
		(type STRING)
		(default "occurs before")
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass %3APT-DIAGRAM-RELATION "Super class of relationships that are used in Product Type Diagrams."
	(is-a %3ABusiness_Relationship)
	(role abstract)
	(single-slot %3Arelation_label
;+		(comment "A text label that can be used for display, particularly in graphical models.")
		(type STRING)
		(default "occurs before")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3AFROM
;+		(comment "Slot to hold the FROM side of the relationship. Always an instance of an EAS_Class")
		(type INSTANCE)
;+		(allowed-classes EA_Class)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot %3ATO
;+		(comment "Slot to hold the TO side of the relationship. Always an instance of an EAS_Class.")
		(type INSTANCE)
;+		(allowed-classes EA_Class)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass %3APTU-DEPENDS_ON-PTU "Relationship modelling the static dependency between Product Type Usages in a Static Product Type Architecture."
	(is-a %3APT-DIAGRAM-RELATION)
	(role concrete)
	(single-slot %3Acontained_in_static_product_type_architecture
;+		(comment "The Static Product Type Architecture within which this dependency relationship is contained")
		(type INSTANCE)
;+		(allowed-classes Static_Product_Type_Architecture)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot %3Aptu_to_ptu_info_views
;+		(comment "The information view or information view attributes that are required to make use of a dependent product type")
		(type INSTANCE)
;+		(allowed-classes Information_View_Type)
		(create-accessor read-write))
	(single-slot %3Arelation_label
;+		(comment "A text label that can be used for display, particularly in graphical models.")
		(type STRING)
		(default "depends on")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3AFROM
;+		(comment "The usage of a product type that has the dependency")
		(type INSTANCE)
;+		(allowed-classes Static_Product_Type_Usage)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot %3ATO
;+		(comment "The usage of the dependent product type")
		(type INSTANCE)
;+		(allowed-classes Static_Product_Type_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass %3APROD-DIAGRAM-RELATION "Super class of relationships that are used in Product Diagrams."
	(is-a %3ABusiness_Relationship)
	(role abstract)
	(single-slot %3Arelation_label
;+		(comment "A text label that can be used for display, particularly in graphical models.")
		(type STRING)
		(default "occurs before")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3AFROM
;+		(comment "Slot to hold the FROM side of the relationship. Always an instance of an EAS_Class")
		(type INSTANCE)
;+		(allowed-classes EA_Class)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot %3ATO
;+		(comment "Slot to hold the TO side of the relationship. Always an instance of an EAS_Class.")
		(type INSTANCE)
;+		(allowed-classes EA_Class)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass %3APROD-DEPENDS-ON-PROD "Relationship modelling the static dependency between Product Usages in a Static Product Architecture."
	(is-a %3APROD-DIAGRAM-RELATION)
	(role concrete)
	(multislot %3Apu_to_pu_info_reps
;+		(comment "The information representations or information representation attributes that are required to make use of a dependent product")
		(type INSTANCE)
;+		(allowed-classes Information_Representation_Type)
		(create-accessor read-write))
	(single-slot %3Arelation_label
;+		(comment "A text label that can be used for display, particularly in graphical models.")
		(type STRING)
		(default "depends on")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3AFROM
;+		(comment "A usage of the product that has the dependency")
		(type INSTANCE)
;+		(allowed-classes Static_Product_Usage)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot %3Acontained_in_static_product_architecture
;+		(comment "The Static Product Architecture within which this dependency relationship is contained")
		(type INSTANCE)
;+		(allowed-classes Static_Product_Architecture)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot %3ATO
;+		(comment "A usage of the dependent product")
		(type INSTANCE)
;+		(allowed-classes Static_Product_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass %3ABM-DIAGRAM-RELATION "Super class of relationships that are used in Business Model Architectures"
	(is-a %3ABusiness_Relationship)
	(role abstract)
	(single-slot %3Arelation_in_business_model_architecture
;+		(comment "The Business Model Architecture in which this dependency is defined")
		(type INSTANCE)
;+		(allowed-classes Business_Model_Architecture)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot %3Arelation_label
;+		(comment "A text label that can be used for display, particularly in graphical models.")
		(type STRING)
		(default "depends on")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3AFROM
;+		(comment "Slot to hold the FROM side of the relationship. Always an instance of an EAS_Class")
		(type INSTANCE)
;+		(allowed-classes EA_Class)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3ATO
;+		(comment "Slot to hold the TO side of the relationship. Always an instance of an EAS_Class.")
		(type INSTANCE)
;+		(allowed-classes EA_Class)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass %3ABM-BCU-DEPENDS_ON-BCU "Defines a dependency relationship between Business Capabilities in a Business Model Architecture"
	(is-a %3ABM-DIAGRAM-RELATION)
	(role concrete)
	(single-slot %3Arelation_label
;+		(comment "A text label that can be used for display, particularly in graphical models.")
		(type STRING)
		(default "depends on")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3AFROM
;+		(comment "The Business Capability that is dependent on another Business Capability")
		(type INSTANCE)
;+		(allowed-classes Business_Model_Business_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3ATO
;+		(comment "The Business Capability upon which another Business Capability is dependent")
		(type INSTANCE)
;+		(allowed-classes Business_Model_Business_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass %3ABM-BCU-DEPENDS_ON-IU "Defines a dependency relationship between a Business Capability and Information in a Business Model Architecture"
	(is-a %3ABM-DIAGRAM-RELATION)
	(role concrete)
	(single-slot %3Arelation_label
;+		(comment "A text label that can be used for display, particularly in graphical models.")
		(type STRING)
		(default "depends on")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3AFROM
;+		(comment "The Business Capability that is dependent on an Information Concept or View")
		(type INSTANCE)
;+		(allowed-classes Business_Model_Business_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3ATO
;+		(comment "The Information Concept or View upon which the Business Capability is dependent")
		(type INSTANCE)
;+		(allowed-classes Business_Model_Information_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass %3ABM-BCU-DEPENDS_ON-ACU "Defines a dependency relationship between a Business Capability and an Application Capability in a Business Model Architecture"
	(is-a %3ABM-DIAGRAM-RELATION)
	(role concrete)
	(single-slot %3Arelation_label
;+		(comment "A text label that can be used for display, particularly in graphical models.")
		(type STRING)
		(default "depends on")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3AFROM
;+		(comment "The Business Capability that is dependent on an Application Capability")
		(type INSTANCE)
;+		(allowed-classes Business_Model_Business_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3ATO
;+		(comment "The Application Capability upon which the Business Capability is dependent")
		(type INSTANCE)
;+		(allowed-classes Business_Model_Application_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass %3ABM-IU-DEPENDS_ON-TCU "Defines a dependency relationship between Information and a Technology Capability in a Business Model Architecture"
	(is-a %3ABM-DIAGRAM-RELATION)
	(role concrete)
	(single-slot %3Arelation_label
;+		(comment "A text label that can be used for display, particularly in graphical models.")
		(type STRING)
		(default "depends on")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3AFROM
;+		(comment "The Information Concept/View that is dependent on a Technology Capability")
		(type INSTANCE)
;+		(allowed-classes Business_Model_Information_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3ATO
;+		(comment "The Technology Capability upon which the Information Concept/View is dependent")
		(type INSTANCE)
;+		(allowed-classes Business_Model_Technology_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass %3ABM-ACU-DEPENDS_ON-TCU "Defines a dependency relationship between an Application Capability and a Technology Capability in a Business Model Architecture"
	(is-a %3ABM-DIAGRAM-RELATION)
	(role concrete)
	(single-slot %3Arelation_label
;+		(comment "A text label that can be used for display, particularly in graphical models.")
		(type STRING)
		(default "depends on")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3AFROM
;+		(comment "The Application Capability that is dependent on a Technology Capability")
		(type INSTANCE)
;+		(allowed-classes Business_Model_Application_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3ATO
;+		(comment "The Technology Capability upon which the Application Capability is dependent")
		(type INSTANCE)
;+		(allowed-classes Business_Model_Technology_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass %3ABM-BCU-DEPENDS_ON-BRU "Defines a dependency relationship between a Business Capability and Business Roles/Role Types in a Business Model Architecture"
	(is-a %3ABM-DIAGRAM-RELATION)
	(role concrete)
	(single-slot %3Arelation_label
;+		(comment "A text label that can be used for display, particularly in graphical models.")
		(type STRING)
		(default "depends on")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3AFROM
;+		(comment "Slot to hold the FROM side of the relationship. Always an instance of an EAS_Class")
		(type INSTANCE)
;+		(allowed-classes Business_Model_Business_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3ATO
;+		(comment "Slot to hold the TO side of the relationship. Always an instance of an EAS_Class.")
		(type INSTANCE)
;+		(allowed-classes Business_Model_Role_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass %3ABM-BRU-DEPENDS_ON-IU "Defines a dependency relationship between a Business Role/Role Type and Information in a Business Model Architecture"
	(is-a %3ABM-DIAGRAM-RELATION)
	(role concrete)
	(single-slot %3Arelation_label
;+		(comment "A text label that can be used for display, particularly in graphical models.")
		(type STRING)
		(default "depends on")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3AFROM
;+		(comment "Slot to hold the FROM side of the relationship. Always an instance of an EAS_Class")
		(type INSTANCE)
;+		(allowed-classes Business_Model_Role_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3ATO
;+		(comment "Slot to hold the TO side of the relationship. Always an instance of an EAS_Class.")
		(type INSTANCE)
;+		(allowed-classes Business_Model_Information_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass %3ABMC-DIAGRAM-RELATION "The set of relationships used in a Business Model Configuration Architecture model"
	(is-a %3ABusiness_Relationship)
	(role abstract)
	(single-slot bmc_relation_in_business_model_config_architecture
;+		(comment "The Business Model Configuration Architecture Model that contains this dependency")
		(type INSTANCE)
;+		(allowed-classes Business_Model_Configuration_Architecture)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot %3Arelation_label
;+		(comment "A text label that can be used for display, particularly in graphical models.")
		(type STRING)
		(default "occurs before")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3AFROM
;+		(comment "Slot to hold the FROM side of the relationship. Always an instance of an EAS_Class")
		(type INSTANCE)
;+		(allowed-classes EA_Class)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3ATO
;+		(comment "Slot to hold the TO side of the relationship. Always an instance of an EAS_Class.")
		(type INSTANCE)
;+		(allowed-classes EA_Class)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass %3ABMC-BRAU-DEPENDS_ON-BRAU "Defines a dependency relationship between Business Reference Architectures in a Business Model Configuration Architecture"
	(is-a %3ABMC-DIAGRAM-RELATION)
	(role concrete)
	(single-slot %3Arelation_label
;+		(comment "A text label that can be used for display, particularly in graphical models.")
		(type STRING)
		(default "occurs before")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3AFROM
;+		(comment "Slot to hold the FROM side of the relationship. Always an instance of an EAS_Class")
		(type INSTANCE)
;+		(allowed-classes Business_Reference_Architecture_Config_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3ATO
;+		(comment "Slot to hold the TO side of the relationship. Always an instance of an EAS_Class.")
		(type INSTANCE)
;+		(allowed-classes Business_Reference_Architecture_Config_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass %3ABMC-BRAU-DEPENDS_ON-ARIU "Defines a dependency relationship between a Business Reference Architecture and an Application Reference Implementation in a Business Model Configuration Architecture"
	(is-a %3ABMC-DIAGRAM-RELATION)
	(role concrete)
	(single-slot %3Arelation_label
;+		(comment "A text label that can be used for display, particularly in graphical models.")
		(type STRING)
		(default "occurs before")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3AFROM
;+		(comment "Slot to hold the FROM side of the relationship. Always an instance of an EAS_Class")
		(type INSTANCE)
;+		(allowed-classes Business_Reference_Architecture_Config_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3ATO
;+		(comment "Slot to hold the TO side of the relationship. Always an instance of an EAS_Class.")
		(type INSTANCE)
;+		(allowed-classes Application_Reference_Implementation_Config_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass %3AApplication_Relationship "Super class for all Application relationships."
	(is-a %3AEA_Graph_Relation)
	(role abstract))

(defclass %3AASU-TO-ASU-STATIC-RELATION "Relation between Application Service Usages. Models the dependencies between Application Services in a static model."
	(is-a %3AApplication_Relationship)
	(role concrete)
	(single-slot inverse_of_application_service_usage_dependencies
;+		(comment "Relation back to containing architecture")
		(type INSTANCE)
;+		(allowed-classes Static_Application_Service_Architecture)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3Arelation_label
;+		(comment "A text label that can be used for display, particularly in graphical models.")
		(type STRING)
		(default "depends on")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3AFROM
;+		(comment "Application Service Usage that depends on another Application Service.")
		(type INSTANCE)
;+		(allowed-classes Application_Service_Usage)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot %3ATO
;+		(comment "(Usage of an) Application Service on which other Application Services are dependent in an Application Service Architecture.")
		(type INSTANCE)
;+		(allowed-classes Application_Service_Usage)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass %3AAFA-RELATION "Super class of relations between components in Application Function Architectures."
	(is-a %3AApplication_Relationship)
	(role abstract))

(defclass %3AASU-TO-ASFU-RELATION "Relation from an Application Service Usage and an Application Function Usage. An Application Service uses/calls/invokes the Application Function in an Application Function Architecture."
	(is-a %3AAFA-RELATION)
	(role concrete)
	(multislot returned_information
;+		(comment "The Information that is returned by the function that is being used.")
		(type INSTANCE)
;+		(allowed-classes Information_View_Usage Information_View)
		(create-accessor read-write))
	(single-slot sequence_number
;+		(comment "An integer that defines the sequence step at which this relationship occurs within the dynamic view of an architecture.")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot sent_information
;+		(comment "The Information that is sent in a usage of a function")
		(type INSTANCE)
;+		(allowed-classes Information_View_Usage Information_View)
		(create-accessor read-write))
	(single-slot %3Arelation_label
;+		(comment "A text label that can be used for display, particularly in graphical models.")
		(type STRING)
		(default "requests")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3AFROM
;+		(comment "Usage of Application Service in the architecture that is using the Application Function")
		(type INSTANCE)
;+		(allowed-classes Application_Service_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot application_communication_method
;+		(comment "The communication style that is employed for this relation. Either synchronous or asynchronous.")
		(type SYMBOL)
		(allowed-values Synchronous Asynchronous)
		(default Synchronous)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot %3ATO
;+		(comment "Usage of the Application Function (in this architecture) that is being used by the Application Service at the FROM end of the relation")
		(type INSTANCE)
;+		(allowed-classes Application_Function_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass %3AAFU-PROVIDED-BY-RELATION "Relation that models the Application Service Usage that provides this Application Function Usage."
	(is-a %3AAFA-RELATION)
	(role concrete)
	(single-slot %3Arelation_label
;+		(comment "A text label that can be used for display, particularly in graphical models.")
		(type STRING)
		(default "provided by")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3AFROM
;+		(comment "The Application Function that is being used. The FROM end of this relation holds the Function usage that is being provided by the TO end of this relation")
		(type INSTANCE)
;+		(allowed-classes Application_Function_Usage)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot %3ATO
;+		(comment "The Application Service that is providing the Application Function that is being used.")
		(type INSTANCE)
;+		(allowed-classes Application_Service_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass %3AASU-INITIATED_BY-EVENT "Relationship between an intiating event and the Application Service it is initiating."
	(is-a %3AAFA-RELATION)
	(role concrete)
	(single-slot %3Arelation_label
;+		(comment "A text label that can be used for display, particularly in graphical models.")
		(type STRING)
		(default "Initiates")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3AFROM
;+		(comment "Slot to hold the FROM side of the relationship. Always an instance of an EAS_Class")
		(type INSTANCE)
;+		(allowed-classes Initiating_Business_Event_Usage_In_Application_Service)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot %3ATO
;+		(comment "Slot to hold the TO side of the relationship. Always an instance of an EAS_Class.")
		(type INSTANCE)
;+		(allowed-classes Application_Service_Architecture_Type)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass %3AASU-RAISES-EVENT "Relationship between an Application Service Architecture type and the event it is raising."
	(is-a %3AAFA-RELATION)
	(role concrete)
	(single-slot %3Arelation_label
;+		(comment "A text label that can be used for display, particularly in graphical models.")
		(type STRING)
		(default "Raises")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3AFROM
;+		(comment "Slot to hold the FROM side of the relationship. Always an instance of an EAS_Class")
		(type INSTANCE)
;+		(allowed-classes Application_Service_Architecture_Type)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot %3ATO
;+		(comment "Slot to hold the TO side of the relationship. Always an instance of an EAS_Class.")
		(type INSTANCE)
;+		(allowed-classes Raised_Business_Event_Usage_In_Application_Service)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass %3AAFIA-RELATION "Super class for relations used in Application Function Implementation Architectures"
	(is-a %3AApplication_Relationship)
	(role abstract)
	(single-slot contained_in_dynamic_application_architecture
;+		(comment "Captures the dynamic architecture that contains the relation")
		(type INSTANCE)
;+		(allowed-classes Dynamic_Application_Provider_Architecture)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot %3AFROM
;+		(comment "Slot to hold the FROM side of the relationship. Always an instance of an EAS_Class")
		(type INSTANCE)
;+		(allowed-classes EA_Class)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3ATO
;+		(comment "Slot to hold the TO side of the relationship. Always an instance of an EAS_Class.")
		(type INSTANCE)
;+		(allowed-classes EA_Class)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass %3ADAPFIU-PROVIDED-BY-RELATION "Relation to model the which Application Provider is provding an Application Function Implementation that is being used in an Application Function Implementation Architecture. As these are instances of instances, the relation is FROM an Application Function Implementation Usage TO an Application Provider Usage"
	(is-a %3AAFIA-RELATION)
	(role concrete)
	(single-slot %3Arelation_label
;+		(comment "A text label that can be used for display, particularly in graphical models.")
		(type STRING)
		(default "provided by")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3AFROM
;+		(comment "The Application Function Implementation Usage that is being provided")
		(type INSTANCE)
;+		(allowed-classes Dynamic_Application_Function_Implementation_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3ATO
;+		(comment "The Application Provider Usage that is providing the Application Function Implementation.")
		(type INSTANCE)
;+		(allowed-classes Dynamic_Application_Provider_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass %3ADAPU-TO-DAPFIU-RELATION "Relation capturing a Application Provider using an Application Function Implementation (provided by a other Application Provider). As these are instances of instances of Application Providers and Function Implementations, Usages are used."
	(is-a %3AAFIA-RELATION)
	(role concrete)
	(multislot returned_information
;+		(comment "The Information that is returned by the function that is being used.")
		(type INSTANCE)
;+		(allowed-classes Information_Representation_Usage Information_Representation)
		(create-accessor read-write))
	(single-slot sequence_number
;+		(comment "An integer that defines the sequence step at which this relationship occurs within the dynamic view of an architecture.")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot sent_information
;+		(comment "The Information that is sent in a usage of a function")
		(type INSTANCE)
;+		(allowed-classes Information_Representation_Usage Information_Representation)
		(create-accessor read-write))
	(single-slot %3Arelation_label
;+		(comment "A text label that can be used for display, particularly in graphical models.")
		(type STRING)
		(default "invokes")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3AFROM
;+		(comment "Application Provider Usage that is making a request to use the Application Function Implementation at the TO end of this relationship")
		(type INSTANCE)
;+		(allowed-classes Dynamic_Application_Provider_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot application_communication_method
;+		(comment "The communication style that is employed for this relation. Either synchronous or asynchronous.")
		(type SYMBOL)
		(allowed-values Synchronous Asynchronous)
		(default Synchronous)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot %3ATO
;+		(comment "The Application Function Implementation (Usage) that is being invoked by the Application Provider at the FROM end of the relation.")
		(type INSTANCE)
;+		(allowed-classes Dynamic_Application_Function_Implementation_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass %3ADAPU-INITIATED_BY-EVENT "Relationship between an intiating event and the Application Provider it is initiating."
	(is-a %3AAFIA-RELATION)
	(role concrete)
	(single-slot %3Arelation_label
;+		(comment "A text label that can be used for display, particularly in graphical models.")
		(type STRING)
		(default "Initiates")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3AFROM
;+		(comment "Slot to hold the FROM side of the relationship. Always an instance of an EAS_Class")
		(type INSTANCE)
;+		(allowed-classes Initiating_System_Event_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3ATO
;+		(comment "Slot to hold the TO side of the relationship. Always an instance of an EAS_Class.")
		(type INSTANCE)
;+		(allowed-classes Dynamic_Application_Provider_Architecture_Type)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass %3ADAPU-RAISES-EVENT "Relationship between a Dynamic Application Provider Architecture type and the event it is raising."
	(is-a %3AAFIA-RELATION)
	(role concrete)
	(single-slot %3Arelation_label
;+		(comment "A text label that can be used for display, particularly in graphical models.")
		(type STRING)
		(default "Raises")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3AFROM
;+		(comment "Slot to hold the FROM side of the relationship. Always an instance of an EAS_Class")
		(type INSTANCE)
;+		(allowed-classes Dynamic_Application_Provider_Architecture_Type)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3ATO
;+		(comment "Slot to hold the TO side of the relationship. Always an instance of an EAS_Class.")
		(type INSTANCE)
;+		(allowed-classes Raised_System_Event_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass %3AAPA-STATIC-RELATION "Relationships contained within a Static Application Provider Architecture"
	(is-a %3AApplication_Relationship)
	(role abstract)
	(single-slot contained_in_static_application_provider_architecture
;+		(comment "The static application provider architecture that this relation is defined in")
		(type INSTANCE)
;+		(allowed-classes Static_Application_Provider_Architecture)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass %3AAPU-TO-APFIU-STATIC-RELATION "Relationship modelling the static dependency between an Application Provider Usage and an Application Function Implementation in an Application Provider Architecture."
	(is-a %3AAPA-STATIC-RELATION)
	(role concrete)
	(single-slot %3Arelation_label
;+		(comment "A text label that can be used for display, particularly in graphical models.")
		(type STRING)
		(default "invokes")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3AFROM
;+		(comment "Slot to hold the FROM side of the relationship. Always an instance of an EAS_Class")
		(type INSTANCE)
;+		(allowed-classes Static_Application_Provider_Usage)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot %3ATO
;+		(comment "Slot to hold the TO side of the relationship. Always an instance of an EAS_Class.")
		(type INSTANCE)
;+		(allowed-classes Static_Application_Function_Implementation_Usage)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass %3AAPU-TO-APU-STATIC-RELATION "Relationship modelling the static dependency between Application Provider Usages in an Application Provider Architecture."
	(is-a %3AAPA-STATIC-RELATION)
	(role concrete)
	(single-slot apu_to_apu_relation_inforep_acquisition_method
;+		(comment "The acquisition method used to pass the Information Representations")
		(type INSTANCE)
;+		(allowed-classes Data_Acquisition_Method)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3Arelation_label
;+		(comment "A text label that can be used for display, particularly in graphical models.")
		(type STRING)
		(default "depends on")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3AFROM
;+		(comment "Slot to hold the FROM side of the relationship. Always an instance of a Static Application Provider Usage")
		(type INSTANCE)
;+		(allowed-classes Static_Application_Provider_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot apu_to_apu_relation_inforep_service_quals
;+		(comment "The quality of service for the exchange of information (e.g. frequency of the exchange of information between the Application Providers)")
		(type INSTANCE)
;+		(allowed-classes Information_Service_Quality_Value)
		(create-accessor read-write))
	(multislot apu_to_apu_relation_inforeps
;+		(comment "The Information Representations that are exchanged between Application Providers")
		(type INSTANCE)
;+		(allowed-classes APP_PRO_TO_INFOREP_RELATION APP_PRO_TO_INFOREP_EXCHANGE_RELATION)
		(create-accessor read-write))
	(single-slot %3ATO
;+		(comment "Slot to hold the TO side of the relationship. Always an instance of a Static Application Provider Usage")
		(type INSTANCE)
;+		(allowed-classes Static_Application_Provider_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass SCA-RELATION "Relationships between elements of a Software Component Architecture"
	(is-a %3AApplication_Relationship)
	(role abstract)
	(single-slot contained_in_logical_sw_arch
;+		(comment "The logical software architecture in which this relation is contained")
		(type INSTANCE)
;+		(allowed-classes Logical_Software_Architecture)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass %3ASCU-TO-SCU-RELATION "The relationship between Software Component Usages in a Logical Software  Architecture."
	(is-a SCA-RELATION)
	(role concrete)
	(single-slot %3Arelation_label
;+		(comment "A text label that can be used for display, particularly in graphical models.")
		(type STRING)
		(default "depends on")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3AFROM
;+		(comment "Slot to hold the FROM side of the relationship. Always an instance of a Software Component Usage")
		(type INSTANCE)
;+		(allowed-classes Software_Component_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3ATO
;+		(comment "Slot to hold the TO side of the relationship. Always an instance of a Software Component Usage.")
		(type INSTANCE)
;+		(allowed-classes Software_Component_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass SCU-TO-SIRU-RELATION "The relationship between a Software Component Usage and a Software Information Representation Usage in a Logical Software Architecture."
	(is-a SCA-RELATION)
	(role concrete)
	(single-slot %3Arelation_label
;+		(comment "A text label that can be used for display, particularly in graphical models.")
		(type STRING)
		(default "uses data in")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3AFROM
;+		(comment "Slot to hold the FROM side of the relationship. Always an instance of a Software Component Usage")
		(type INSTANCE)
;+		(allowed-classes Software_Component_Usage)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot %3ATO
;+		(comment "Slot to hold the TO side of the relationship. Always an instance of a Software_Information_Representation_Usage.")
		(type INSTANCE)
;+		(allowed-classes Software_Information_Representation_Usage)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass %3AInformation_Relationship "Class of relationships in the information layer of the meta model."
	(is-a %3AEA_Graph_Relation)
	(role abstract))

(defclass %3ATechnology_Relationship "Class of relationships in the technology layer of the meta model."
	(is-a %3AEA_Graph_Relation)
	(role abstract)
	(single-slot %3ATECHNOLOGY_PROTOCOL
;+		(comment "The technology protocol that is used to operate this relationship between components. This slot is used from subclasses of the DIRECTED_BINARY relation.")
		(type INSTANCE)
;+		(allowed-classes Technology_Protocol_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass %3ATCA-RELATION "Super class of relations in Technology Component Architectures."
	(is-a %3ATechnology_Relationship)
	(role abstract)
	(single-slot architecture_containing_tcf_relations
;+		(comment "The technology component architecture that contains this TCU-TO-TFU relation.")
		(type INSTANCE)
;+		(allowed-classes Technology_Component_Architecture)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3AFROM
;+		(comment "Slot to hold the FROM side of the relationship. Always an instance of a Technology Component")
		(type INSTANCE)
;+		(allowed-classes Technology_Component_Architecture_Type)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot %3ATO
;+		(comment "Slot to hold the TO side of the relationship. Always an instance of a Technology Component Type.")
		(type INSTANCE)
;+		(allowed-classes Technology_Component_Architecture_Type)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass TFU-PROVIDED_BY-TCU-RELATION "Relationship between a Technology Function Usage and the Technology Component Usage that is providing the Technology Function."
	(is-a %3ATCA-RELATION)
	(role concrete)
	(single-slot %3Arelation_label
;+		(comment "A text label that can be used for display, particularly in graphical models.")
		(type STRING)
		(default "provided by")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3AFROM
;+		(comment "The Technology Function Usage that is being provided in a Technology Component Architecture")
		(type INSTANCE)
;+		(allowed-classes Technology_Function_Usage)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot %3ATO
;+		(comment "Technology Component Usage that is providing the Technology Function at the FROM end of this relationship")
		(type INSTANCE)
;+		(allowed-classes Technology_Component_Usage)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass TCU-TO-TFU-RELATION_GRAPH "Relation to model the use of a Technology Function by a Technology Component. This models the use of a Technology Function by a Technology Component in a Technology Component Architecture."
	(is-a %3ATCA-RELATION)
	(role concrete)
	(single-slot %3Arelation_label
;+		(comment "A text label that can be used for display, particularly in graphical models.")
		(type STRING)
		(default "calls")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3AFROM
;+		(comment "The Technology Component usage that is invoking a Technology Function Usage in a Technology Component Architecture")
		(type INSTANCE)
;+		(allowed-classes Technology_Component_Usage)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot %3ATO
;+		(comment "The Technology Function Usage that is being invoked by a Technology Component Usage in a Technology Component Architecture")
		(type INSTANCE)
;+		(allowed-classes Technology_Function_Usage)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass %3ATCU-TO-TCU-RELATION "Relation to model the dependency between  Technology Components in a Technology Composite Architecture."
	(is-a %3ATCA-RELATION)
	(role concrete)
	(single-slot %3Arelation_label
;+		(comment "A text label that can be used for display, particularly in graphical models.")
		(type STRING)
		(default "depends on")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3AFROM
;+		(comment "Slot to hold the FROM side of the relationship. Always an instance of a Technology Component")
		(type INSTANCE)
;+		(allowed-classes Technology_Component_Usage)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot %3ATO
;+		(comment "Slot to hold the TO side of the relationship. Always an instance of a Technology Component Type.")
		(type INSTANCE)
;+		(allowed-classes Technology_Component_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass %3ATPA-RELATION "Super class of relations that are used in Technology Provider Architectures."
	(is-a %3ATechnology_Relationship)
	(role abstract)
	(single-slot relation_contained_in_tech_provider_architecture
;+		(comment "The Technology Provider Architecture in which this instance is contained")
		(type INSTANCE)
;+		(allowed-classes Technology_Build_Architecture)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3AFROM
;+		(comment "Slot to hold the FROM side of the relationship. Always an instance of a Technology Build Architecture Type")
		(type INSTANCE)
;+		(allowed-classes Technology_Build_Architecture_Type)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot %3ATO
;+		(comment "Slot to hold the TO side of the relationship. Always an instance of a Technology Build Architecture Type")
		(type INSTANCE)
;+		(allowed-classes Technology_Build_Architecture_Type)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass %3ATPU-TO-TPFU-RELATION "Relation that models the usage of a Technology Function by a Technology Provider. That is, the Technology Provider calling the Technology Function."
	(is-a %3ATPA-RELATION)
	(role concrete)
	(single-slot %3Arelation_label
;+		(comment "A text label that can be used for display, particularly in graphical models.")
		(type STRING)
		(default "calls")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3AFROM
;+		(comment "The Technology Product Usage that is calling or invoking the Technology Function Usage.")
		(type INSTANCE)
;+		(allowed-classes Technology_Provider_Usage)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot %3ATO
;+		(comment "Models the TO end of the relation - the Technology Product Function Usage that is being called or invoked by a Technology Product Usage.")
		(type INSTANCE)
;+		(allowed-classes Technology_Provider_Function_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass %3ATPFU-PROVIDED-BY-TPU "Relation to model the Technology Provider Usage that is providing a Technology Provider Function Usage. This relation enables the modeller to capture those Technology Functions that are exposed by a Technology Provider."
	(is-a %3ATPA-RELATION)
	(role concrete)
	(single-slot %3Arelation_name
;+		(comment "The unique name for the instance of the relationship")
		(type STRING)
		(default "<architecture>::<from>::provided by::<to>")
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot %3Arelation_label
;+		(comment "A text label that can be used for display, particularly in graphical models.")
		(type STRING)
		(default "provided by")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3AFROM
;+		(comment "The Technology Product Function Usage that is being provided")
		(type INSTANCE)
;+		(allowed-classes Technology_Provider_Function_Usage)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot %3ATO
;+		(comment "The Technology Product Usage that is providing the Technology Function in a Technology Product Architecture.")
		(type INSTANCE)
;+		(allowed-classes Technology_Provider_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass %3ATPU-TO-TPU-RELATION "Relationship to capture the dependencies between Technology Providers in a Technology Provider Architecture / Technology Product Build."
	(is-a %3ATPA-RELATION)
	(role concrete)
	(single-slot %3Arelation_label
;+		(comment "A text label that can be used for display, particularly in graphical models.")
		(type STRING)
		(default "depends on")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3AFROM
;+		(comment "Slot to hold the FROM side of the relationship. Always an instance of an EAS_Class")
		(type INSTANCE)
;+		(allowed-classes Technology_Provider_Usage)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot %3ATO
;+		(comment "Slot to hold the TO side of the relationship. Always an instance of an EAS_Class.")
		(type INSTANCE)
;+		(allowed-classes Technology_Provider_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass %3ATPRA-RELATION "Set of relationships that are allowed in Technology Product Architectures."
	(is-a %3ATechnology_Relationship)
	(role concrete)
	(single-slot relation_contained_in_tech_product_architecture
;+		(comment "The Technology Product Architecture that this relation belongs to")
		(type INSTANCE)
;+		(allowed-classes Technology_Product_Architecture)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3Arelation_label
;+		(comment "A text label that can be used for display, particularly in graphical models.")
		(type STRING)
		(default "depends on")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3AFROM
;+		(comment "Slot managing the source slot on the relation.")
		(type INSTANCE)
;+		(allowed-classes Technology_Product_Architecture_Type)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot %3ATO
;+		(comment "Slot to hold the TO side of the relationship. The target of the relationship")
		(type INSTANCE)
;+		(allowed-classes Technology_Product_Architecture_Type)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass %3APTM-RELATION "Set of relationships that are allowed in Physical Technology Models."
	(is-a %3ATechnology_Relationship)
	(role abstract)
	(single-slot %3AFROM
;+		(comment "Slot to hold the FROM side of the relationship. Always an instance of an EAS_Class")
		(type INSTANCE)
;+		(allowed-classes EA_Class)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3ATO
;+		(comment "Slot to hold the TO side of the relationship. Always an instance of an EAS_Class.")
		(type INSTANCE)
;+		(allowed-classes EA_Class)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass %3ATNU-TO-TNU-RELATION "Set of relationships between Technology Nodes (usages) that are allowed in Technology Deployment Architectures."
	(is-a %3APTM-RELATION)
	(role concrete)
	(single-slot containing_technology_deployment_architecture
;+		(comment "The Technology Depoyment Architecture in which this instance is contained")
		(type INSTANCE)
;+		(allowed-classes Technology_Deployment_Architecture)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot %3Arelation_label
;+		(comment "A text label that can be used for display, particularly in graphical models.")
		(type STRING)
		(default "Connected To")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3AFROM
;+		(comment "Slot to hold the FROM side of the relationship. Always an instance of an EAS_Class")
		(type INSTANCE)
;+		(allowed-classes Technology_Deployment_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3ATO
;+		(comment "Slot to hold the TO side of the relationship. Always an instance of an EAS_Class.")
		(type INSTANCE)
;+		(allowed-classes Technology_Deployment_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Project_Management_Relationships "Base class of relationships used to capture dependencies in Project Management relationship models."
	(is-a %3AEA_Graph_Relation)
	(role abstract))

(defclass %3APJ-RELATION "Abstract base relationship class for capturing the relationships and dependencies that a project can have."
	(is-a Project_Management_Relationships)
	(role abstract))

(defclass %3AEA_Support_Relationship "The set of relationships for graphical models of elements from the EA Support area of the meta model."
	(is-a %3AEA_Graph_Relation)
	(role abstract)
	(single-slot %3AFROM
;+		(comment "Slot to hold the FROM side of the relationship. Always an instance of an EAS_Class")
		(type INSTANCE)
;+		(allowed-classes EA_Class)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot %3ATO
;+		(comment "Slot to hold the TO side of the relationship. Always an instance of an EAS_Class.")
		(type INSTANCE)
;+		(allowed-classes EA_Class)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass %3ARoadmap-Model-Relation "Class to define the relationships that can be used in a Roadmap Model."
	(is-a %3AEA_Support_Relationship)
	(role abstract)
	(single-slot %3Acontained_in_roadmap
;+		(comment "Slot defining the Roadmap Model in which this relationship is contained.")
		(type INSTANCE)
;+		(allowed-classes Roadmap_Model)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot %3AFROM
;+		(comment "Slot to hold the FROM side of the relationship. Always an instance of an EAS_Class")
		(type INSTANCE)
;+		(allowed-classes EA_Class)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot %3ATO
;+		(comment "Slot to hold the TO side of the relationship. Always an instance of an EAS_Class.")
		(type INSTANCE)
;+		(allowed-classes EA_Class)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass %3Aroadmap-transition-relation "Relationship representing the transition between milestones on a roadmap model. Each transition captures the Strategic Plans that will make the transition happen."
	(is-a %3ARoadmap-Model-Relation)
	(role concrete)
	(single-slot %3AFROM
;+		(comment "Slot to hold the FROM side of the relationship. Always an instance of an EAS_Class")
		(type INSTANCE)
;+		(allowed-classes Roadmap_Milestone)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot %3Aroadmap_strategic_plans
;+		(comment "The set of strategic plans that are in place to ensure that the transition to a new milestone is realised.")
		(type INSTANCE)
;+		(allowed-classes Strategic_Plan)
		(create-accessor read-write))
	(single-slot %3ATO
;+		(comment "Slot to hold the TO side of the relationship. Always an instance of an EAS_Class.")
		(type INSTANCE)
;+		(allowed-classes Roadmap_Milestone)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass %3Aroadmap-timeline-relation "Relationship linking a Roadmap Model Milestone to a particular time-line point."
	(is-a %3ARoadmap-Model-Relation)
	(role concrete)
	(single-slot %3AFROM
;+		(comment "Slot to hold the FROM side of the relationship. Always an instance of an EAS_Class")
		(type INSTANCE)
;+		(allowed-classes Roadmap_Milestone)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot %3ATO
;+		(comment "Slot to hold the TO side of the relationship. Always an instance of an EAS_Class.")
		(type INSTANCE)
;+		(allowed-classes Roadmap_Timeline_Point)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass %3Aroadmap-start-relation "Relationship class from the start element to the first milestone(s) in a roadmap."
	(is-a %3ARoadmap-Model-Relation)
	(role concrete)
	(single-slot %3Arelation_label
;+		(comment "A text label that can be used for display, particularly in graphical models.")
		(type STRING)
		(default "start")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3AFROM
;+		(comment "Slot to hold the FROM side of the relationship. Always an instance of an EAS_Class")
		(type INSTANCE)
;+		(allowed-classes Roadmap_Start)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot %3ATO
;+		(comment "Slot to hold the TO side of the relationship. Always an instance of an EAS_Class.")
		(type INSTANCE)
;+		(allowed-classes Roadmap_Milestone)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass %3ALifecycle-Model-Relation "Base class of classes used to define the relationships between elements in a Lifecycle Model."
	(is-a %3AEA_Support_Relationship)
	(role abstract)
	(single-slot %3AFROM
;+		(comment "Slot to hold the FROM side of the relationship. Always an instance of an EAS_Class")
		(type INSTANCE)
;+		(allowed-classes EA_Class)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot %3Acontained_in_lifecycle_model
;+		(comment "Slot to capture the Lifecycle Model in which a relationship exists.")
		(type INSTANCE)
;+		(allowed-classes Lifecycle_Model)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot %3ATO
;+		(comment "Slot to hold the TO side of the relationship. Always an instance of an EAS_Class.")
		(type INSTANCE)
;+		(allowed-classes EA_Class)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass %3Alifecycle-transition-relation "Relationship defining the transition between Lifecycle Status elements in a Lifecycle Model. That is the change from one status to another by an element in the enterprise, including the Strategic Plans that are in place in response to the change of Lifecycle Status."
	(is-a %3ALifecycle-Model-Relation)
	(role concrete)
	(multislot %3Alifecycle_strategic_plans
;+		(comment "The set of Strategic Plans that are defined in response to the change of Lifecycle Status.")
		(type INSTANCE)
;+		(allowed-classes Strategic_Plan)
		(create-accessor read-write))
	(single-slot %3Arelation_label
;+		(comment "A text label that can be used for display, particularly in graphical models.")
		(type STRING)
		(default "status change")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3AFROM
;+		(comment "Slot to hold the FROM side of the relationship. Always an instance of an EAS_Class")
		(type INSTANCE)
;+		(allowed-classes Lifecycle_Status_Usage)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot %3ATO
;+		(comment "Slot to hold the TO side of the relationship. Always an instance of an EAS_Class.")
		(type INSTANCE)
;+		(allowed-classes Lifecycle_Status_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass %3Alifecycle-timeline-relation "Relationship linking a Lifecycle Status in Lifecycle Model to a particular time-line point."
	(is-a %3ALifecycle-Model-Relation)
	(role concrete)
	(single-slot %3Arelation_label
;+		(comment "A text label that can be used for display, particularly in graphical models.")
		(type STRING)
		(default "from")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3AFROM
;+		(comment "Slot to hold the FROM side of the relationship. Always an instance of an EAS_Class")
		(type INSTANCE)
;+		(allowed-classes Lifecycle_Status_Usage)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot %3ATO
;+		(comment "Slot to hold the TO side of the relationship. Always an instance of an EAS_Class.")
		(type INSTANCE)
;+		(allowed-classes Lifecycle_Model_Timeline_Point)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass %3Alifecycle-start-relation "Relationship class from the start element to the first Lifecyle in a Lifecycle Model."
	(is-a %3ALifecycle-Model-Relation)
	(role concrete)
	(single-slot %3Arelation_label
;+		(comment "A text label that can be used for display, particularly in graphical models.")
		(type STRING)
		(default "start")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3AFROM
;+		(comment "Slot to hold the FROM side of the relationship. Always an instance of an EAS_Class")
		(type INSTANCE)
;+		(allowed-classes Lifecycle_Model_Start)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot %3ATO
;+		(comment "Slot to hold the TO side of the relationship. Always an instance of an EAS_Class.")
		(type INSTANCE)
;+		(allowed-classes Lifecycle_Status_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass %3AReference-Model-Relation
	(is-a %3AEA_Support_Relationship)
	(role abstract)
	(single-slot %3AFROM
;+		(comment "Slot to hold the FROM side of the relationship. Always an instance of an EAS_Class")
		(type INSTANCE)
;+		(allowed-classes EA_Class)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot %3ATO
;+		(comment "Slot to hold the TO side of the relationship. Always an instance of an EAS_Class.")
		(type INSTANCE)
;+		(allowed-classes EA_Class)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass %3ABusiness-Ref-Arch-Model-Relation
	(is-a %3AReference-Model-Relation)
	(role abstract)
	(single-slot brm_relation_in_business_reference_architecture_model
;+		(comment "The Business Reference Architecture Model that contains this dependency")
		(type INSTANCE)
;+		(allowed-classes Business_Reference_Architecture)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot %3AFROM
;+		(comment "Slot to hold the FROM side of the relationship. Always an instance of an EAS_Class")
		(type INSTANCE)
;+		(allowed-classes EA_Class)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot %3ATO
;+		(comment "Slot to hold the TO side of the relationship. Always an instance of an EAS_Class.")
		(type INSTANCE)
;+		(allowed-classes EA_Class)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass %3ABRAT-TO-BRAT-REFERENCE-RELATION
	(is-a %3ABusiness-Ref-Arch-Model-Relation)
	(role concrete)
	(single-slot %3Arelation_label
;+		(comment "A text label that can be used for display, particularly in graphical models.")
		(type STRING)
		(default "depends on")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3AFROM
;+		(comment "The usage of a Business Process that is dependenton another in a Business Reference Architecture")
		(type INSTANCE)
;+		(allowed-classes Business_Reference_Architecture_Type)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot %3ATO
;+		(comment "The usage of a Business Process upon which another is dependent in a Business Reference Architecture")
		(type INSTANCE)
;+		(allowed-classes Business_Reference_Architecture_Type)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass %3AApplication-Ref-Impl-Model-Relation
	(is-a %3AReference-Model-Relation)
	(role abstract)
	(single-slot %3AFROM
;+		(comment "Slot to hold the FROM side of the relationship. Always an instance of an EAS_Class")
		(type INSTANCE)
;+		(allowed-classes EA_Class)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot ari_relation_in_application_reference_implementation_model
;+		(comment "The Application Reference Impementation Model that contains this dependency")
		(type INSTANCE)
;+		(allowed-classes Application_Reference_Implementation)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot %3ATO
;+		(comment "Slot to hold the TO side of the relationship. Always an instance of an EAS_Class.")
		(type INSTANCE)
;+		(allowed-classes EA_Class)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass %3AARIT-TO-ARIT-REFERENCE-RELATION "A dependency relationship between two elements within an Application Reference Implementation"
	(is-a %3AApplication-Ref-Impl-Model-Relation)
	(role concrete)
	(single-slot %3Arelation_label
;+		(comment "A text label that can be used for display, particularly in graphical models.")
		(type STRING)
		(default "depends on")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3AFROM
;+		(comment "The usage of an Application Provider (Role) that is dependent on another in an Application Reference Implementation")
		(type INSTANCE)
;+		(allowed-classes Application_Reference_Implementation_Type)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot %3ATO
;+		(comment "The usage of an Application Provider (Role) upon which another is dependent in an Application Reference Implementation")
		(type INSTANCE)
;+		(allowed-classes Application_Reference_Implementation_Type)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass %3AApplication-Ref-Arch-Model-Relation
	(is-a %3AReference-Model-Relation)
	(role abstract)
	(single-slot %3AFROM
;+		(comment "Slot to hold the FROM side of the relationship. Always an instance of an EAS_Class")
		(type INSTANCE)
;+		(allowed-classes EA_Class)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot %3ATO
;+		(comment "Slot to hold the TO side of the relationship. Always an instance of an EAS_Class.")
		(type INSTANCE)
;+		(allowed-classes EA_Class)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass %3AASU-TO-ASU-REFERENCE-RELATION
	(is-a %3AApplication-Ref-Arch-Model-Relation)
	(role concrete)
	(single-slot %3Arelation_label
;+		(comment "A text label that can be used for display, particularly in graphical models.")
		(type STRING)
		(default "depends on")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3AFROM
;+		(comment "The usage of an Application Service that is dependent on another in an Application Reference Architecture")
		(type INSTANCE)
;+		(allowed-classes Reference_Application_Service_Usage)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot %3ATO
;+		(comment "The usage of an Application Service upon which another is dependent in an Application Reference Architecture")
		(type INSTANCE)
;+		(allowed-classes Reference_Application_Service_Usage)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass EA_System_Data_Management "Classes that support the management of data in an Essential repository"
	(is-a EA_System)
	(role abstract))

(defclass EA_Reference_Auto_Create_Schema "Represents the rules to be applied when auto-populating the ea_reference slot of instances of a specific meta-class"
	(is-a EA_System_Data_Management)
	(role concrete)
	(single-slot ea_reference_auto_create_schema_for_class
;+		(comment "The meta-class for whoich this ea regference auto cretae schema is defined")
		(type INSTANCE)
;+		(allowed-classes %3AESSENTIAL-CLASS)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot system_ea_reference_auto_create_enabled
;+		(comment "Defines whether auto-population of the ea_reference slot is enabled")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot system_ea_reference_suffix_path
;+		(comment "Defines an instance navigation path (in dot notation) to the slot value used as the suffix string of the auto-generated ea reference")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot system_ea_reference_counter
;+		(comment "Holds the counter of instances that have been created and had their ea_reference slots auto-populated")
		(type INTEGER)
		(default 0)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot name_
;+		(comment "A descriptive name of the element in the model.\\n(NOTE: A unique, internal reference is managed separately by the system.)")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot system_ea_reference_padding
;+		(comment "Defines the number padding that should be applied to counter segments of an auto-populated ea_reference")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot system_ea_reference_prefix
;+		(comment "Defines a prefix string to be added to the beginning of the auto-generated ea reference")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot system_ea_reference_path_segment_separator
;+		(comment "Defines the character or string to be used as a separator between segments of an ea_reference")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot system_ea_reference_prefix_path
;+		(comment "Defines an instance navigation path (in dot notation) to the slot value used as the prefix string of the auto-generated ea reference")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot system_ea_reference_suffix
;+		(comment "Defines a suffix string to be added to the end of the auto-generated ea reference")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot system_ea_reference_counter_path
;+		(comment "Defines the relationship navigation path to the instances that should be used for the counter segment of an auto-populated ea_reference")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot system_ea_reference_auto_create_current_status_message
;+		(comment "Contains any messages related to the current status of this EA reference auto create schema, e.g. issues with duplicate prefixes, malformed paths etc")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write)))